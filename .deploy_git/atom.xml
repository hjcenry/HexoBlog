<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Henry Blog</title>
  
  <subtitle>Javaer</subtitle>
  <link href="http://www.hjcenry.com/atom.xml" rel="self"/>
  
  <link href="http://www.hjcenry.com/"/>
  <updated>2020-09-29T03:25:11.720Z</updated>
  <id>http://www.hjcenry.com/</id>
  
  <author>
    <name>Henry He</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java游戏服务器成长之路---三年技术成长总结</title>
    <link href="http://www.hjcenry.com/2020/09/28/Java%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E4%B8%89%E5%B9%B4%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E6%80%BB%E7%BB%93/"/>
    <id>http://www.hjcenry.com/2020/09/28/Java%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E4%B8%89%E5%B9%B4%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E6%80%BB%E7%BB%93/</id>
    <published>2020-09-28T14:23:19.000Z</published>
    <updated>2020-09-29T03:25:11.720Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，我是三年没正经更新过博客的何…大成？何小成这个笔名已经不适合我了，因为今年我已经28了，一眨眼，我也是有5年工作经验的工程师了。<br>回想起来，人生的每个阶段总会羡慕比我们年龄大，或者比我们经验丰富的前辈，<br>比如说：幼儿园小班羡慕幼儿园大班，小学一年级羡慕小学六年级，初一羡慕初三，高一羡慕高二（高三没啥可羡慕的），大一羡慕大四，毕业羡慕工作三年，工作三年羡慕工作五年，以此类推。<br>现在，我工作五年了。<br>-<code>你终于成为了你想成为的人...吗？</code></p><a id="more"></a><h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><h2 id="经验积累"><a href="#经验积累" class="headerlink" title="经验积累"></a>经验积累</h2><p>本文标题有没有一种似曾相识的感觉，没错，《Java游戏服务器成长之路》系列，已经停更三年，这三年…我经历了换工作，考驾照，结婚，还有三年几乎不停的加班。这期间，我也时不时还回味一下，我三年前的技术文章，以及每年年末我自(bei)愿(po)写得年终总结。客观的说，我也确实因为加班太多逐渐放弃了写博客，有时候回想起来，之前的工作是真的轻松啊。不过话说回来，我在这家公司的这三年，也确实让我的能力有了质的飞跃，这其中不仅仅是技术能力，也包括个人的经验，开发的思考角度，考虑问题的全面性等。记得刚入职的那几个绩效考核时，老大中对我评价一直是有这么一句的“学习成长快，但经验不足，需要不断吸取经验”。对于这句话，我是认可的，也正是这个客观的评价，才让我在开发中注意到很多前辈留下的经验教训，很多东西，别人踩过的坑，我们完全吸取经验后是可以避免的。几年的时间里，也让我在游戏服务器开发这块真正有了经验的积累，我逐渐能明白为什么有的地方要这么写，而不是那么写，逐渐能明白这个数据为什么不能直接捞库，逐渐能明白为什么要写设计文档，为什么设计代码结构要考虑到各种扩展性。这些东西在我工作几年后，都慢慢能领悟到了，也能以更加理性全面的角度去看待每一个问题，每一个需求。<br>-<code>踩坑一次可以，一直踩坑不行</code></p><h2 id="再谈写书"><a href="#再谈写书" class="headerlink" title="再谈写书"></a>再谈写书</h2><p>现在回想刚毕业那一两年写得文章，也就是《Java游戏服务器成长之路》系列的前几期，实在是有些狂妄和虚无，因为很多东西，我是没有太多实际应用经验的，仅凭网上天花乱坠的描述以及自己浅薄的demo代码，就吹出了一篇篇类似“架构”“源码分析”“方案”等高大上的字眼。而这三年稳扎稳打的进步中，我也逐渐明白，之前吹上天的技术，其实我并不能完全理解它实际性的内容，甚至有些只是懂个皮毛而已，而这些东西真的是需要你慢慢静下心去看，从架构思想，实际应用，甚至翻看源码，才会理解它的终极奥义。以上也包括之前出的第一本书《深度解析Java游戏服务器开发》，对，没错，“深度”二字，实则并不深度，整本书，也大概是在堆砌代码，重要概念，框架思想，源码分析，都是一带而过，最后在网上收到大量差评我也能理解，这本书说是一本书，更像是一个卖钱的商品，出版社以“深度”“Java游戏服务器”这些字眼卖钱（市面上几乎没有Java游戏服务器开发相关书籍），而我，则收到一笔对我来说还算不错的稿费，而书的质量，就很一般了。<br>好在第二年，我放下心态，抛弃“深度解析”这样的字眼，以“入门”“实战”为名字的第二本书《Cocos2d-JS游戏开发快速入门到实战》，而且也抛弃了上一本书的粘贴代码，这本书的每一个demo都是我不断调试运行的实例，甚至后来，我把其中的《飞机大战》小游戏用cocos creator重写了一遍，上了微信小游戏，并小赚了三千多块钱，到现在为止，每个月还有七八块的收入（也不知道为何还有人这么执着这个游戏，哈哈哈）。第二本书，是以Cocos2d-JS技术为主，其中有一部分服务器的内容也是用NodeJS写得，这块内容我自己本身也不是经验丰富的大牛，所以我基本上是以一个初学者的视角入手，带着读者入门Cocos2d-JS的开发，所以我感觉，这本书，更多的是面向大学或刚毕业不久，对游戏开发感兴趣的人。第二本书对于我自己来说，质量是比第一本高的，而网上的评论也基本是对这本书的肯定。</p><p>写书的过程是痛苦的，但也是学习的过程。写书的时候，尤其是写第二本书的时候，我更加注重自己在打字之前明白自己在说什么，在讲解一个知识点的时候，我会先自己弄得清清楚楚明明白白，这样我才能把它写出来。<br>当然了，后来我也就不写书了，一方面，是觉得自己确实还有很多东西不是特别清楚，另一方面，写书除了累，也赚不了几个钱，还不如写博客，反正我写文章也不是为了养家糊口，纯粹想要分享知识的兴趣爱好。<br>而第二本书的网评也让我意识到，对于我来说，书不是商品，是总结自己和分享传播知识的媒介，所以质量一定是第一位，书里面的内容，自己必须先整清楚。<br>-<code>人可以飘，但不能飘的太远</code></p><p>以上是承接我三年前的前情提要，希望看完还能回忆起来，曾经我也是博客更新频率很高的一个博主。</p><h1 id="后期计划"><a href="#后期计划" class="headerlink" title="后期计划"></a>后期计划</h1><p>说完前情提要，不得不说下我后边的计划啊。大家可能会想，作者会不会写完这篇就销声匿迹了，又停更了呢？我告诉你，完全有可能的哈！但至少目前不是，因为前段时间，我也不知道我怎么了，我去申请了一个域名，hjcenry.com，然后还通过了备案，申请了https证书，换句话说，我现在有一个正规经营的个人网站了，我要是不写点啥，总感觉对不起我这正规域名。然后我就陷入了沉思，我写啥呢，经过我的思考啊，我这不是三年没写技术文章了嘛，这三年，我都在开发一个mmo+arpg的项目，于是我想，就根据我现在的项目，我写一个mmo系列的java游戏服务器开发的系列吧，分享一下目前Java游戏服务器开发mmo的常规思路，分享一下我对于mmo服务器中常用功能架构的看法（请注意用词——我对于xxx的看法，毕竟已经28了，不能像三年前写文章那么狂妄自大了，用词要稳重得当）。</p><p>后期java游戏服务器mmo开发系列中，我准备从服务器的io，线程模型，数据落地，常见功能（如聊天，组队，aoi，寻路等）入手，不会的我就恶补我的项目源码，项目我带不走，但这里面的技术思想我必须带走，可能更的不会太快，毕竟如果遇到不会的我也需要再继续学习一下的，但我保证每一期，都充满干货。当然了，虽说是我目前的项目，但我仅从技术思路出发，不会涉及具体代码，最多自己写点示例代码，都是干这行，技术保密的意识还得有，但我相信懂得人自然会懂得如何把思路实际应用到项目中的。</p><ul><li><code>对了这个系列还没有名字呢，不如你们给我起个名字？</code></li></ul><h1 id="面试分享"><a href="#面试分享" class="headerlink" title="面试分享"></a>面试分享</h1><p>诶？你们看到这是不是以为我要跳槽了？哈哈，不是的。工作五年了，我也是第一次正式的作为面试官去面试别人，对的，是面试，但我成了面试官。这也不是啥值得光荣的事情，只是因为公司校招，参加面试的应届生太多，老大面不过来而已，所以我们组里边挑了3个人帮着一起面试，而我，也是因此第一次去面试别人。嗯，我成为了5年前刚毕业的我最讨厌的人。</p><h2 id="关于“造火箭”"><a href="#关于“造火箭”" class="headerlink" title="关于“造火箭”"></a>关于“造火箭”</h2><p>我们这次面试的都是校招的应届生，所以我也想借此机会，分享一下我对于应届毕业生找工作面试的看法。首先要说的是，在我这的通过率挺高的，我面了8个人，过了5个，后来老大说太多了，让我又缩减到了2个，而正好，有两位我是觉得非常优秀的。首先要说的是，如果现在的我，面试5年前的我自己，我是肯定不会过的，打个比方，当我问：你知道HashMap源码吗？你知道JVM里面的内存模型吗？你知道JVM有哪些GC算法吗？能写一下判断回文数的算法吗？五年前的我，多半会面完就跟室友抱怨：这面试官怕不是个傻子吧？面试造火箭，工作拧螺丝？但我想对五年前的我自己说的是，除了最后一道手写算法题是我自己最近leetcode上刷的一道题之外，其他的几个问题，工作中真的是会比较在意的，举个例子，我们经常用的HashMap，如果你只知道new,put,remove而不知道底层数据结构和内部链表和红黑树的转换的话，你永远也不知道你的数据在put之后都经历了什么，你HashMap的使用效率怎么样，它是否线程安全；如果你不知道JVM内存模型，不知道GC算法，你就不知道，你new出来的对象在JVM哪个区域，它什么时候被回收，当然了，你可以不知道，那就相当于，你把你的钱，借给了一个你完全不了解人，你不知道他借你钱干什么，你也不知道他什么时候会还你钱，或者说，你的钱基本上是有去无回了。所以说，这些东西，看似是造火箭，而且也不会真的让你手写一个HashMap，手写一个JVM，但如果你不了解他，你对于Java的理解就永远止步于此。五年的我，也是经常被这样的问题问懵逼，但工作以后才发现，火箭不用我造，但需要我懂，不然我可能都不知道这火箭要怎么启动。</p><h2 id="学而思"><a href="#学而思" class="headerlink" title="学而思"></a>学而思</h2><p>毕业前听说的工作以后面试就是一千个里面挑一个，其中在我们这一行，不至于这么残酷，不像是公务员事业单位那样，但我们这行也是要挑人的，比如我这次面试，我一共面了8个人，通过了5个，这5个倒不是说我放水，而是真的都很不错，淘汰的三个人，是很明显的刚找工作时一脸懵逼的状态，而这5个，是真的有好好准备了面试的，我问的问题也是能答个八九不离十，而我最中意的其中两个，不仅能把我的问题回答的八九不离十，还能自己往外拓展，并且当我觉得他们只是背题时，我出了一些技术的实际应用场景，他们也能顺利的答出来我想要的答案，说明他们是真的学以致用的，深入理解了概念，即使没有实际应用经验，也能想象到这个技术能应用到哪些地方的，举个例子，我的问题中有其中一个问题“TCP和UDP的区别和特征”，这个题看似很简单，背背题也能蒙混过关，但我会分三步走，第一步问一些网络的基础问题，比如四层网络协议，TCP三次握手，这一步，我8个人里筛选掉了3个人，第二步，我会问TCP和UDP的区别和特征，这一步，能基本上都说出来的有5个人，最后一步，我会问“你认为视频通话是使用TCP还是UDP协议，说明原因”，这一步，筛选出最后两个人。其中一个985的研究生，可以清晰的跟我分析出视频通话是UDP并且说明为什么是UDP。大学以及工作以后，我们学一个东西时一定要明白你学它的意义，它能做什么，它为什么能这么做，这样才能帮助你以后更好的应用它，我认为这是一个终生不变的学习方式——知其然，知其所以然。</p><p>我面试的8个人里，有985，211，有研究生，有的各种证书，有的雅思 CET4 CET6全都过了，但在面试的时候，真正考验的还是你对知识掌握是不是仅仅局限于大学ppt上面的概念。其中总的来说，在面试的时候，大家都是应届生，甚至本科应届生和硕士应届生我也是全都同等看待，面试官更加看重的还是你对基础知识的掌握程度和你学习的能力，都是刚毕业，大家都没有项目经验。那面试的时候，更多就是看你的基础了，你说你是985 211 研究生，但是啥也一知半解，我们招进来也是需要接手我们手里的活，谁会给自己招一个累赘呢，肯定都想要聪明能干，基础越扎实越好。面试官和你的关系，很可能以后就是同事，想象一下如果跟你一起干活的人，如果基础能力很弱，那可能吃苦的就是你，因为你要帮他干完他不会的活。</p><h1 id="言归正传"><a href="#言归正传" class="headerlink" title="言归正传"></a>言归正传</h1><p>三年的博客停更，倒也让我累积了不少知识储备，虽然说我在Java游戏开发的路上越走越远，和互联网技术开始慢慢有了分歧，慢慢的不太了解互联网用到的技术，但我在游戏服务器的实时通信，高效内存管理，数据管理等方面有了更深的理解，以后我也会尽量抽出时间，分享我在开发中遇到过得实际问题和解决思路。还是上文提到的，后续我会更新一个java游戏服务器的mmo开发思路（或许思路不局限于java）系列文章，分享一下这三年我参与的这款项目的开发思路于各种实际场景的解决方案。</p><hr><p>完结撒花，关机睡觉！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大家好，我是三年没正经更新过博客的何…大成？何小成这个笔名已经不适合我了，因为今年我已经28了，一眨眼，我也是有5年工作经验的工程师了。&lt;br&gt;回想起来，人生的每个阶段总会羡慕比我们年龄大，或者比我们经验丰富的前辈，&lt;br&gt;比如说：幼儿园小班羡慕幼儿园大班，小学一年级羡慕小学六年级，初一羡慕初三，高一羡慕高二（高三没啥可羡慕的），大一羡慕大四，毕业羡慕工作三年，工作三年羡慕工作五年，以此类推。&lt;br&gt;现在，我工作五年了。&lt;br&gt;-&lt;code&gt;你终于成为了你想成为的人...吗？&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="总结" scheme="http://www.hjcenry.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>我的2019</title>
    <link href="http://www.hjcenry.com/2019/12/25/%E6%88%91%E7%9A%842019/"/>
    <id>http://www.hjcenry.com/2019/12/25/%E6%88%91%E7%9A%842019/</id>
    <published>2019-12-24T17:10:00.000Z</published>
    <updated>2020-09-29T03:25:11.725Z</updated>
    
    <content type="html"><![CDATA[<p>看看这个标题，没错，这又是一篇年终总结，上一次写年终总结还是2017年，而2018年直接就跳过没有写。之前的业余时间的确是很多，现在我连休息时间也变少了，所以一年都很难产出一篇，前段时间闲了一点，才很艰难的挤出了一篇关于我对Python这门语言的理解。其实没有用文字记录下来，并不代表我这两年什么都没有做，相反，我经历了太多的事情，才让我连用文字记录的时间都没有了。那么接下来，我会用一整篇的篇幅来告诉大家，这两年，我都做了什么，学会了什么，完成了什么。</p><a id="more"></a><p><code>——一名游戏行业程序员的生活记录</code></p><h2 id="一、关于写书"><a href="#一、关于写书" class="headerlink" title="一、关于写书"></a>一、关于写书</h2><p>大概是从入职上家公司开始，我开始学着写作，因为工作中需要我去学习很多新的东西，而学会一个东西最好的方式就是把你学会的从头到尾都详细解释出来，所以我开始了写博客，我写的东西其实并不高深，都是基础知识的运用，甚至在文章中加过很多修辞，故弄玄虚，夸大其词，而实际上却是知识很基础的一部分内容，而这些恰恰是因为我最初开始写文章的时候，自己的基础并不扎实，而又想急于求成所造成的结果。</p><p>2016年，我花了几乎一年的时间写了一本书《深度解析Java游戏服务器开发》，我的确是倾注了个人的大部分时间和精力，但是老实说，这本书的内容特别的华而不实，这也是我后来对我那本书的一个自我反省，甚至说我想在两年后的今天，去重写里面的内容。那本书一经推出后，我也看了网上的评论，收获了不少差评，里面确实有我的个人原因，本身基础不太扎实的我，以一种急于求成的姿态去写了这样一本书，用网友的评论来说，这本书的确是堆砌代码且无营养。</p><p>后来第二年，也就是2017年，我又开始写第二本书《Cocos2d-JS游戏开发快速入门到实战》，总结第一本书的经验教训，在写第二本书的时候，我特别注重书里内容的图、文、代码相结合，内容可以不多，但一定要准确，精简，让读者能看懂。同样是一年的时间，我完成了我的第二本书，这本书从销量上来说，可能还不如第一本书，因为JS技术的普遍性以及用Cocos2d-JS来做游戏的普遍性相对Java的使用普遍性来说要少很多，不过对我个人来说，第二本书是我结合了上一本书的经验教训写出来内容更加优质的书，写书的收入并不多，也就小一万块钱，但对于我个人的意义真的是不一样的，单从写书这件事情来说，就是对我个人意志力的一个巨大的挑战，你要牺牲近半年的休息时间用来写书，写案例，写示例代码，保证所有的代码都是可运行的。好在最后结果还不错，虽然销量可能并不高，但我看到网上的评论里大部分是好评，甚至有大学生或者刚毕业的开始工作的人私信我，问我一些职业发展上的问题，那个时候我就在想，我可能并不能给你们什么有用的建议，但我的书只要可以让一个人开始对游戏开发感兴趣，那我就是成功了。</p><h3 id="果然，坚持与认真，是做成一件事情最重要的品质。"><a href="#果然，坚持与认真，是做成一件事情最重要的品质。" class="headerlink" title="果然，坚持与认真，是做成一件事情最重要的品质。"></a><code>果然，坚持与认真，是做成一件事情最重要的品质。</code></h3><h2 id="二、关于工作"><a href="#二、关于工作" class="headerlink" title="二、关于工作"></a>二、关于工作</h2><p>从写完第二本书之后，我几乎停止了写作，因为在2017年初入职了我现在这家公司后，我的业余时间大大减少，那个时间点，游戏行业面临寒冬，版号开始限制，审查开始严格，大批量的不合格游戏需要整顿，当然，从宏观上来看，这是对游戏行业的规范的合理化，但最后落在我们每一个游戏行业的螺丝钉——程序员来说，可能就是加班以及赶工。从长远来看，加班并不影响我们做一件事情的热情，如果我正在做的是一件成功率很高的产品来说，加班赶工把它做好的意义，要远大于优哉游哉混日子的意义。对于我所在的项目组来说，我们所做的产品，在我看来也确实是有希望做成的，所以我选择了留在这里，并且到现在为止，已经做了快三年了，在前几天第一次内测的情况来看，我们的游戏确实是有希望成为游戏界的一款爆款游戏，测试数据要远好于同行产品，也获得了玩家和媒体的一致好评。</p><p>在游戏测试的当天，我们就看到B站已经有主播在开始直播了，跟着有不少玩家发弹幕和评论，从网上的评论来看，这款游戏的惊艳程度，远远超过了玩家的预期，虽然也有很多不足的地方，但从大部分玩家来看，都是对我们的游戏充满了期待，希望能快点优化并上线，不管怎么样，看到网上铺天盖地的好评，以及最后的测试数据来看，我们最近一两个月的连续加班都是有意义的，而测试的三天时间，我也亲自玩了我们游戏，从玩家的角度来说，我也是对这款游戏充满了期待。</p><p><code>测试结束后的玩家一个宣传视频</code><br><a href="https://www.bilibili.com/video/av79947489]">https://www.bilibili.com/video/av79947489]</a>(<a href="https://www.bilibili.com/video/">https://www.bilibili.com/video/</a></p><p>从整个项目来说，它在朝一款创新的类主机体验的ACT游戏发展，并且是一款有很大几率能做成的产品。从我个人成长来说，我也非常有幸从项目初期就加入到这款游戏的开发，我的个人能力也快速的成长了起来，并且我的老大对我的成长很有帮助，大到为人处世，小到编码规范，都对我有很重要的影响，有人说，工作就是要跟对好的项目，和跟对好的领导，现在这两样我都有了。在这个项目组的这几年，是对我的职业发展最快的几年。得益于老大的照顾，我能了解到项目整体的技术结构，我经历过项目战斗的状态同步到帧同步的转变，参与过核心战斗的开发，写过部分功能的可扩展的底层框架代码，对接过项目上线部署更新流程，也自己写过一些提高工作效率的工具。总的来说，参与这个项目，让我从头到尾都了解了一遍一款游戏的制作需要经历些什么，也让我的个人技术以及职业生涯成长了很多。虽然是游戏行业的新生代码农，但我也感觉我并没有走多少弯路，一直在正确的方向上，一直向前走。</p><h3 id="在正确的方向上，摸索和成长。"><a href="#在正确的方向上，摸索和成长。" class="headerlink" title="在正确的方向上，摸索和成长。"></a><code>在正确的方向上，摸索和成长。</code></h3><h2 id="三、关于生活"><a href="#三、关于生活" class="headerlink" title="三、关于生活"></a>三、关于生活</h2><ul><li>#####婚姻<br>2019年，我27岁了，不算大也不算小的年纪，这一年，我完成了人生的婚姻大事，实现了第一次的出国自由行，喜欢上了拍照和拍视频，也开始对人生产生思考，开始对生命和宇宙产生好奇。</li></ul><p>年初的时候，我完成了自己的人生大事，从那天之后，我可能就真的长成大人了，我需要对自己负责，也需要对新成立的小家负责。在婚后的一年时间里，其实我也没有太多不一样的感觉，我们还是很正常的生活，正常的工作，早上一起起床，一起洗漱，一起上班，晚上先后回家。有时候我加班很晚，她也会等到我回家，周末偶尔看看电影，做做饭，或者去稍远一点的郊区自驾游，拍拍照，这种感觉就像是，没有什么特别，没有什么不一样，但却有着陪伴的温暖，不可或缺。有个人和我一起在异地他乡赚钱生活，是一件很辛苦，却很幸福的事情。</p><h3 id="生活，平平淡淡才是真。"><a href="#生活，平平淡淡才是真。" class="headerlink" title="生活，平平淡淡才是真。"></a><code>生活，平平淡淡才是真。</code></h3><p><img src="http://upload-images.jianshu.io/upload_images/1472037-d8986d58e1e1856f.jpg" alt="结婚"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-2ea959c46cf7703d.jpg" alt="结婚"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-adefcafc8ebf00cf.jpg" alt="结婚"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-7104098758fc2ec6.jpg" alt="结婚"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-4c7ec957ea7dca7d.jpg" alt="结婚"></p><ul><li>#####旅行<br>结婚之后，接着我又做了第二件人生的第一次尝试——出国旅游。请了长达12天的婚假（10天婚假连 一个周末），去了泰国的普吉和清迈，全程的签证、酒店、机票、景点路线以及各种注意事项，都是我和罗同学两个人研究的，并且全程下来，整个旅行的感受特别好，完全不同于各种购物旅游团，完全就是12天的度假休闲。休假的前的一个月，我们就开始研究这次旅行的所有攻略，并且制定了excel表格，规划好了所有的航班和酒店，并且计算了预计价格。<br><img src="https://upload-images.jianshu.io/upload_images/1472037-aba39822f01b225b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="行程安排"><br>上网搜索我需要准备那些APP<br><img src="https://upload-images.jianshu.io/upload_images/1472037-eede58fc739732a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="APP"><br>准备那些物品<br><img src="https://upload-images.jianshu.io/upload_images/1472037-a81f4f70c1fb0146.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="物品准备"><br>甚至根据B站上那些旅游UP主的旅游视频规划了我出门旅拍都需要拍摄什么内容<br><img src="https://upload-images.jianshu.io/upload_images/1472037-985258b320fe60b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="VLOG设计"></li></ul><p>最后在一款叫出发吧的APP上详细罗列了我们的行程，并且整个自由行过程都按照行程一步一步的走。<br><a href="http://chufaba.me/journals/1055821">http://chufaba.me/journals/1055821</a></p><p>整个旅程下来，12天时间，加上购物等所有的花销，我们一共是花费了两万六左右，人均一万三左右，在我看来，是一次性价比很高的旅行。与跟团旅行不同，我们的旅游路线完全是自己制定，甚至可以任性修改，而且我们每天都是八点多才起床，九点多才出门，如果突然发现今天计划的景点突然不感兴趣了，想去另外一个景点，也是可以突然更改的，只要整体进度在计划之内，就不会对整体行程有什么比较大的影响。</p><p>在这次做了充足准备的泰国自由行中，我们也是度过了非常愉快的假期，拍了很多好看的照片和视频，包括泰国整个给我的印象也是一个非常开放的国度，大部分人的英语都特别好，很好交流，甚至在中国人密集的地方，小贩都能和你用中文聊天。这次去的两个地方分别有着不一样的风格，普吉岛的感觉是热情奔放，有热情的当地导游，有热闹的夜市小吃，有美丽的海岛风情，而清迈的感觉是悠然自得，阳光正好，心情舒适，能彻底放松身心。按照出行的规划的拍摄，我拍了很多视频片段，回来了精心挑选了一些片段以及音效音乐，剪成了一段小短片，也算是给我人生的第一次完全自己主导的出国自由行留下了一段美好的回忆。</p><p>泰国蜜月旅行<br><a href="https://www.bilibili.com/video/av47155696">https://www.bilibili.com/video/av47155696</a></p><h3 id="如果有时间，一定要出去旅行，看看外面的世界有多精彩"><a href="#如果有时间，一定要出去旅行，看看外面的世界有多精彩" class="headerlink" title="如果有时间，一定要出去旅行，看看外面的世界有多精彩"></a><code>如果有时间，一定要出去旅行，看看外面的世界有多精彩</code></h3><ul><li>#####摄影<br>说到拍照和拍视频，这也是我最近两年才突然学会的一项技能。大概是2015年的时候，罗同学不知道怎么回事，非要买一台相机，想学习拍照，后来不知道怎么的，相机就吃灰了，被搁置了，而近两年，我又不知道怎么回事，突然想要学习怎么拍照拍视频，尤其是今年，我经常会上B站去看看别人拍的照片和视频，学习前期拍摄技巧以及后期剪辑技术。就这样，一台四年前购买的Sony A7一代相机的使用率突然就高了起来，加上去年买了车，只要放假，就想要出去拍点好看的照片或者好看的视频，回家后期修图或者剪辑视频，而罗同学作为我的模特，也越来越喜欢让我给她拍照。慢慢的，摄影，也成了我除了打游戏以外的另一个爱好。</li></ul><p>不敢和各路大神相提并论，我喜欢摄影单纯只是想拍出美的照片，或者是剪辑一段好看的视频，每一次修照片或者剪视频，我都会觉得我之前拍的都是什么东西啊之类的想法，然后经常去看一些摄影UP主的视频去学习一些前期拍摄的技巧以及后期剪辑的技能。在我看来，时间不会停下来，但相机，可以留住一些珍贵的记忆。</p><p>今年年底的时候，也就是前几天，我终于狠下心决定升级一下我的拍摄设备，购买了Sony A7M3相机，由于我拍罗同学比较多，所以我也买了适合拍人像的55mm1.8镜头和85mm1.8镜头，并打算把原来的A7一代卖掉，但挂闲鱼上却至今也没有人要。遗憾的是，我刚买完相机和镜头，公司项目就开始忙起来了，一直也没时间出去拍一点东西，最近两天才闲下来，打算在后边的几个周末出去拍一下，把我的新设备用起来。这个我新产生的爱好，也是我记录生活的一种方式。</p><p>以下是一些我之前剪辑的视频：<br>百里山水画廊：<br><a href="https://www.bilibili.com/video/av70489540">https://www.bilibili.com/video/av70489540</a><br>丰宁坝上草原两日游：<br><a href="https://www.bilibili.com/video/av60763262">https://www.bilibili.com/video/av60763262</a><br>周末日常：<br><a href="https://www.bilibili.com/video/av60764806">https://www.bilibili.com/video/av60764806</a><br>奥森公园：<br><a href="https://www.bilibili.com/video/av60764187">https://www.bilibili.com/video/av60764187</a><br>世界公园：<br><a href="https://www.bilibili.com/video/av60763703">https://www.bilibili.com/video/av60763703</a></p><h3 id="摄影，是暂停时间最好的方式"><a href="#摄影，是暂停时间最好的方式" class="headerlink" title="摄影，是暂停时间最好的方式"></a><code>摄影，是暂停时间最好的方式</code></h3><h2 id="四、关于时间的猜想"><a href="#四、关于时间的猜想" class="headerlink" title="四、关于时间的猜想"></a>四、关于时间的猜想</h2><p>说到时间，我想起来之前在网上看到的一个小视频，里面有这样的一段话：“闭上眼睛想象，当你白发苍苍，七老八十的时候，你向上帝发问：神啊，能不能让我再活一次啊！上帝说，你闭上眼睛，然后时光倒流，这时候，睁开眼，你回到了现在，这一次，你打算怎么活？”。这是一个非常有意思的想象，从上帝视角来看，我其实是在进行我的第二次生命，并且命运如何我可以自己重新制定。视频的本意其实就是让我们把自己的命运掌握在自己手中。</p><p>而我想到了另一个关于时间的猜想，我今年27岁，这27年来，除了父母和亲戚，身边的同学，朋友，同事，都是不断在变换，身边的人形形色色，人来人往。如果12岁的我，能通过时间隧道看到未来的我，也就是现在的我的话，他会怎么想，是感叹身边都是完全陌生的人吗？还是看到我写着自己完全看不懂的代码？还是过着自己完全想象不到的生活？如果换成是16岁的我，20岁的我呢？</p><p>这不得不让我想到人们经常讨论的另一个问题，你真的活成了你所期望的样子吗？6岁的时候，我对未来世界的幻想就是长大做一名宇航员，去宇宙旅游，去其他星球旅游。抬头仰望的那一片星空，就是我最遥远的梦。12岁的时候，我对未来世界的幻想就是去大城市里生活。电视新闻里的大都市，就是我最遥远的梦。16岁的时候，我对未来世界的幻想就是去上海工作和生活。中国的国际经济中心，就是我最遥远的梦，20岁的我，对未来世界的幻想就是有自己的房子。车子，工作和生活，稳定的生活，就是我最遥远的梦。梦想变得越来越实际，眼光却也变得越来越狭隘，甚至不如6岁的我，在那双明亮的眼睛里，有着一整片的星空，可生活却只能这样，稳定的生活远好过遥远的星空。27岁的我，有父母赞助首付的一套小房子，有一辆工作两年攒钱买的很便宜的车，有在外人看来还算过得去的工作，有陪伴我的媳妇儿，有目前看来还算稳定并且日渐变好的生活。</p><p>但就如我前面所说的，如果是6岁的我，12岁的我，16岁的我，20岁的我，分别通过时间隧道看到他们未来的样子，是会感到喜悦，欣慰，开心，还是难过，失望，沮丧。这个问题的答案，或许也不是一定的，或许我没能去到心里向往的国际大都市生活和工作，但我却留在了中国的首都，或许我并不是登陆外太空星球的宇航员，但我却能写出构建人类未来的代码，或许我的经济并不是衣食无忧，但我却也能过得悠然自得。这样看来，或许6岁的我会对现在的我感到失望，12岁的我会对现在的我感到沮丧，但我相信16岁的我，20岁的我，并不会对这样的未来失望。曾经，我想去宇宙，去探索那些人类未知的东西，后来随着年龄的增长，可能我更喜欢的，是让自己的生活更加精彩。不能忘记抬头仰望星空，但也不能忘记脚踏实地走好每一步。</p><p>每当我怀疑自己“我真的活成了自己想要的样子吗”的时候，我可能还会想起来曾经那双明亮的双眼里的那一片星空，但生活会马上把我拉回到现实，努力工作，努力生活，过好眼前的一切，珍惜眼前的一切，才是我的人生目标，在我身边的一切，不才是我的整片星空吗。</p><h3 id="前进的时候，不要忘了仰望星空，仰望星空的时候，也别忘了脚踏实地"><a href="#前进的时候，不要忘了仰望星空，仰望星空的时候，也别忘了脚踏实地" class="headerlink" title="前进的时候，不要忘了仰望星空，仰望星空的时候，也别忘了脚踏实地"></a><code>前进的时候，不要忘了仰望星空，仰望星空的时候，也别忘了脚踏实地</code></h3><h2 id="五、我的2019"><a href="#五、我的2019" class="headerlink" title="五、我的2019"></a>五、我的2019</h2><p>2020年，是以前大部分科幻世界里存在的年份，2020年，有机器人，有人工智能，有足不出户了解天下事。不管科幻世界里的描述是否都成为现实，当它真正到来的时候，我们才感慨到，时间过得真的很快。2019，我过得还算不错，很顺利，2020年，未来，继续加油！</p><h3 id="未来已来"><a href="#未来已来" class="headerlink" title="未来已来"></a><code>未来已来</code></h3><h2 id="六、憧憬"><a href="#六、憧憬" class="headerlink" title="六、憧憬"></a>六、憧憬</h2><p>对于2020或者更遥远的未来，我也有一些憧憬</p><ul><li>去更多地方旅游</li><li>拍更多好看的照片和视频</li><li>项目上线赚钱</li><li>提升个人工作能力以及交往能力</li></ul><hr><p><code>下面贴一些2019年自己认为拍的不错的照片作为结尾吧</code><br><img src="https://upload-images.jianshu.io/upload_images/1472037-5d133a242f415602.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="普吉岛"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-93225e93d64afe08.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="普吉岛"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-58552ba076d79037.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="普吉镇"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-d1a0b00721a2d462.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="普吉岛"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-7638161852d52755.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="普吉岛"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-130619996006a2ee.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="蜜月岛"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-b234c56608b9c92a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="清迈"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-fc3d568850f253cd.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="清迈"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-b9cd52ba5e6c9435.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="加班凌晨回家"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-b83567e8175b8884.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="百里山水画廊"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-4d65e8caeecacaf5.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="纪念碑谷"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-358c3fc290088c41.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="纪念碑谷"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-7d855594b41759d1.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="纪念碑谷"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-c9afdec5905cd14c.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="首钢工业遗址"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-861adef451c8be7d.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="首钢工业遗址"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-0cdbf2d49e7bf809.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="首钢工业遗址"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-ecea7f62fca67f1a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="世界公园"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-969213d616cf89b5.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="坡峰岭"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-72682673ed542738.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="坡峰岭"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-f79cd2cc48843dc2.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="坡峰岭"></p><p><img src="https://upload-images.jianshu.io/upload_images/1472037-2d4061c49193650f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="坡峰岭"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;看看这个标题，没错，这又是一篇年终总结，上一次写年终总结还是2017年，而2018年直接就跳过没有写。之前的业余时间的确是很多，现在我连休息时间也变少了，所以一年都很难产出一篇，前段时间闲了一点，才很艰难的挤出了一篇关于我对Python这门语言的理解。其实没有用文字记录下来，并不代表我这两年什么都没有做，相反，我经历了太多的事情，才让我连用文字记录的时间都没有了。那么接下来，我会用一整篇的篇幅来告诉大家，这两年，我都做了什么，学会了什么，完成了什么。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="http://www.hjcenry.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://www.hjcenry.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>我的Python之旅</title>
    <link href="http://www.hjcenry.com/2019/11/10/%E6%88%91%E7%9A%84Python%E4%B9%8B%E6%97%85/"/>
    <id>http://www.hjcenry.com/2019/11/10/%E6%88%91%E7%9A%84Python%E4%B9%8B%E6%97%85/</id>
    <published>2019-11-10T15:22:00.000Z</published>
    <updated>2020-09-29T03:25:11.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作原因，近两年没写文章了，这里我分享几个我最近学习python的时候写的工具</p><h2 id="Python之旅"><a href="#Python之旅" class="headerlink" title="Python之旅"></a>Python之旅</h2><p>最近两年工作上，我真的是很忙，上一次更新文章还是2018-01-08写的年终总结。这接近两年的时间，我一直在忙于公司的项目<a id="more"></a>，关于996我就不在这里吐槽了，了解这个行业的都应该知道这是常事，这个要吐槽能吐槽到地老天荒，而我倒是挺怀念刚毕业参加工作前两年，每天按时上班下班，周末双休，这也能解释为什么最初我毕业的前两年文章产量那么高，现在真是的想写也没时间写了，心有余而力不足。</p><p>其实在工作上，我最近这两年，才是我真正的成长期，从一个项目的开始参与，技术上也是从各方各面都对服务器相关内容有了更深入的了解。我其实是挺喜欢研究一些好玩的 东西，正好这两年，Python特别火，于是我也开始入坑Python，可能是职业的原因，我是一个特别致力于用把重复的工作用一个轮子来解决的人，在工作中，我会做各种工具来简化我的日常重复的操作，生活中，我也开始喜欢用Python来解决我的一些问题，不过目前为止还用的不多，主要是Python功力还不太够，目前做过以下几件事：</p><h4 id="1-婚礼请柬统计脚本"><a href="#1-婚礼请柬统计脚本" class="headerlink" title="1.  婚礼请柬统计脚本"></a>1.  婚礼请柬统计脚本</h4><p>结合当时我自己做的微信端的请柬，用来发请柬给朋友们（当然了，装X成分比较大），然后用Python定时去统计有多少人点了愿意来。</p><p>婚礼请柬前端：<a href="https://github.com/hjcenry/wedding-invitation-client">https://github.com/hjcenry/wedding-invitation-client</a></p><p>婚礼请柬后端：<a href="https://github.com/hjcenry/wedding-invitation-server">https://github.com/hjcenry/wedding-invitation-server</a></p><p>婚礼请柬统计脚本： <a href="https://github.com/hjcenry/wedding-invitation-analysis">https://github.com/hjcenry/wedding-invitation-analysis</a></p><p>后续：因为大部分请的都是父母的朋友以及亲戚，所以做的这玩意儿，实际用处并不大。失败。</p><h4 id="2-进京证状态提醒推送"><a href="#2-进京证状态提醒推送" class="headerlink" title="2.进京证状态提醒推送"></a>2.进京证状态提醒推送</h4><p>因为本人是在北京北漂，然后买了个车，上了家乡的牌照，所以每周都需要申请进京证，于是就出现了好几次都忘记申请的情况，本着简化生活中一切繁琐事情的原则，我开始了用Python写一个进京证查询的脚本，并且能根据查询结果给我推送邮件或者微信，为什么不直接就用脚本给我申请了呢，一是懒，写查询是最简单的，二是安全，我想进京证系统怎么着也会有申请的验证吧，再者万一我的数据传错了，申请成了两天，或者照片传错，那就是申请不过，或者等进京证到期了再重新申请。</p><p>这个东西一开始写出来以后，最开始还挺好用的，我部署在我家里24小时开机的树莓派上（这个强大的东西已经完全被我拿来当一个小型Linux服务器使用了）。一开始都还挺好的，我有时候忘了，它只要查询到没有申请通过会一直微信提醒我。直到2019年11月1日，北京开始实行新的外地车管理政策，每个外地车一年只能申请12次进京证，每次最多7天，这都不是最关键的，最关键的是，我发现我的进京证申请脚本不管用了，原来进京证申请的接口变了，访问原来的接口只能返回403了。我只能重新对接口进行抓包分析，然而不幸的是，北京交警APP似乎做了什么，我一旦打开抓包软件的VPN，请求页面就返回服务器400，然而我正常使用，就能返回数据，不知道APP是做了什么校验，总之我原来的查询脚本就这么废了。失败</p><p>进京证状态查询：<a href="https://github.com/hjcenry/enterBjNotify">https://github.com/hjcenry/enterBjNotify</a></p><h4 id="3-消息推送服务"><a href="#3-消息推送服务" class="headerlink" title="3.消息推送服务"></a>3.消息推送服务</h4><p>这个东西算是从进京证状态查询中提炼出来的一个通用的脚本了，算是目前为止我应用Python最成功的的例子了，我把它部署在树莓派上，我可以直接通过命令调用python脚本，然后就能给任何我想要通知的人发消息，目前已经支持发送邮件和微信，微信接入了Server酱和WxPusher两个渠道。</p><p>消息推送服务：<a href="https://github.com/hjcenry/sender">https://github.com/hjcenry/sender</a></p><h2 id="一年一度双十一"><a href="#一年一度双十一" class="headerlink" title="一年一度双十一"></a>一年一度双十一</h2><p>现在是2019年11月10日，19点47分，还有4个小时13分钟，就是一年一度的双十一了，按照以往习惯，都是大家买买买的季节，其实在2011年以前，双十一最多只能算个光棍节，其实也是个新时代的概念，但在2011年淘宝第一次搞双十一开始，每年的双十一就成了大家一年一期待的狂欢购物街。</p><p>按照以往来说，双十一对我基本没有什么用，因为我是一个属于冲动型消费者，就是平时没什么兴趣就什么都不关注，一旦突然特别想要买某一个东西，我可能就会疯狂查询相关信息，然后立马入手。所以对我来说，根本不存在什么双十一，只要我乐意，每天都可以是双十一，除了三年前在双十一买了一个ikbc的青轴机械键盘以外，从来没买过东西。</p><p>那么今年不一样了，不知道什么原因，去年开始，我喜欢上了拍照拍视频，手中拥有一个三年前买的Sony A7一代相机，加一个28-70的套头，一直到现在都用的这个相机，老实说，这款相机加套头的素质还是不错的。然而今年我想追求最新的相机以及更好的镜头——Sony A7M3+蔡索55 1.8+Sony 85 1.8，这一套下来大概在两万多，朝思暮想了好久好久，年初就计划好了今年一定要购置一套更好的设备，不过同时今年也计划了要换最新款苹果手机，替换掉我四年前的iPhone 6s plus，所以其实来说，预算还挺紧张。</p><h2 id="用Python查询电商网站价格并通知"><a href="#用Python查询电商网站价格并通知" class="headerlink" title="用Python查询电商网站价格并通知"></a>用Python查询电商网站价格并通知</h2><p>这个为什么单独提出来一个大标题呢，因为这个确实是我目前为止最有用的一个Python应用，它的作用是能根据我提供的一个或多个商品id去查询我想要知道商品的价格，然后把各大电商网站的价格进行比对，记录一些重要信息，包括如下：<br>1.单个商品在某个平台的最低价格<br>2.单个商品在某个平台的当前价格<br>3.所有商品的最低价以及对应的平台</p><p>这里回应文章开头了，我说过今年双十一我更新我的摄影器材，根据以上信息，我就可以知道我想买的东西当前最低价格是多少，以及在哪个平台买最便宜。</p><p>我把脚本部署在树莓派上，并且每一个小时运行一次，查询一次价格（查询太频繁担心被封禁），然后每次查询如果出现了最低价，就调用上面提到的通用消息通知脚本给我发送微信通知，脚本在一周前就完成了，于是在一周的时间内，我不断收到价格变动的通知。这里我就想说了，京东是真的坑，它的价格是最飘忽不定的，今天降一两千，明后天就几百几百的涨上去了，不知道一会12点价格还会不会降下来。</p><p>查询电商网站价格：<a href="https://github.com/hjcenry/shopDetailNotice">https://github.com/hjcenry/shopDetailNotice</a></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>这里我只是分享下我自己对于python的学习已经应用，其实python这个脚本语言还可以做更多的事。我是一个Java后端开发，但在我眼里，python真的是一个易于上手，开发快捷的脚本语言，如果我要快速的写一个工具，我的第一选择一定是python而不是java，因为它写起来真的很快。不过苦于没有python基础，我写python代码都写的还不够python，都还带着java的代码风格，后续我一定会更加融入python的世界，让我的python代码看起来更加python。</p><p>本文就不详细解释代码了，通过贴上的github地址可以看到源代码，欢迎一起交流，有什么python学习的交流群也欢迎拉我入群啊，微信hjcenry，哈哈哈</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;工作原因，近两年没写文章了，这里我分享几个我最近学习python的时候写的工具&lt;/p&gt;
&lt;h2 id=&quot;Python之旅&quot;&gt;&lt;a href=&quot;#Python之旅&quot; class=&quot;headerlink&quot; title=&quot;Python之旅&quot;&gt;&lt;/a&gt;Python之旅&lt;/h2&gt;&lt;p&gt;最近两年工作上，我真的是很忙，上一次更新文章还是2018-01-08写的年终总结。这接近两年的时间，我一直在忙于公司的项目</summary>
    
    
    
    <category term="Python" scheme="http://www.hjcenry.com/categories/Python/"/>
    
    
    <category term="Python" scheme="http://www.hjcenry.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>2017随笔总结</title>
    <link href="http://www.hjcenry.com/2018/01/08/2017%E9%9A%8F%E7%AC%94%E6%80%BB%E7%BB%93/"/>
    <id>http://www.hjcenry.com/2018/01/08/2017%E9%9A%8F%E7%AC%94%E6%80%BB%E7%BB%93/</id>
    <published>2018-01-08T12:14:00.000Z</published>
    <updated>2020-09-29T03:25:11.708Z</updated>
    
    <content type="html"><![CDATA[<p>今天，已经是2018年1月8日，2017年已经过去，今天挤出来时间，来为我的2017做一个迟到的总结。回忆起上次写文章，是2017年2月16号了，那篇文章叫做《我在创业游戏公司的一年》。这一年时间，我没有写文章，20%是因为今年变得很忙，几乎没有太多的业余时间，剩下的80%嘛，嗯，是因为懒，哈哈！说实在的，没有写不代表这一年什么都没发生，相反，2017年，是我收货最大的一年，嗯，各方各面。</p><p>过去的2017年，我做了很多我一直很想做的事。<a id="more"></a></p><h2 id="完成了4次小型旅游"><a href="#完成了4次小型旅游" class="headerlink" title="完成了4次小型旅游"></a>完成了4次小型旅游</h2><p>还记得2016年写过一篇文章，计划2017年“能出门旅游一次，带上父母和女朋友”，这个小目标算是完成了，而且还超额完成了，因为17年，我们一共旅行了四次，第一次是五一青岛游，第二次是周末天津游，第三次是周末古北水镇游，第四次是元旦上海游。</p><p>五一青岛游，这是一次女朋友、我妈、我姨妈、我，我们四个人的旅行，也是今年最满意的一次旅行，整个过程很舒服，青岛也是个十分舒适的城市，那时天气还不算热，也不算冷，很适宜的温度，沙滩上晒太阳的感觉很舒服，青岛的海鲜很好吃，没有遇到新闻里的坑人大虾，青岛有着很典型的滨海城市的特色、海风、海浪、沙滩、海鲜，该有的都有。好玩，好吃，还划算，去的很值。</p><p>周末天津游，由女朋友、我、我姨妈、我舅妈我们四个人去的，之前我去过几次天津，印象还是不错的，印象很深的是有一次和同学来天津逛，天津的炸糕给了我很深的回味，很怀念天津炸糕的味道。可惜的是，这次天津游就不是那么顺利了，由于我们想要去天津的海边，于是我们在天津的塘沽地铁站下了地铁，一下地铁，就有很多人过来拉客，说到海边只要十元一位，我们算了下，自己坐车去也比这贵，于是就糊里糊涂的上了车，结果司机给我们拉到了不知名的海边，可以看出来，海边根本还没怎么开发，海水的颜色，就像黄河一样浑浊，这大概是我看过最脏的海水了，不知道是天津的海都这样还是只是这个地方是这样。那个地方很偏，只能通过他们拉客的车进出，不仅浪费了我们的时间，也坑了我们的钱，这大概就是最糟糕的一次天津游了，想想之前我们有同学在这里进了传销，我不是地域黑，但现在想想，天津整体给人的印象大概就一个字“骗”。</p><p>古北水镇游，这是一次三五好友的自驾聚会旅行，韵哥，欣妹儿，龚世伟，周帅哥，谢姐姐，罗倩还有我，司机是我丰弟——经常给老师开车的老司机，这次的旅行还是非常开心的，因为大家都是很久不见的朋友，能在北京聚在一起玩儿一次也是不容易，有的在考研，有的在工作，有的在培训，有的在读研，各自的生活都有着很大的压力，一起出门自驾旅行一次，也算是放松放松了。</p><p>元旦上海游，罗倩，侯玲，磊哥和我，我们四个人的旅行，到达当晚由黄懂请客吃饭，老实说，吃的不错，黄懂在饿了么省吃俭用，这回被我们一夜吃到解放前。第二天去了迪士尼，第三天，就累了一天……从此决定，节假日千万不要去游乐园的地方，真的是排队一小时，游玩五分钟，但不得不说的是，海盗船项目的360度身临其境大屏幕还是震撼到我了，另外小矮人矿山车也是很刺激，整体来说，就这两个项目最满意，其他的，基本都是好玩带来的感受不及排队带来的痛苦，只有这俩项目是值得排队的，遗憾的是极速光轮项目和飞跃地平线项目没能游玩上，听说是迪士尼的热门项目。经过了第一天的体力消耗，原本计划的第二天上海市区游也游不动了，真！的！不！想！走！了！，累趴了，31晚外滩人很多，元旦跨年活动也就取消了，遗憾的我们打车回去了，中间有个小插曲，就是打到车后，我们几乎等了一个小时才上到车，因为人真的太多了……</p><p>不管怎么说，2017年，我也是有了四次小旅行了，感受了各地的人文和自然风景，对此来说，我已经非常满意了。</p><h2 id="完成了多年的小目标"><a href="#完成了多年的小目标" class="headerlink" title="完成了多年的小目标"></a>完成了多年的小目标</h2><p>还没成年的时候，就想要开车了，我的记忆中，初中开始，家里就有车了，那时候最喜欢的事情，就是坐我妈的车到处走，去哪儿不重要，要的只是和爸爸妈妈坐在车里的感觉，我记得很清楚的是，当时我家车里有一股味道，大概是皮革味吧，离开家以后，闻到这种皮革味就想起坐我妈的车的感觉。18岁终于成年了，家里人担心我的安全就没允许我学车，而上了大学以后因为懒，我也没报驾校去学车。现在很后悔，因为工作以后，我需要花费更多的时间和金钱去学车，不过不管怎么样，我在12月18日，终于拿到了梦寐以求的驾照，这也算是完成了我多年来一个小小的心愿，中间过程还算顺利，就科目二考了两次，第一次因为太紧张，第一个项目倒车入库直接挂了两次，好在调整好心态后，第二次满分过了。拿到驾照以后，我就开始用一度用车APP到处开车练技术，在北京感觉还好，大家还是比较遵守交通规则，不过共享汽车是自动挡，不知道如果换成手动挡我还能不能熟练的起步停车。现在只想好好练练自己的技术，能做到开车时稳定心态，练好了，就能和家人或者朋友出去自驾游，想想还是很开心的。</p><h2 id="看过的最感动的电影"><a href="#看过的最感动的电影" class="headerlink" title="看过的最感动的电影"></a>看过的最感动的电影</h2><p>这么久以来，看过的电影也不少了，而国庆档的《缝纫机乐队》却是让我最感动的电影。电影描述的是主角和一个小镇的摇滚梦想，努力保卫小镇大吉他雕像和自己的摇滚梦想。我还记得当时我学吉他的时候，听了一段老师打的架子鼓，感觉特别帅，特别有范儿，后来去网上看了很多很帅的打鼓视频，觉得帅爆了，但我还是觉得，听现场的打鼓才是最震撼的。后来，我经常在后海酒吧门口听里面的人演奏，标准的吉他+贝斯+架子鼓+键盘，觉得玩儿摇滚乐的都特别酷。很遗憾自己小时候没有多接触音乐，没有多学习乐器，后来长大了，高三采取学一点吉他，仅仅一点，大学又去学了一些钢琴，也算是小小的满足了下曾经的梦想，至少，能看懂五线谱了，能生啃一个谱子，生练一个月把一首钢琴曲弹会，也算是一点小小的成就感。<br>而我的这些音乐梦，在这部电影里，真的完完全全被重述了出来，电影里，乐队第一次合作的时候，即兴演奏的那一段，我不知道为什么，也许是电影院的音效太好，我的心一下被震撼了，当时有眼泪充斥眼眶，或许这正是我多年来被埋没的梦。而就是这一段即兴的演奏，我甚至认为比后面完整的乐队演奏更为震撼，不知道为什么，很奇怪，我现在仍能想起当时在电影院被震撼的感觉。<br>后来看评分，《缝纫机乐队》甚至评分不如《羞羞的铁拳》，但是我认为这真的是我整个2017年看过最能震撼到我的电影，或许这是所有有着音乐梦的人共同的心声。回想起来，上一期引起我音乐共鸣的，是一部泰国电影，叫《音为爱》，一部描述高中生的音乐之路，同样是摇滚和梦想的元素，当时我也正在上高中，也是深深的被感触，甚至莫名其妙的喜欢上了电影里的泰语歌。<br>感谢大鹏导演，用电影，用他自己的音乐梦，唤起了我们曾经单纯美好的梦想。</p><h2 id="玩过的最深刻的游戏"><a href="#玩过的最深刻的游戏" class="headerlink" title="玩过的最深刻的游戏"></a>玩过的最深刻的游戏</h2><p>2017年，我也终于玩上了3A大作，《极品飞车20》《神秘海域》《GTA》《生化危机7》《直到黎明》《消逝的光芒》，太多太多大作了，相信所有人，心里都有一个游戏世界，而这些我们小时候都是很难体验到的，小时候玩游戏，总被认为是罪大恶极，总被灌输游戏是穿肠毒药的思想。长大后，再体验游戏这个东西，就会发现，好的游戏真是第九艺术，用一种艺术的形式，带我们体验一段神奇的旅程，感受不一样的世界。身在游戏行业圈，不得不承认的是，现在好游戏基本来自国外，国产游戏很难有什么好游戏，不知道何时开始的，国内游戏行业的发展方向就从用心做游戏变成了用心坑钱。庆幸的是，虽然艰难，我们国内，仍然有坚持做精品游戏的公司，以及独立游戏团队。因为，我支持ICEY，支持神舞幻想，希望能看到中国游戏行业在世界崛起的那一天，并且是以精品游戏为标杆，而不是过度商业化的圈钱产品。希望有更多的像仙剑之父姚壮宪这样优秀的行业大佬出现！<br>要说我玩过深刻的游戏，那必须是《最后的守护者》，又叫《食人的大鹫》，别看名字这么可怕，其他它讲述的是一个纯真少年和一直大鸟（或者叫大狗？）的奇妙旅程，游戏的开始，少年变和大鹫在一起，我扮演的就是少年，和大鹫从最初的陌生到熟悉，到亲密，到不可分离，我似乎能真切的感受到这一个游戏里虚拟的动物的存在，我好像真的有个朋友叫做Trico，它陪我渡过一个又一个的难关。而游戏最后的CG也终于让我忍不住落泪，这是我第一次玩游戏落泪，因为我真的感受到了那种与最亲密的朋友分离的痛苦。CG的最后，奄奄一息的少年，举起手对Trico下了最后一个命令——离开这里，大鹫才煽动翅膀飞走，看着大鹫离开的背影，我当时的心情真的很心酸，好在游戏的结尾，少年长大后，举起手中的铜镜，对Trico互换，远在山谷里的大鹫也似乎感受到了这样的心灵感应，最后点题，大鹫成为了山谷最后的守护者。整个游戏的故事背景最终也没有交代完全，其中还有很多玩家所不知道的事情，留下了悬念，但是少年与大鹫的感情，作为玩家的我是真真切切的感受到了。<br>真正的游戏大作，就如同音乐、电影一样，是一种艺术形式，通过更强的代入感，让玩家感受到游戏想要表达的真实情感。不能否定最近大火的竞技游戏的存在，但可以肯定是，这类游戏只能带我们实时竞技的快感，却没有任何实际的意义，而真正的大作游戏，是能引起你内心的共鸣，能让你对现实生活产生思考的好作品。</p><h2 id="做过的最坚持的事情"><a href="#做过的最坚持的事情" class="headerlink" title="做过的最坚持的事情"></a>做过的最坚持的事情</h2><p>去年，我写了一本书，叫做《深度解析Java游戏服务器开发》，说实话，书的内容并不“深度”，基本都是很基础的内容，不过也算是我日日夜夜辛苦写出来的，其中内容质量，相比其他书来说，不算太好。有一次，我还在北京的王府井书店见到有我的书售卖，当时觉得，这本书没白写。鉴于我对去年写的书的内容并不满意，2017年，我又花了半年时间，写了《Cocos2d-JS快速入门到实战》，这本书不算百分百的满意，但也算把我所有关于Cocos的知识抖出来了，如果还要我再写一本书，我好像真的就没什么能写的了。有一点遗憾的是，我的Cocos2d-JS的书刚写出来，临近年底，微信又推出了微信小游戏，而Cocos Creator能更好的支持微信小游戏的构建，这种情况就很尴尬了，我写的Cocos2d-JS，技术相对过气了，现在Cocos更加大力推崇使用Creator，希2018年我的书能够大卖吧，毕竟Cocos2d-JS也是能做微信小游戏的。<br>想起前半年写书的日子，也是很痛苦的，每天几乎是9点下班，回家就写书，写到12点再洗漱睡觉，可以说是非常辛苦了，每一章每一小节，我都要想办法通过一个实际的代码案例来阐述（感觉以后可以做个培训老师了），写书的同时，也算是巩固了我自己的知识储备。按照清华出版社编辑的说法，今年年底，我的书应该就能出来了，到时候，希望大家来两本，毕竟，这次这本书，销量与我收入有关了，哈哈哈！</p><h2 id="最荣幸的事情"><a href="#最荣幸的事情" class="headerlink" title="最荣幸的事情"></a>最荣幸的事情</h2><p>2017年年初的时候，我加入了云畅游戏，进入了鬼泣项目组，从进入到工作到现在，感觉这是我工作生涯中成长最快的一年。在上家公司的时候，我经历的阶段是探索和学习的阶段，在这家公司，我经历的是规范和进阶的阶段。在现在这家公司，我学到了更多的是如果更加规范的写代码，如何高效的写代码，了解了更多关于Java的泛型、反射、设计模式、枚举、JVM等。同时，团队的开发也让我有了更多与人沟通，团队协作的经验。我所在的项目组做的游戏也是我年少时玩过的划时代的ACT主机游戏——鬼泣，在当时来说，可以说是一流的动作游戏了，没有想到多年后的今天，我会亲自参与到游戏的手游版本的制作。说到手游，公司刚宣布与卡婊的合作的时候，游戏圈一片哗然，全是类似于“不要毁了我心中的鬼泣”“国内厂商，毁了”等消极言论，其实在我看来，手游和原作两者本身受众是不同的，我相信真正的动作游戏硬核玩家是不屑于玩儿手游的，我们这款产品无非做的就是一个情怀，吸引那些原IP里愿意体验简化版的鬼泣，以及新的手游玩家，算是同时面向一部分老的主机游戏玩家和一部分手游玩家。从公司以前的作品（《刀剑神域》《不良人2》）来看，我相信我们的《鬼泣》也会成功的，不期望成为爆款，至少达到《崩坏3》的水平，做出手游ACT的一代标杆。<br>2017年，我很荣幸成为了鬼泣项目组的一员！</p><p>很久没写文章，请原谅我流水账式的总结，只想安安静静的做个总结，来概括我的2017年！</p><p>来点彩蛋吧：<br>万万没想到的是，上家公司死掉的产品在快年底的时候，活过来了，这得感谢前同事的各种努力，年底突然的喜讯，也拿到一笔意外的小钱，希望我们可以继续越做越好！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天，已经是2018年1月8日，2017年已经过去，今天挤出来时间，来为我的2017做一个迟到的总结。回忆起上次写文章，是2017年2月16号了，那篇文章叫做《我在创业游戏公司的一年》。这一年时间，我没有写文章，20%是因为今年变得很忙，几乎没有太多的业余时间，剩下的80%嘛，嗯，是因为懒，哈哈！说实在的，没有写不代表这一年什么都没发生，相反，2017年，是我收货最大的一年，嗯，各方各面。&lt;/p&gt;
&lt;p&gt;过去的2017年，我做了很多我一直很想做的事。</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="总结" scheme="http://www.hjcenry.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="随笔" scheme="http://www.hjcenry.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>我在创业游戏公司的一年</title>
    <link href="http://www.hjcenry.com/2017/02/16/%E6%88%91%E5%9C%A8%E5%88%9B%E4%B8%9A%E6%B8%B8%E6%88%8F%E5%85%AC%E5%8F%B8%E7%9A%84%E4%B8%80%E5%B9%B4/"/>
    <id>http://www.hjcenry.com/2017/02/16/%E6%88%91%E5%9C%A8%E5%88%9B%E4%B8%9A%E6%B8%B8%E6%88%8F%E5%85%AC%E5%8F%B8%E7%9A%84%E4%B8%80%E5%B9%B4/</id>
    <published>2017-02-16T08:03:00.000Z</published>
    <updated>2020-09-29T03:25:11.725Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h1><p>从15年12月入职到前两天离职，我经历了一个创业游戏公司的由盛到衰的整个过程，从16年的下半年开始，每天上班就眼看着公司的状况一天不如一天。从另一方面来说，也算是映射了国内的大部分手游小团队的兴盛到衰落的一个过程。从最初移动端设备的兴起，带动的移动游戏行业的大规模爆发，大量的企业及投资进军手游行业，到如今盛极而衰，大量小团队一个一个的死去，一波又一波的泡沫破灭，手游行业这条路越来越难走<a id="more"></a>，加上去年天朝的版号新规，更是加剧了小团队的灭亡（我们团队失败的直接原因也是因为版号问题）。经历一个公司的由盛而衰，我觉得我也算是幸运的，从感觉到公司越来越不行的时候，我就告诉自己，一定要坚持到最后，亲眼目睹一下创业公司的生存之道，如果活下来了，皆大欢喜，如果死掉了，也能从中汲取一些教训（我的内心深处还是有在未来有一定资本和行业经验的基础上创业的渴望）。</p><h1 id="行业的逐渐规范"><a href="#行业的逐渐规范" class="headerlink" title="行业的逐渐规范"></a>行业的逐渐规范</h1><h2 id="响应号召"><a href="#响应号召" class="headerlink" title="响应号召"></a>响应号召</h2><p>整个过程中，我也逐渐明白马云说过的一句话“可以和政府谈恋爱，不要和政府结婚”，这句话一定程度上，诠释了如今的互联网企业与天朝政府的微妙关系，企业应该处理好和政府之间的关系，因为它们既能控制一个行业的兴起，也能控制一个行业的衰落，并且，它的政策，你必须积极响应。就如同16年的版号新规，最初引起了多少小团队的反驳，但，依旧没有用，在天朝制度下，响应号召，顺应脚步走就对了。</p><h2 id="黑色产业"><a href="#黑色产业" class="headerlink" title="黑色产业"></a>黑色产业</h2><p>反而观之，版号制度，对于小团队的确是毁灭性的打击，然而对于整个游戏行业来说，确实是逐渐规范的过程，在这个制度出现之前，有成千上万的团队，依靠的是盗版，劣质游戏内容来获取利益，这样的游戏，的确是游戏界的毒瘤，我虽然只是游戏行业的一名小将，但我也不怕说出这个行业的一些黑色利益链，类似应用榜单刷榜，源代码交易，服务器相互攻击，数据窃取，游戏外挂等地下产业，养活了一批黑户，这其中的利益是巨大的，当然，他们的行动都是在暗地的，赚一波，就撤退，法律也很难严惩，这是很多正规游戏厂商所厌恶的。版号新规出现后，我相信这样的劣质游戏甚至这一批黑色产业，都能慢慢的消亡殆尽。</p><h2 id="其他行业"><a href="#其他行业" class="headerlink" title="其他行业"></a>其他行业</h2><p>说句题外话，上面所说的劣质产品，也不仅仅存在游戏产品上，许多app也是一样的，比如越来越多甚至开始泛滥的直播app，里面很多内容都是不符合相关法律法规的，但因此类产品追查难度太大，也是很难杜绝，希望政府在这方面也能做出一些行业的规范。</p><h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>我对任何互联网产品都没有恶意，只是希望这个世界多一点真诚，少一点套路，多一些做真正用户需要的产品，而不是利益圈钱的产品。制度决定高度，没有规矩，不成方圆，虽说版号新规是造成我们团队灭亡的直接原因（并不是我们的产品是违规盗版，仅仅是因为我们的版号还没审批下来，被抽查到后要求全部下架，这件事直接断了公司的经济来源，对于小团队来说，是毁灭性的打击），但我也不得不说，我还是挺支持这样的规范行业的制度的，希望游戏行业越来越好，越来越规范！</p><h1 id="产品的成长之路"><a href="#产品的成长之路" class="headerlink" title="产品的成长之路"></a>产品的成长之路</h1><h2 id="高效率开发"><a href="#高效率开发" class="headerlink" title="高效率开发"></a>高效率开发</h2><p>我们公司的产品，这一路走来，也确实不容易，没有做起来，并不是因为这个产品不够优秀，更多是因为公司的资源不够，无论是策划，美术还是技术，这一款产品，我们团队，仅仅5个人，用一年时间，便完成了产品的开发，并且已经迭代优化了好几个版本，5个人，两个美术一个策划一个前端一个后端，可以说我们的效率是非常高的，我们的上班时间是上午十点到下午六点，从来不加班，我们的工作方式追求的是效率，而不是苦力，我们更喜欢把时间花在有工作热情的时间上。说实话，虽说公司状况每况愈下，但我们的团队成员之间，却是非常的和谐，大家都是齐心协力，真正用心的想做好一款产品。</p><h2 id="团队人数的窘迫"><a href="#团队人数的窘迫" class="headerlink" title="团队人数的窘迫"></a>团队人数的窘迫</h2><p>想做好是一回事，能不能做好又是一回事，从我们的团队构造来看，我们的美术两个人，每天忙得不可开交，每天应对各种各样的原画或者美术需求；策划一个人，每天也要应付各种各样的需求，包括团队内部的需求，以及外部对接渠道的需求，还有一些产品上线运营的需求；客户端一个人，除了产品迭代开发，还要面对各种玩家提的bug、渠道提的bug等等；服务端一个人，也就是我了，也是整天忙得天旋地转的，除了产品开发，还有渠道对接，也是要每天面对各种各样神奇的bug，还包括服务器的运维工作，偶尔网络不通了，端口不通了，服务器宕机了。虽然感觉每一天，我们团队都是热情饱满的在做各种各样的工作，但其实我感觉，如果公司的资产足够，多招来几个人，工作效率也许会更高，就单从我服务器这块来说，如果能够将开发和运维独立分开，或许我每天也不会那么忙，也会有更多的时间去修改bug，或者思考更加成熟的架构方案。同样的道理，我们的策划也是我们公司的coo，我们的美术也是我们的ceo，这样的工作内容交叉，很容易在工作的时候把自己忙的一团糟。在小公司的这一年，我深刻体会到，人的精力都是有限的，确有神人，能在单个领域独当一面，但真正成熟的公司是不会这么做的，这样的风险太高了，人一旦到一个极限，他的工作效率或许会不增反减，这个道理就如同计算机的多线程，做技术的或许抖动，计算机的cpu数是一定的，分配一定数量的线程，确能提高运算效率，但分配线程数越多，线程之间的切换频率也就越高，而切换线程也是一种资源消耗，线程数量太多只会拖慢整个运算效率。</p><p>虽然有团队人数的窘迫，但我们几个人还是尽心尽力，花费一年时间做出来了这款产品，好不容易上线了，然而经过几场市场的验证，发现它并不是玩家喜欢的产品，从各种数据来看，如arpu、dau来看，它的成绩并不如我们想象的那么理想，公司几乎倾尽所有人力财力做的这款产品，就这样以失败告终了，或许我们还不能称为失败，因为我们后续还可以继续进行优化，团队虽然不存在了，但我们依然可以进行私下的合作，毕竟有一群志同道合的朋友，也是人生路上一大乐事，后续在工作之余，我们依然会进行开新服，维护等操作，或许是心有不甘，我们仍从内心深处，渴望这款产品的成功。</p><h2 id="产品的失败"><a href="#产品的失败" class="headerlink" title="产品的失败"></a>产品的失败</h2><p>然而目前来看，这款产品的确有很多不足之处，我认为这也跟公司的一些决策有关系，我刚去的时候，公司打算做slg产品，那个时候，slg的确是在风口浪尖上，然而公司决定做的slg，最终却被设计为异步玩法，这对于如今越来越发达的网络来说，是一种资源浪费，那些实时对战，实时通信的slg火了，像cok，战火与秩序，甚至是很多不知名的产品，最终都做得还不错，然而我们的产品，更多是异步玩法，玩家玩起来有种单机的感觉，而单机早已不是现在网络时代应有的产物了，从这个层面上来说，我觉得这款产品的失败跟这种设计决策有很大的关系。另外也不得不否认，公司团队整体很年轻，无论是美术、策划还是程序，我们都还缺少丰富的项目经验，造成一个产品在整个市场来说也不是特别的成熟，这点来说，我们每个人都是有责任的。</p><p>从我刚到公司做这款产品，一直到前几天从公司离职，除了见证一个公司兴盛到衰亡，我也是亲自全程参与了这款产品的从无到有的开发，从设计，开发，迭代，一点一点的看着他越来越大，越来越成熟，从个人成就感来说，我倒也是挺欣慰的，这也算是我的职业生涯中挺重要的一段经历，无论如何，这都是我们亲手塑造的产品！</p><h1 id="个人的技术成长"><a href="#个人的技术成长" class="headerlink" title="个人的技术成长"></a>个人的技术成长</h1><h2 id="从菜鸟到不辣么菜的菜鸟"><a href="#从菜鸟到不辣么菜的菜鸟" class="headerlink" title="从菜鸟到不辣么菜的菜鸟"></a>从菜鸟到不辣么菜的菜鸟</h2><p>我在公司是负责服务端技术的，无论公司如何走向，从我个人的角度来说，我的技术成长是无法抹去的，所以从另一方面来说，我还是挺感谢在这个创业公司的一年的。在来这家公司之前，我只是在另一个中型的游戏公司的一名后台开发，说得不好听点就是打杂工的，平时只负责写写游戏逻辑之类的，但我个人的学习欲望确实很强烈，出了写自己的逻辑代码，我也会去研究研究老大写的服务器架构，了解一些更底层更深层次的东西，可惜的是在那家公司的最后几个月里，我几乎被闲置了，每天都没有什么事做，我当时觉得这样下去一定会废掉的，长时间不练手就生了，于是我离职，跳到了这家创业公司，选择这家公司的原因很简单，我需要独立负责服务端的所有工作，包括架构，开发，部署，运维，我觉得这对我来说算是一个挑战，于是我就接受了，那个时候我并没有考虑太多，就是简简单单的年轻气盛，我觉得我能做下来，而实际上，这一年时间我确实成长了不少，从一枚菜鸟，成长成了一枚不那么菜的菜鸟，至少，我能独自包揽整个服务端的工作了。毫不夸张的说，跳槽过来之前，我不会多线程，不会并发编程，不会jvm，不会nginx转发，不会服务器部署等等，有很多不会的东西，或者说我都只是了解一点或听说一点，根本没有实际用过，到这家公司后，由于服务端只有我自己，我不得不强迫自己不断的学习，不断的成长，虽说我现在不能在上述的技术都精通，但至少都有实际操作的经验了，多多少少会用了，到现在我都还记得我的后端出过的第一个重大bug，是因为并发的线程安全没有控制，本该用memcache的incr来控制并发安全，我却傻呵呵的直接用get/set，导致大规模的并发出现问题，当时我也是写博客记录了下来。当然，后来也出现过其他的bug，我几乎都是靠自己慢慢摸索学习。对于游戏行业，我有我自己的热情，所有的工作对我来说，不是苦难，是享受，游戏编程的过程就像是上帝创造世界的过程，想象一下，你在我创造的游戏世界里玩游戏，那是种什么感受？做游戏开发，我挺享受这种类似上帝创造世界的这种过程的，所以这一年时间，所有的学习，所有的成长，我都觉得还好，不算太辛苦，我觉得这一切都是值得的。</p><h2 id="瓶颈期"><a href="#瓶颈期" class="headerlink" title="瓶颈期"></a>瓶颈期</h2><p>然而成长到一定程度的时候，我就越来越发现了，有些东西，自己独立是做不出来的，独立开发久了，就会发现个人的技术到了瓶颈期了，是，那些技术你都能用，你能真正用的漂亮吗？你能用的恰到好处吗？你会设计模式吗？你的架构能支持高并发吗？越来越多的问题开始困扰我，包括我前段时间，看了不少别人的代码，别人的架构，我越来越发现，自己这一年学的东西，虽说对自己成长不少，但对整个技术生涯来看，只是小小的一步，我需要更大的成长空间，我需要一个团队的开发。经过很久的思考后，我决定了离职（巧的是，我刚离职，公司就因为版号问题而挂掉了，这其中，确实跟我有一定关系，内心还有一点内疚的），一直到现在，我拿到一家中型游戏公司的offer，薪资待遇各方面都还挺满意，最关键的是，他家发行的几款产品，都还是比较火的，公司只招中高级开发，这对我来说也是学习的一大机会，我已经决定下周一去入职，我觉得或许加入这公司，我能学到更多东西。</p><h1 id="写在结尾的话"><a href="#写在结尾的话" class="headerlink" title="写在结尾的话"></a>写在结尾的话</h1><h2 id="对行业新人的建议"><a href="#对行业新人的建议" class="headerlink" title="对行业新人的建议"></a>对行业新人的建议</h2><p>工作也有两年多时间了，也对准备进入游戏行业的新人或者已经进入游戏行业的新人一些建议和忠告。的确，我花了一年时间，在小公司成长了不少，但现在我还是认为，有机会，还是应该在大公司里学习，大公司无论是行业规范还是学习平台都是优于小公司的。但记住，千万不要在大公司里休养生息，在大公司里，也要不断的学习，否则也迟早会被淘汰，做技术这行，千万不能停止学习，如果你发现你被闲置了，你可以选择跳槽（最好还是跳另一个大公司），总之，千万不能闲下来，人一旦懒了，就再也勤快不起来了，技术的更新换代一定要跟上，不一定精通新兴技术，但一定要会当前最流行的技术，一年时间一路走来，我也确实学到了不少东西，技术更新不少，也淘汰了不少。从产品来说，找工作的时候也一定要看产品，对公司的产品有一个了解，心里对这个产品有个预估，能不能做起来，找工作要做的就三件事：跟对团队，做对产品，谈对待遇。</p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>下周我将入职的新公司，我不能保证他的产品一定能做起来，但我一定不会停止学习，更大的平台，意味着更大的前进空间。最后祝愿自己在2017年能越来越好吧！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话&quot;&gt;&lt;/a&gt;写在前面的话&lt;/h1&gt;&lt;p&gt;从15年12月入职到前两天离职，我经历了一个创业游戏公司的由盛到衰的整个过程，从16年的下半年开始，每天上班就眼看着公司的状况一天不如一天。从另一方面来说，也算是映射了国内的大部分手游小团队的兴盛到衰落的一个过程。从最初移动端设备的兴起，带动的移动游戏行业的大规模爆发，大量的企业及投资进军手游行业，到如今盛极而衰，大量小团队一个一个的死去，一波又一波的泡沫破灭，手游行业这条路越来越难走</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="创业" scheme="http://www.hjcenry.com/tags/%E5%88%9B%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Java游戏服务器成长之路——2016随笔总结</title>
    <link href="http://www.hjcenry.com/2017/01/03/Java%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%942016%E9%9A%8F%E7%AC%94%E6%80%BB%E7%BB%93/"/>
    <id>http://www.hjcenry.com/2017/01/03/Java%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%942016%E9%9A%8F%E7%AC%94%E6%80%BB%E7%BB%93/</id>
    <published>2017-01-02T18:16:00.000Z</published>
    <updated>2020-09-29T03:25:11.720Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>Java游戏服务器成长之路的系列，已经很长时间没写了，不是不想写，而是这一年，基本都是在忙别的了，今天特地挤出时间，对我的2016年，做一个不留遗憾的总结。<a id="more"></a></p><h1 id="2016的事件"><a href="#2016的事件" class="headerlink" title="2016的事件"></a>2016的事件</h1><p>不知不觉，又到了春节抢票的时候了，这两天除了盼着年终能发点奖金以外，就是盼着能买一张合适的火车票，今年是离家最久的一年，幸运的是，我成都的小房子要结房了，必须要我本人到场，这就能给我一个理由多请一周的假提前回去几天，很久没看到家人了，离家这么久，还是挺想念的。另外就是，盼着发年终奖了，毕竟工作了一年，也没什么存款，哎。。。</p><h2 id="互联网泡沫破灭"><a href="#互联网泡沫破灭" class="headerlink" title="互联网泡沫破灭"></a>互联网泡沫破灭</h2><p>这一年，相对于以往来说，是过得比较平淡的，去年，跳槽了，前年，毕业了，今年，既没跳槽也没毕业，也没有涨工资，哎……说起来，今年互联网行业的整体形势都不大好，有位做iOS的同学一年跳了三次槽，其中两次是公司做不下去黄掉的，好在我这个同学的基本功是没问题的，技术很扎实，要重新找个工作也不难，其实这既是我们这个职业的风险，也是这个职业的机遇，谁知道下一份工作，又会给我们的薪资提升多少个档次（这是一个跳槽比加薪来钱快的职业……），我们被称作程序猿，码农，IT男……话说回来，我们游戏行业也差不多，一夜之间，就听说好多游戏公司开始裁员，这一切都源于政府开始对互联网行业的整顿，互联网泡沫终究还是会破灭，从游戏行业来说，中国区所有的游戏想要上架应用市场，都需要申请游戏版号，而版号申请又需要一大堆资质，总之听公司领导说起来这个流程，是很麻烦的，通常办下来，至少需要半年时间，还不包括中间如果出现问题打回去重新调整的时间。国家还真的是说到做到，半年前，我们公司的游戏申请了版号，果然在半年后申请下来了……</p><h2 id="公司每况愈下"><a href="#公司每况愈下" class="headerlink" title="公司每况愈下"></a>公司每况愈下</h2><p>国家这一举动，也确实是对不少中小游戏公司造成毁灭性的打击，半年前，我们公司开始裁员，裁掉几个人，一个月前，公司又是一波裁员，又走了几个人，本来公司人不多，现在裁员过后，人更少了，每天去上班就不到十个人在那儿坐着，我没被裁掉的原因，大概就是公司就我一个服务器的开发吧，如果我都走了，公司的所有网络游戏都要垮掉，就只能做单机了……所以我们剩下几个人，目前是在做最后的挣扎，希望最后的一搏还能有一点收获，对公司而言，能收获一笔钱来运转，对我个人来说，当然也是钱，赚了钱，肯定能发奖金了，另外还是希望能涨点工资，这也是我2017的愿望之一，除了钱之外，对我个人来说，也终于可以有一款上线赚大钱的游戏项目经验了，这款游戏也是从始至终我一个人包揽服务端所有工作的一款游戏，对我个人的技术成长来说，它的意义也是无可厚非。就算是按照最坏的情况下，游戏崩了，公司倒闭了，对公司来说，是一个毁灭性的打击，但是自私点来讲，对我个人来说，也不会有太大的影响，并且这一年多的独立开发游戏服务端的经验，也是抹不掉的，所以退一万步讲，无论结果怎么样，对我个人的职业生涯来说，都是成长，我要做的，就是做好我的本职工作，好好学学技术，时时更新我的知识数据库。</p><h2 id="主流技术发展迅速"><a href="#主流技术发展迅速" class="headerlink" title="主流技术发展迅速"></a>主流技术发展迅速</h2><p>说到技术，不得不说当前软件技术的飞速发展，实在是超乎了我们的想象：<br>1.一年前，我还认为，HTML5无非就是html加几个新的标签嘛，然而现在的h5，能做游戏，能做App，能做网站，能做各种酷炫的特效，这些都是HTML4的技术标准无法实现的，用几个HTML标签，你能做出来？<br>2.一年前，我还认为，Javascript不就是个浏览器脚本语言嘛，然而现在的js，不仅能做app，能做游戏，甚至能做服务器，能做数据库，不只是能做，而且各大厂都开始支持js技术。谁能想到，当年大学课堂上，老师一带而过的浏览器脚本语言，如今已经火便整个互联网？<br>3.一年前，我还不知道什么是大数据，而现在，在这个信息量爆炸的时代，大数据早不是什么新鲜事情了，身边处处都是大数据，像Docker，Hadoop这样的技术，早就已经耳熟能详了。<br>4.一年前，做一个网站的前端，需要用到的技术可能是Html，JQuery；一年后，做一个网站的前端，需要用到的技术可能是HTML5，Css3，es6，Angular，bootstrap……</p><p>一年前，JDK的版本还是1.7，tomcat还是7，Spring还是3，Hibernate还是4，而现在…所有的技术的版本号都升了，都或多或少的加入了很多新的特性来支持我们当前这个信息时代的需要，如果说，我们停止了学习，那我们技术上的思想和思维，就会完全跟不上这个时代的需要，最终只会被淘汰掉。学习一个新技术，不是多难的事，只需要在有空的时候，大致了解一下它是做什么的，有什么特性，如果有兴趣，再写个Demo来研究研究，当你真的搞懂一个非常的技术的框架的时候，你会非常赞叹这个框架的创作人的这个成果。就比如前段时间，我研究了Pomelo，一个网易的开源游戏服务器框架，底层是基于Node.js的，它在github上的文档介绍的非常详细，我看完它的整个设计的架构，它的整个架构的思想，我特别的欣赏，再回头想想当初我所设计的架构（就是在当前公司所负责的游戏的服务端架构），简直不是一个档次的，别人家的架构，具有良好的伸缩性，无论是开发效率还是生产高可用，以及服务器架构中很重要的扩展性，都是做的非常好的，而我的架构，我甚至不知道它能够支撑多久，这真的是看了别人的东西，才知道自己的东西有多垃圾……</p><p>其实说到底，还是我们自己的一个思维的固化，我们总是容易跟着固化的思维走，多看看新的技术，学学新的思路，真的会感觉到一个不一样的视角，你会突然发现，诶，原来这个还能这么做啊！而且我们的这个行业，有一个跟所有行业不一样的特性，就是他的发展速度是非常快的，如果我们跟不上，我们就会out掉，就打比方说，人家会新技术，单服承载十几万压力，而你的过时技术，单服只能承载几千压力，那用人单位又不傻，单服承载越多当然越为公司省钱啊，那你直接就被out了。时刻保持警惕，任何一个新技术，都可能成为今后的主流，不要活在自己的固化思维里。回头看看整个2016年，不知道github上又涌现出了多少的优秀的开源框架，阿里网易这样大厂又开源了多少它们的组件，这些技术，或许我们不能都掌握，但我们一定要去了解，与时俱进，才是最重要的。</p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-a8d5dff4db966822.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00068.JPG"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-5986cfc8617b1fa4.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00059.JPG"></p><h2 id="工作完成还行"><a href="#工作完成还行" class="headerlink" title="工作完成还行"></a>工作完成还行</h2><p>前面也说到了，这一年，基本上，公司感觉快要不行了，但对我个人来说，技术的成长还是不小的，首先，当下开发的这款游戏，我负责整个服务端，从架构，开发，到上线运维，这对我个人来说，不仅一个学习的过程，更是宝贵的经验，这之间，爬过多少坑，都只有我自己的知道，对我以后的工作也是非常有帮助的。除了正常工作中给我的需求之外，我也学着去了解各方面的东西，也就是上文说到的与时俱进。我负责公司的游戏服务端的工作，除了正常的需求开发，关于服务端的运维工作，肯定也是少不了的，我也必然去了解一些Linux环境下的各种操作，再比如服务端程序的一些优化也必须去掌握了解（前段时间读的一本书《深入解析JVM虚拟机的原理与实践》，真的是刷新了我的Java世界观，因为我在这之前一直只会写代码，并不了解JVM层次的原理，读完整本书，我觉得不了解JVM的Java程序员不能叫做Java程序员），再然后就是要给公司的人提供一些游戏的管理工具，比如游戏中改改数据（当然不会瞎改的……），写写公告，发发奖励什么的，再到游戏的开服关服的一系列工作，如果在大公司，服务端开发就只是做开发，运维是给运维同学做的，管理工具会交给做管理工具的人做的，然而小公司，只能一个人把所有的都包揽了，当然这对我个人来讲，也是好事，我如今能学到这么多东西，也得感谢公司的平台，让我迅速的成长，从一年前，在大公司的打杂性质的写代码，到如今跳到现在这家公司到现在能包揽服务端所有工作，这些成长，都是能够看见的。除了平时的工作，我也会经常看一些新的技术，有时也会写一些Demo，像Node.js，Go这些服务端的语言，都有去研究，又比如今年新浪微博开源的Motan Rpc框架，我掌握之后是直接运用到公司的项目中的，因为这款框架已经经过了微博千万并发压力的验证，我就可以毫不犹豫的拿过来用。如果明年我还有机会单独负责服务端工作，或者做主要负责人，我希望可以在我的项目中引入更多先进的框架和技术，这个不是赶潮流，这是与时俱进。<br>今年我在工作中的成长，离不开公司给我的平台，不是所有的人都会有单独负责所有工作的经历，其实这不是苦难，我反而会觉得自由，因为在这其中，在保证工作的前提下（像服务器的稳定性，扩展性等），你可以用你想用的技术，写你想写的架构。每当我看到工作空间中，所有类文件的头部描述的author都是我的名字，所有的svn提交者记录都是我的名字，就会有一种成就感，就像是一个建筑师，一层一层的筑起来的高楼，不知不觉，它已经耸入云端（不管最后项目在市场效应如何，它都是我2016年最大的成果）。</p><h2 id="深入解读Java游戏服务端开发"><a href="#深入解读Java游戏服务端开发" class="headerlink" title="深入解读Java游戏服务端开发"></a>深入解读Java游戏服务端开发</h2><p>这个小标题有点特别，因为他是一本书的名字，这本书的作者，是我。这是我的第一本书，我今年花了一年的时间，最终才出版的这本书，这其中包括半年的写作和半年的调整校稿，整个写书的过程，让我明白了坚持的意义，甚至说，我不认为这是坚持，我只是每天有事没事的写一点，但无论如何，这花费了我一年的时间来完成，不敢说是什么大作，但确实是辛勤劳动的成果。我的这本书，是属于技术类的书籍，在写整本书的过程中，很多技术点，我自己都还没整明白，我必须要自己先弄清楚，然后再用文字描述给我的读者，这个过程，对我来说，其实也是一个学习的过程，很多东西，我都是从头到尾自己再研究了一遍的。<br>这本书算是我的第一本书，内容算不上完美，也有不少小瑕疵，不过对于想要入门游戏服务器开发来说，还是足够了。或许是因为后来我看了几本书，在大作的面前，感觉到了自己的渺小，李林峰老师的《Netty权威指南》，对我来说，真的是经典，后来看的《深入解读JVM虚拟机》那本书，也是一部神作，还有来自国外的《Java性能优化指南》的翻译版本，以及腾讯GAD出品的系列丛书，以上每一本，都是内容非常丰富，也非常值得一看的。我不能否认我自己一整年的辛勤劳动成果，但也不能绝对偏袒它里面的内容，跟很多大作来比，确实是由很多不足之处。鉴于以上几点，加之我16年参与了Cocos CVP的课程，我决定在2017年，结合我在Cocos2d-JS领域的技术探索，再写一本，基于Cocos2d-JS实战的书，从项目结合来讲一下游戏开发。因为我本身不从事游戏客户端开发，所以我觉得这对我来说，也算是一个挑战，所以2017年的第一个挑战，就是这本书，多学学多看看，再通过项目实战来进行讲解（其实感觉，写实战代码，比写理论描述，要容易得多）。<br>另外，《深入解读Java游戏服务器开发》，在淘宝京东当当亚马逊等各大网站，直接搜就有的哦。</p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-a5ba0bb537e20fa2.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00048.JPG"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-743959b790a8387c.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00056.JPG"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-5a1cd693f477e009.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00057.JPG"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-3b47d3cffca4a059.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00060.JPG"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-2d963727a30bcada.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="book.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其实还有很多事没总结完的，2016年，是看似平淡的一年，但我个人，却感觉积攒了一年的能量，在个人的能力上，有了不少的提升。除了上文说到的工作中的进步以及写书的成长，在整个2016年，我也完成了不少事情，总结起来，可以列举以下几条：<br>1.用近一年时间完成《深入解读Java游戏服务器》一书<br>2.复习近半年时间并参加信息安全工程师考试（上午科目过了，下午没过，不过也算尽力，不枉此行，来年继续！）<br>3.学习Cocos CVP课程（课程还没出完），基本掌握Cocos2d-JS引擎<br>4.在Github上搭建hexo个人博客，并已经写了48篇博文，主要涉及Cocos2d-JS游戏前端开发和Java游戏后端开发<br>5.签约腾讯GAD游戏开发者社区特约撰稿人<br>6.获得腾讯GAD手游服务器解决方案征文比赛一等奖（据说奖金就要打过来了，有点小兴奋呢）<br>7.用业余时间写了10款项目源码（包含一些游戏前端源码，游戏后端项目模板，框架demo等）开源在Github，填补了Github几乎为0的记录<br>当然，有好的，也有不好的事情，可以列举以下几条：<br>1.吸了一年北京雾霾<br>2.一年下来，几乎没有积蓄，每月工资也不少，但就是莫名其妙的，月底就余额不足<br>3.薪资无任何提升<br>4.在公司努力了一年的项目，最后的市场效应很不好，游戏付费率低的可怜<br>5.因第4条，公司接近倒闭，估计明年又要重新找工作了<br>6.政府对游戏行业整顿，整个国内游戏行业不景气，造成第4,5条的影响<br>不管怎么说，2016即将过去，不管是好与不好，都已成为过去，放眼2017年，做更好的自己，不谈过去，只看将来！</p><h1 id="总结2016"><a href="#总结2016" class="headerlink" title="总结2016"></a>总结2016</h1><p>整个2016，在工作和技术上，我的成长还是不错的，不过相对来说，我在生活上，却没什么变化，依旧不怎么会说话，不怎么会处事，17年希望能够有所改进，多了解社会上的交往礼节，世界不因我改变，而我，只能改变我自己。融入社会，是每个想要生活在这个社会的人必须做的事。<br>最后还要感谢我的家人，在16年的工作上，以及写书的支持上，都离不开我的家人的鼓励和支持，同时也很感谢我的女朋友，能容忍包容我的一切不好的缺点和脾气，来陪伴我，度过我的2016，我如今的一切，都离不开你的陪伴与支持。<br>希望无论是生活中还是工作中，我在2017年，都能有所突破，引用小学课本的一句话，就是“逆水行舟，不进则退”！，不做井底之蛙，拒绝固步自封，放眼远方，迎接未来！</p><h1 id="展望2017"><a href="#展望2017" class="headerlink" title="展望2017"></a>展望2017</h1><p>17年，我的心愿就4条：</p><ol><li>涨工资</li><li>赚钱（1如果达成了，2应该就不远了）</li><li>能出门旅游一次，带上父母和女朋友（在2的基础之上）</li><li>生活越来越好，账户余额越来越多，存款越来越多（在2的基础之上）</li></ol><h1 id="写到最后"><a href="#写到最后" class="headerlink" title="写到最后"></a>写到最后</h1><p>时间已过一点，本来想在年前就写总结的，一直没找到合适的时间，今天想想，不能拖了，今天一定要写完，让2016不留遗憾！文章结尾特地再次感谢一直陪伴我的女朋友……</p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-9b93caabdd67a83b.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00088.JPG"></p><p><img src="http://upload-images.jianshu.io/upload_images/1472037-0c52d4903e6c8647.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DSC00087.JPG"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;写在开头&quot;&gt;&lt;a href=&quot;#写在开头&quot; class=&quot;headerlink&quot; title=&quot;写在开头&quot;&gt;&lt;/a&gt;写在开头&lt;/h1&gt;&lt;p&gt;Java游戏服务器成长之路的系列，已经很长时间没写了，不是不想写，而是这一年，基本都是在忙别的了，今天特地挤出时间，对我的2016年，做一个不留遗憾的总结。</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="总结" scheme="http://www.hjcenry.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="随笔" scheme="http://www.hjcenry.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="架构" scheme="http://www.hjcenry.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>SLG手游Java服务器数据管理方案</title>
    <link href="http://www.hjcenry.com/2016/10/22/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/"/>
    <id>http://www.hjcenry.com/2016/10/22/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/</id>
    <published>2016-10-22T07:25:00.000Z</published>
    <updated>2020-09-29T03:25:11.722Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。</code></li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这一年左右的时间，我参与并完成了一款SLG手游的研发，我负责游戏的服务端研发。这是一款以三国为题材的游戏，除了有三国名将的卡牌养成、多种多样装备养成、PVE，玩家竞技场等常见玩法外，我们的游戏的主打特色是国战和军团战，目前我们正在进行国战部分的开发和优化，军团战部分仍在策划中。<a id="more"></a>军团战预计是一种以公会形式存在的策略玩法，国战是全服玩家达到一定等级就可以参与的混战玩法，玩家的阵营由玩家创建角色时选择的国家（魏蜀吴）决定，进入国战地图之后，服务器会根据玩家选择的国家分配阵营，然后玩家就可以在世界地图中进行攻打敌国城池，在世界地图中，除了三国城池，还有一些资源城池和关隘城池，玩家占领资源城池可以获得一定的资源收益，而关隘一般是设定在两国交界处，只有打通了关隘城池，国家内的人才能通过关隘攻打帝国，这一系列的玩法都非常具有策略性，需要同国玩家之间的相互协作才能共同立足于三国之中。国战的过程中，玩家在混战的同时也能获得一部分的收益。整个国战的玩法充分体现了SLG的策略性。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/IMG_1145.PNG" alt="游戏截图1"><br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/IMG_1155.PNG" alt="游戏截图2"><br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/IMG_0653.PNG" alt="游戏截图3"><br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/IMG_1148.PNG" alt="游戏截图4"><br>前文主要讲解我们的游戏的功能和玩法，大家应该都知道，一款游戏里，处处都充满了“数据”，有关卡配置数据，有人物属性数据，有玩家基础数据等，正是这些各种各样的数据，才让我们在游戏中更加数字化的感知游戏的乐趣，本文就从游戏服务器的“数据”角度，来分享我们的游戏的数据管理方案。本文的内容只针对我们的游戏的一种解决方案，不包括其他游戏的解决方案，相信不同的游戏中，架构师应该会对数据管理有不同的解决方案，但万变不离其宗，我们只需掌握数据管理中的核心概念，就可以轻松自如的应对各种应用场景下的数据管理。</p><p>我们的游戏服务器的技术架构是用Java来做的，使用Java作为游戏服务器开发语言的成功案例已经越来越多了，Java的网络应用技术也是越来越成熟，不说太多的语言之争，总之最后，我们选用了Java作为了整个游戏服务器的技术支撑，其中网络通信采用Netty，数据与缓存分别选用了MySQL，Memcache和Redis。本文主要讲解数据管理，因此重点也就是讲解MySQL。Memcache和Redis是如何在我们的服务器架构中应用的。</p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><p>在开始讲解如何具体实施之间，我们可以先对游戏中的数据进行一个简单的分析。相信大家一定都常玩游戏，一定可以感觉到，游戏中的虽然处处是数据，但各种数据的性质又不完全一样，比如怪物的攻击力，防御力等战斗属性，一般情况是一组静态数据，这部分数据可以由策划在配置关卡时提前配置好，而玩家的战斗属性，却是玩家在游戏中一系列养成的综合因素所决定，这是一组动态的数据。按照宏观上分，游戏数据大致就可以分为静态数据和动态数据，静态数据，如签到奖励，战斗掉落，抽卡概率等内容，一般情况下均由策划配置好静态表，服务器启动时直接读取静态表，将表中内容加载到服务器内存，使用时直接从内存读取，而动态数据，是根据玩家的游戏进度所决定的，因此这部分数据就需要一个数据管理系统来统一管理，也就是我们常用的数据库，这部分的数据我又细分为热数据和冷数据，热数据指游戏中操作频繁的数据，如体力恢复时间，抽卡免费次数，国战城池状态等，这部分的数据的特点，就是读写频繁，并且其数据结构也是复杂多变的，玩家的每一步操作，都可能涉及到这部分数据的读取或更新。相反，冷数据，则泛指游戏中更新并不频繁，却仍然十分重要的数据，如君主信息，卡牌信息，装备信息等，这部分的数据可能只有特定的操作才会触发这部分数据的变化，比如卡牌的星级，只有当玩家进行了卡牌升星操作，卡牌的星级才有可能发生变化，这部分的数据，更新不频繁，且数据结构稳定，一般在一开始就已经设计好，这部分数据，非常易于管理。基于以上总结，可以得出如下分类图：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/GameData.png" alt="游戏数据"></p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><h3 id="静态数据"><a href="#静态数据" class="headerlink" title="静态数据"></a>静态数据</h3><p>游戏中的静态数据，一般由策划进行配置，一般情况下是xml文件或csv文件，在我们的游戏中，我们采用了读取策划配置的csv文件来获取游戏中的静态数据，服务器启动时加载游戏中的csv静态数据，把所有的静态数据加载到Java的内存中，用Map进行管理。我们的游戏中，使用静态数据的步骤如下：<br>1.读取csv文件<br>2.按一定格式对文件内容进行解析<br>3.将内容封装到JavaBean<br>4.存放数据到Map中<br>5.从Map中取出数据使用（使用时）<br>当然读取静态数据，也有其他的形式，比如配置xml表，从xml表中读取数据，这里说的只是我们的采用的其中一种形式。</p><h3 id="热数据"><a href="#热数据" class="headerlink" title="热数据"></a>热数据</h3><p>一说到频繁交互，大家第一反应一定是内存，是的，Redis就是一款基于内存的数据库，网上有很多帖子说Redis会如何如何吃内存，在大数据量下的效率如何低下，其实我认为，Redis，它只是一款内存数据库，至于它会发挥怎样的功效，还是得看我们如何去使用它，有一把好枪不代表我们就有了好枪法，还是得根据我们自己的应用场景，合理运用。我也说说我为什么选择Redis的原因吧：<br>1.Redis是内存数据，其操作均基于内存，可以满足我的“频繁”需求<br>2.虽然是内存数据库，但同时它也具有RDB和AOF两种持久化功能，可以满足我的“存储”需求<br>3.Redis支持String，Set，List，Sorted Set和Hash五种数据结构，丰富的数据结构，可以满足我的“数据结构复杂多变”需求<br>4.Redis可以很容易实现cluster以及主从等分布式扩展，可以满足我的“数据扩展性”需求<br>当然，Redis的优点远远不止以上四点，但从这四点来说，我觉得Redis就非常适合作为我的游戏动态数据中的热数据的存储。</p><h3 id="冷数据"><a href="#冷数据" class="headerlink" title="冷数据"></a>冷数据</h3><p>前文分析到这部分数据的特点是更新不频繁且数据结构稳定，我们采用MySQL来存储这部分数据，MySQL不仅结构清晰，更是方便数据管理。MySQL也有许多很适合我们这部分数据的特点：<br>1.关系型数据库，支持标准的SQL语言，适合结构化的数据<br>2.支持多种列类型，能存储各种数据格式<br>3.多线程运行，高并发环境下高效稳定<br>4.支持事务控制<br>以上我只列举了我认为比较重要的四点，MySQL已经足以满足我对冷数据的所有存储需求。</p><h3 id="缓存数据"><a href="#缓存数据" class="headerlink" title="缓存数据"></a>缓存数据</h3><p>这部分数据是在前文在数据分析中没有提到的，因为这部分数据，只是临时的，严格的说，如果不需要考虑服务器的效率问题，没有缓存也是可以照常运行的。缓存的出现是为了减轻服务器的负载，我们可以把客户端的请求全部交给缓存去做，缓存再通过一定的策略与数据库同步，这样，我们就不必要重复的查找或插入同一条数据。这就相当于，在客户端和数据库中间，添加一个挡板，这个挡板先行对数据进行过滤处理，而缓存就是这个挡板。我认为，在服务器中，缓存是一门艺术，用好了缓存，可以让整个架构都看起来赏心悦目。在缓存技术上，我选择Memcache，Memcache作为内存数据库，在高并发及大数据下的性能都是不错的，Memcache采用一致性Hash算法，并且具有数据分布式的特点。</p><h2 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h2><h3 id="Redis存储数据"><a href="#Redis存储数据" class="headerlink" title="Redis存储数据"></a>Redis存储数据</h3><p>对于我们游戏中需要使用Redis存储的部分热数据，我做了如下总结:<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/Redis%E6%95%B0%E6%8D%AE.png" alt="Redis数据"><br>使用Redis，除了要理解Redis的内存模型原理外，首先还得了解Redis的五种基本数据类型，每一种数据类型都对应不同的Redis操作API，在Java中使用Redis可以使用官方提供的Jedis客户端，Jedis客户端中包含了各种数据类型的操作。Redis既可以作为单服务器使用，也可以做cluster或主从的集群扩展，方便日益庞大的游戏数据的扩展。</p><h3 id="MySQL存储数据"><a href="#MySQL存储数据" class="headerlink" title="MySQL存储数据"></a>MySQL存储数据</h3><p>在游戏数据中，我对游戏中的冷数据做了一个总结，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/Mysql%E6%95%B0%E6%8D%AE.png" alt="Mysql数据"><br>完成要存储的游戏数据的分析之后，我们就可以进行具体建模建表的工作，完成对数据的设计。由于在游戏服务器的数据存储中，数据库基本上只是一个玩家下线后的游戏数据临时存放的地方，所以游戏数据表中的关联性并不是特别强，不需要特别严密的数据库设计，只需简单的将玩家所有的数据按照一个userid进行关联即可。<br>我们使用Druid和Hibernate来管理数据库的连接以及进行增删改查的操作。在使用Hibernate的时候，我们使用了Hibernate4，我们只需将需要存储的Model写成JavaBean，并加上作为数据Model的注解，在启动时，Hibernate扫描到JavaBean会自动为我们创建或更新表结构。</p><h4 id="Druid数据库连接池"><a href="#Druid数据库连接池" class="headerlink" title="Druid数据库连接池"></a>Druid数据库连接池</h4><p>游戏服务器运行中经常是多个玩家同时在线的，可想而知，如果同时进行某一项涉及数据库的操作时，会并发请求数据库，多个数据库请求就需要我们对多个数据库连接进行有效的管理，当然，我们可以自己写一个数据库连接池来进行数据库管理，但好在前辈们为我们做足了工作，有很多成型的开源数据库连接池可供我们选择，常见的有c3p0、dbcp、proxool和driud等，这里我们使用阿里巴巴公司的开源产品Druid，这是我个人认为最好用的数据库连接池，它不仅提供了数据库连接池应有的功能，更是提供了良好的数据库监控性能，这是我们作为开发人员在遇到性能瓶颈时最需要的东西，感兴趣的朋友可以参考下官方github，根据官方wiki配置一个Druid的数据监控系统，通过系统可以查看数据库的各种性能指标。<br>Druid在github中的地址是：<a href="https://github.com/alibaba/druid">https://github.com/alibaba/druid</a></p><h4 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a>Hibernate</h4><p>使用Hibernate作为Mysql数据库的ORM框架，主要是因为其良好的封装，首先我个人认为Hibernate的性能是不足与和原生JDBC以及MyBatis这样的框架所匹敌的，封装的更好却带来了更多的性能损失，但我使用他也是看中他良好的封装性，因为我对性能的需求还没有达到很高的级别；其次，Hibernate不适用于写复杂的SQL查询，而MyBatis可以写出一些复杂的SQL。但在我的设计中，我不需要太复杂的查询，基本上我所有的SQL语句的where条件都是”where userid=?”，因此在性能需求上以及易用的对比上，我选择了Hibernate。</p><h3 id="Memcache缓存数据"><a href="#Memcache缓存数据" class="headerlink" title="Memcache缓存数据"></a>Memcache缓存数据</h3><p>Memcache作为一种内存数据库，经常用作应用系统的缓存系统，在我们的游戏服务器中，我使用Memcache应用在三处地方。<br>1.MySQL的数据表主键自增ID的生成<br>2.MySQL的查询结果集的缓存<br>3.国战数据缓存</p><h4 id="MySQL数据表ID生成器"><a href="#MySQL数据表ID生成器" class="headerlink" title="MySQL数据表ID生成器"></a>MySQL数据表ID生成器</h4><p>在数据库的设计中，我们的主键ID是自增，但由于自增ID也是会消耗一定的MySQL性能的，因此我使用Memcache封装了一个ID生成器，其原理就是利用Memcache的incr方法实现ID的自增，Memcache的incr方法是并发安全的，能保证在多线程环境下，MySQL的数据表ID的唯一。</p><h4 id="MySQL查询结果集的缓存"><a href="#MySQL查询结果集的缓存" class="headerlink" title="MySQL查询结果集的缓存"></a>MySQL查询结果集的缓存</h4><p>我在将Memcache引入到项目作为Mysql数据结果集的缓存系统的过程中，曾进行了多种缓存方案的尝试，具体有以下几种缓存模型：<br>1.无缓存<br>这种方式不使用Memcache缓存，游戏服务器的操作直接穿透到Mysql中，这种方式在高并发环境下容易引起Mysql服务器高负载情况。如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B1.png" alt="缓存模型1"><br>2.查询使用缓存，更新穿透到数据库，数据库同步数据到缓存<br>这种方式在客户端表现来看可以提高一部分速度，因为查询操作都是基于缓存的，但实际上Mysql的负担反而加大了，因为每一个更新请求，都需要Mysql同步最新的查询结果集给Memcache，因为每一个更新操作都会带来一个查询操作，当然这个同步过程可以是异步的，但是就算我们感受不到这个同步的过程，在实际上也是加大了数据库的负担。如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B2.png" alt="缓存模型2"><br>3.更新和查询都使用缓存，缓存按策略与数据库进行同步<br>这种方式是比较好的方式，因为客户端的所有操作都是被缓存给拦截下来了，所有操作均是基于缓存，不会穿透到数据库，而缓存与数据库之间可以按照一定策略进行同步，如每5分钟同步一次数据到数据库等，具体同步策略可根据情况具体调整，当然这种方式的缺陷就是一旦服务器宕机，那么在上次同步到宕机这段时间之间的数据都会丢失。如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B3.png" alt="缓存模型3"><br>4.更新和查询都是用缓存，更新操作同时穿透到数据库，数据库同步缓存的查询<br>这种方式是我最终使用的方式，虽然更新操作穿透到数据库，但是我可以在保证查询效率的同时，也保证数据的安全稳定性，因为每一步更新操作都是要进行数据库存储的，并且所有的查询操作可以直接在缓存中进行。如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B4.png" alt="缓存模型4"></p><h4 id="国战数据缓存"><a href="#国战数据缓存" class="headerlink" title="国战数据缓存"></a>国战数据缓存</h4><p>在我们的数据管理中，前文提到的所有数据均是基于玩家的个人数据，游戏服务器与Web服务器最大的不同，就是游戏服务器中存在一个“游戏世界”，在这个游戏世界中，多个玩家均操作同一套数据，稍有经验的后端开发者就知道，在多线程环境下操作共享资源，需要处理好共享数据的安全同步问题。在我们的国战玩法中，共享资源就是世界地图上的城池，以及各个玩家的国战信息(玩家被打败后会更改玩家的占领城池信息)。<br>我们的国战数据是存储在Redis中的，但如果我们不做任何安全问题的保护，就会出现数据的混乱，举个例子，当玩家A和玩家B同时操作一座城池的信息时，假设有以下步骤：<br>1.玩家A从Redis读取城池信息<br>2.玩家A对城池信息进行更改<br>3.玩家A将城池数据入库<br>4.玩家B从Redis读取城池信息<br>5.玩家B对城池信息进行更改<br>6.玩家B将城池数据入库<br>如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/syn_correct.png" alt="同步顺序1"><br>以上是一种A和B按顺序分别对城池信息操作的正常情况，在这种情况下，城池信息的数据是不会有异常的，可如果A和B的的操作顺序变成了如下这样，就会产生数据的安全问题了：<br>1.玩家A从Redis读取城池信息<br>2.玩家B从Redis读取城池信息<br>3.玩家A对城池信息进行更改<br>5.玩家A将城池数据入库<br>6.玩家B将城池数据入库<br>如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/synerr.png" alt="同步顺序2"><br>可以假象以下，如果两个玩家按照如上步骤对城池数据进行操作，那么玩家B的操作将完全覆盖玩家A的操作，其最后的结果肯定是不允许的，这种需要将一系列操作执行完的叫做事务，在一个线程对当前的共享数据进行事务操作的过程中，其他线程是不允许操作这个共享数据的。Redis中，是提供了这样的事务操作API的，Redis的multi和exec函数，可以保证如果玩家A正在操作数据，玩家B的操作无效。而在我们的服务器中，我使用了Memcache提供的CAS原子操作来保证同步数据安全。因为国战数据的操作频繁，且大部分数据需要保证同步安全，因此我在客户端和Redis数据库的中间，用了Memcache作为缓存，既保证了国战数据的操作效率，也保证了其事务的特性。<br>所谓CAS(check and set)，即在写操作时，先检查数据是否被别的线程修改过。其基本原理就是对每次存储的对象分配一个版本号（casUnique）。客户端每次读取数据时，调用gets，Memcache返回当前数据的casUnique，在客户端提交数据的时候，客户端将此casUnique一起提交，Memcache会判断此casUnique是否是当前版本最新的casUnique，如果不是，则本次操作失效，如果是，则操作成功。对于操作失效的情况，我的处理是让此请求重复执行一定的次数，如果执行完这个次数之后仍未成功，则返回“系统繁忙，请稍后再试”。其操作过程如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/syn_solution.png" alt="MemcacheCAS"><br>如图所示，通过如上图的流程，A和B的操作流程如下：<br>1.玩家A读取城池信息，并获取到CAS-ID1；<br>2.玩家B读取城池信息，并获取到CAS-ID2；<br>3.玩家A对城池信息进行更改<br>4.玩家B对城池信息进行更改<br>5.玩家B将城池数据返回给Memcache，在写入缓存前，检查CAS-ID与缓存空间中该数据的CAS-ID是否一致。结果是“一致”，就将修改后的带有CAS-ID2的X写入到缓存。<br>6.玩家A将城池数据返回给Memcache，在写入缓存前，检查CAS-ID与缓存空间中该数据的CAS-ID是否一致。结果是“不一致”，则拒绝写入，返回存储失败。<br>通过Memcache作为Redis前面的中间层，既提高了读写效率，又保证了多线程环境下的同步数据的安全。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文讲解了我们的游戏服务器的游戏管理方案，通过使用MySQL、Redis和Memcache，使它们各司其职，各自承担不同的功能，发挥它们的最大功效，如今我们的游戏仍在紧张的新版本开发中，目前已经登录一些平台进行内测。本文仅作为参考，其中的所有内容是我在对我们当前游戏的开发中所总结出的一点经验，或许并不适用于其他的数据管理方案，但应该可以帮助一些人填坑，这些也是我曾经爬过的坑。本人学艺不精，文中难免有不严谨之处，希望发现的同学给提出来，不要误导了大家。感谢大家欣赏！</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这一年左右的时间，我参与并完成了一款SLG手游的研发，我负责游戏的服务端研发。这是一款以三国为题材的游戏，除了有三国名将的卡牌养成、多种多样装备养成、PVE，玩家竞技场等常见玩法外，我们的游戏的主打特色是国战和军团战，目前我们正在进行国战部分的开发和优化，军团战部分仍在策划中。</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="SLG" scheme="http://www.hjcenry.com/tags/SLG/"/>
    
  </entry>
  
  <entry>
    <title>SLG手游Java服务器的设计与开发——数据管理</title>
    <link href="http://www.hjcenry.com/2016/09/04/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    <id>http://www.hjcenry.com/2016/09/04/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</id>
    <published>2016-09-04T02:13:00.000Z</published>
    <updated>2020-09-29T03:25:11.723Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。</code></li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上文介绍了我们的SLG手游的服务器架构设计以及网络通信部分，本文介绍数据管理部分，在数据存储方面，我选择了Mysql、Memcache和Redis，利用这三种数据库各自的优势，各自发挥所长，在项目中有着不同的应用。</p><a id="more"></a><h2 id="游戏数据分析"><a href="#游戏数据分析" class="headerlink" title="游戏数据分析"></a>游戏数据分析</h2><p>前文已经对游戏数据做了大概的分析，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E6%B8%B8%E6%88%8F%E6%95%B0%E6%8D%AE.png" alt="游戏数据"><br>这是我个人对游戏中的数据进行的一种划分。其中，游戏数据直接使用代码将表文件中的数据加载到内存，然后从内存中读取数据即可。玩家数据则分为了热数据和冷数据两部分分别进行存储，最大程度利用Mysql和Redis各自的优势。</p><h2 id="游戏静态数据"><a href="#游戏静态数据" class="headerlink" title="游戏静态数据"></a>游戏静态数据</h2><p>在我们的这款游戏中，我们的静态数据配置在CSV表文件中，在服务器启动时，我读取所有的表文件，然后取出数据放到Map中，一般以一个标志性列（如ID）为key，一个JavaBean作为value放入到Map中。<br>读取CSV表文件步骤如下：<br>1.读取CSV文件<br>2.按一定格式对文件内容进行解析<br>3.将内容封装到JavaBean<br>4.存放数据到Map中<br>读取完了之后，在代码中如果需要，只需通过key在Map中来读取即可。<br>在项目中，我将整个过程进行了封装，封装成了dataConfig.xml文件、*.csv文件、JavaBean、CsvLoader.java、CsvParser.java和TempletService.java，添加一个CSV文件的步骤如下：<br>1.在dataConfig.xml中添加csv文件路径<br>2.创建一个和CSV文件中结构一模一样的JavaBean<br>3.服务器启动时调用CsvLoader的load()方法来加载所有的CSV文件<br>4.调用TempletService.listAll()方法，并传入Javabean的simpleName来加载CSV文件内容到List中<br>5.将List中的内容按一定结构存储（我一般都存为Map结构）</p><h3 id="dataConfig-xml"><a href="#dataConfig-xml" class="headerlink" title="dataConfig.xml"></a>dataConfig.xml</h3><p>dataConfig.xml中存储所有CSV表的路径，在CsvLoader.java中直接对这个xml表中的路径下的CSV文件进行读取加载。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">file</span> <span class="attr">name</span>=<span class="string">&quot;Card.csv&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">file</span> <span class="attr">name</span>=<span class="string">&quot;Equip.csv&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--省略更多CSV表--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSV文件"><a href="#CSV文件" class="headerlink" title="CSV文件"></a>CSV文件</h3><p>CSV文件中存储具体的游戏数据，这个数据表一般是由数值策划来进行配置。CSV表的本质就是按逗号进行分割的数据，如下是卡牌表的前两行数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">卡牌ID,卡牌名称,英雄动画名称,卡牌兵种name,卡牌兵种类型,卡牌兵种美术资源ID,品质编号,所属势力,英雄等级,英雄升星等级,技能id,统,勇,智,初始兵力,初始攻击力,兵力,攻击力,克制系数,被克制系数,移动速度,爆击率,爆击倍数,普攻伤害加深,普攻伤害减免,技能伤害加深,技能伤害减免,普攻伤害点数,普攻免伤点数,技能伤害点数,技能减伤点数,KPI,技能名称,技能描述：目标 目标个数（范围）效果数值buff描述,英雄定位</span><br><span class="line">CardId,CardName,CardFlashName,CardSoldName,CardSoldID,CardSoldFlashID,RMBID,CountryID,CardLv,CardStar,SkillID,Tong,Yong,Zhi,HpStar,AttackStar,Hp,Attack,Kezhi,Beikezhi,Speed,Crit,Double,AttackAddbaifen,Attackreducebaifen,SkillAddbaifen,Skillreducebaifen,AttackNum,AttackreduceNum,SkillAddNum,SkillreduceNum,KPI,SkillName,SkillDes,HeroLocal</span><br><span class="line">200001,吕布,lvbu,骑兵,2,4,8,4,1,1,200001,105,110,90,344,70,2.22,2.26,0.17,0.43,385,0.16,1.44,0.176,0.144,0.176,0.144,0,0,0,0,1000,猛将无双,对敌方所有目标造成 1倍伤害并且全体晕眩3秒</span><br><span class="line">200002,赵云,zhaoyun,步兵,3,1,8,2,1,1,200002,103,106,100,381,62,2.464,2.008,0.31,0.29,300,0.16,1.44,0.128,0.208,0.128,0.208,0,0,0,0,1000,枪出如龙,对敌方目标造成3次0.5倍伤害并提升自身50%爆击率持续4秒</span><br></pre></td></tr></table></figure><h3 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h3><p>添加了CSV文件之后，我们需要创建一个和CSV表结构一模一样的JavaBean，如下是卡牌表对应的JavaBean。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.template;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Card</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> CardId;</span><br><span class="line">    <span class="keyword">private</span> String CardName;</span><br><span class="line">    <span class="keyword">private</span> String CardFlashName;</span><br><span class="line">    <span class="keyword">private</span> String CardSoldName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> CardSoldID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> CardSoldFlashID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> RMBID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> CountryID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> CardLv;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> CardStar;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> SkillID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Tong;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Yong;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Zhi;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> HpStar;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> AttackStar;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Hp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Attack;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Kezhi;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Beikezhi;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> Speed;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Crit;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Double;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> AttackAddbaifen;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Attackreducebaifen;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> SkillAddbaifen;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> Skillreducebaifen;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> AttackreduceNum;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> AttackNum;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> SkillAddNum;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> SkillreduceNum;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> KPI;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter/setter</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CsvDataLoader-java"><a href="#CsvDataLoader-java" class="headerlink" title="CsvDataLoader.java"></a>CsvDataLoader.java</h3><p>CsvDataLoader封装了对CSV数据的载入，包括使用SAXReader对dataConfig.xml文件的读取，以及对其中的CSV文件的内容的读取，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.csv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentException;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameInit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsvDataLoader</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(CsvDataLoader.class);</span><br><span class="line">    <span class="keyword">private</span> String packageName;</span><br><span class="line">    <span class="keyword">private</span> String config; <span class="comment">// 每一行就是一个配置文件名字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> ActivityMaxValue;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CsvDataLoader inst;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CsvDataLoader</span><span class="params">(String packageName, String config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.packageName = packageName;</span><br><span class="line">        <span class="keyword">this</span>.config = config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CsvDataLoader <span class="title">getInstance</span><span class="params">(String packageName, String config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (inst == <span class="keyword">null</span>) &#123;</span><br><span class="line">            inst = <span class="keyword">new</span> CsvDataLoader(packageName, config);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inst;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用load方法加载所有的配置文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">load</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        InputStream resourceStream = <span class="keyword">this</span>.getClass().getResourceAsStream(</span><br><span class="line">                <span class="keyword">this</span>.config);</span><br><span class="line">        InputStreamReader resourceStreamReader = <span class="keyword">new</span> InputStreamReader(</span><br><span class="line">                resourceStream);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Document doc = reader.read(resourceStreamReader);</span><br><span class="line">            List&lt;?&gt; nodes = doc.selectNodes(<span class="string">&quot;/config/file&quot;</span>);</span><br><span class="line">            Map&lt;String, List&lt;?&gt;&gt; dataMap = <span class="keyword">new</span> HashMap&lt;String, List&lt;?&gt;&gt;();</span><br><span class="line">            List&lt;String&gt; files = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">            <span class="keyword">for</span> (Object n : nodes) &#123;</span><br><span class="line">                Element t = (Element) n;</span><br><span class="line">                String f = t.attributeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                List&lt;?&gt; dataList = <span class="keyword">this</span>.loadFile(f, <span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">for</span> (Object o : dataList) &#123;</span><br><span class="line">                    TempletService.getInstance().registerObject(o, dataMap);</span><br><span class="line">                &#125;</span><br><span class="line">                files.add(f);</span><br><span class="line">            &#125;</span><br><span class="line">            logger.info(<span class="string">&quot;读取配置完毕，准备afterLoad&quot;</span>);</span><br><span class="line">            TempletService.templetMap = dataMap;</span><br><span class="line">            TempletService.getInstance().afterLoad();</span><br><span class="line">            logger.info(<span class="string">&quot;afterLoad 完毕&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DocumentException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (resourceStreamReader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resourceStreamReader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (resourceStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resourceStream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;?&gt; loadFile(String file, <span class="keyword">boolean</span> exitWhenFail) &#123;<span class="comment">// 读文件</span></span><br><span class="line">        InputStream resourceAsStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String clzName = file.replaceAll(<span class="string">&quot;.csv&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            file = GameInit.confFileBasePath + file;</span><br><span class="line">            logger.info(<span class="string">&quot;load file: &#123;&#125;&quot;</span>, file);</span><br><span class="line">            <span class="comment">// resourceAsStream = this.getClass().getResourceAsStream(file);</span></span><br><span class="line">            resourceAsStream = <span class="keyword">this</span>.getClass().getClassLoader()</span><br><span class="line">                    .getResource(file).openStream();</span><br><span class="line">            <span class="keyword">if</span> (resourceAsStream == <span class="keyword">null</span>) &#123;</span><br><span class="line">                logger.error(<span class="string">&quot;文件不存在:&quot;</span> + file);</span><br><span class="line">                <span class="keyword">if</span> (exitWhenFail) &#123;</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> loadFromStream(resourceAsStream, clzName);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;载入文件出错：&quot;</span> + file);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (resourceAsStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resourceAsStream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Collections.EMPTY_LIST;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;?&gt; loadFromStream(InputStream resourceAsStream, String clzName)</span><br><span class="line">            <span class="keyword">throws</span> DocumentException, InstantiationException,</span><br><span class="line">            IllegalAccessException, IOException &#123;<span class="comment">// 读csv文件</span></span><br><span class="line">        CsvParser csvParser = <span class="keyword">new</span> CsvParser(resourceAsStream);</span><br><span class="line">        List&lt;String&gt; nodes = csvParser.getListWithNoHeader();</span><br><span class="line">        <span class="comment">// get clazz</span></span><br><span class="line">        String className = <span class="keyword">this</span>.packageName + clzName;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; classObject = Class.forName(className);</span><br><span class="line">            <span class="keyword">if</span> (classObject == <span class="keyword">null</span>) &#123;</span><br><span class="line">                logger.error(<span class="string">&quot;未找到类&quot;</span> + className);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Get all the declared fields</span></span><br><span class="line">            Field[] fields = classObject.getDeclaredFields();</span><br><span class="line">            LinkedList&lt;Field&gt; fieldList = <span class="keyword">new</span> LinkedList&lt;Field&gt;();</span><br><span class="line">            <span class="keyword">int</span> length = fields.length;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = -<span class="number">1</span>; ++i &lt; length;) &#123;</span><br><span class="line">                <span class="keyword">boolean</span> isStaticField = Modifier.isStatic(fields[i]</span><br><span class="line">                        .getModifiers());</span><br><span class="line">                <span class="keyword">if</span> (isStaticField)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">boolean</span> isTransientField = Modifier.isTransient(fields[i]</span><br><span class="line">                        .getModifiers());</span><br><span class="line">                <span class="keyword">if</span> (isTransientField)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                fieldList.add(fields[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Get all the declared fields of supper class</span></span><br><span class="line">            Class&lt;?&gt; tmp = classObject;</span><br><span class="line">            <span class="keyword">while</span> ((tmp = tmp.getSuperclass()) != Object.class) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;the extends class is&quot;</span> + tmp.getName());</span><br><span class="line">                fields = tmp.getDeclaredFields();</span><br><span class="line">                length = fields.length;</span><br><span class="line">                <span class="keyword">if</span> (length == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = -<span class="number">1</span>; ++i &lt; length;) &#123;</span><br><span class="line">                    <span class="keyword">boolean</span> isStaticField = Modifier.isStatic(fields[i]</span><br><span class="line">                            .getModifiers());</span><br><span class="line">                    <span class="keyword">if</span> (isStaticField)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">boolean</span> isTransientField = Modifier.isTransient(fields[i]</span><br><span class="line">                            .getModifiers());</span><br><span class="line">                    <span class="keyword">if</span> (isTransientField)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    fieldList.add(fields[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// The truly need to return object</span></span><br><span class="line">            List&lt;Object&gt; instances = <span class="keyword">new</span> ArrayList&lt;Object&gt;(nodes.size());</span><br><span class="line">            Object instance = <span class="keyword">null</span>;</span><br><span class="line">            String fieldName = <span class="keyword">null</span>;</span><br><span class="line">            String fieldValue = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (String node : nodes) &#123;</span><br><span class="line">                <span class="keyword">if</span> (node != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    instance = classObject.newInstance();</span><br><span class="line">                    <span class="keyword">boolean</span> ok = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="comment">// Element row = (Element) node;</span></span><br><span class="line">                    String[] values = node.split(<span class="string">&quot;,&quot;</span>);<span class="comment">// csv文件以英文逗号分割值</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fieldList.size(); i++) &#123;</span><br><span class="line">                        Field field = fieldList.get(i);</span><br><span class="line">                        fieldName = field.getName();</span><br><span class="line">                        fieldValue = values[i];</span><br><span class="line">                        <span class="keyword">if</span> (fieldValue == <span class="keyword">null</span>)</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">this</span>.setField(instance, field, fieldValue);</span><br><span class="line">                            ok = <span class="keyword">true</span>;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            logger.error(<span class="string">&quot;类名称是&quot;</span> + className + <span class="string">&quot;的属性&quot;</span> + fieldName</span><br><span class="line">                                    + <span class="string">&quot;没有被成功赋予静态数据&quot;</span>);</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (ok) &#123;</span><br><span class="line">                        instances.add(instance);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> instances;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e1) &#123;</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">            logger.error(<span class="string">&quot;未找到类&quot;</span> + className);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: setUnknowField</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ob</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setField</span><span class="params">(Object obj, Field f, String v)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IllegalArgumentException, IllegalAccessException </span>&#123;</span><br><span class="line">        f.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (f.getType() == <span class="keyword">int</span>.class) &#123;</span><br><span class="line">            f.setInt(obj, Integer.parseInt(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getType() == <span class="keyword">short</span>.class) &#123;</span><br><span class="line">            f.setShort(obj, Short.parseShort(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getType() == <span class="keyword">byte</span>.class) &#123;</span><br><span class="line">            f.setByte(obj, Byte.parseByte(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getType() == <span class="keyword">long</span>.class) &#123;</span><br><span class="line">            f.setLong(obj, Long.parseLong(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getType() == <span class="keyword">double</span>.class) &#123;</span><br><span class="line">            f.setDouble(obj, Double.parseDouble(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getType() == <span class="keyword">float</span>.class) &#123;</span><br><span class="line">            f.setFloat(obj, Float.parseFloat(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getType() == Timestamp.class) &#123;</span><br><span class="line">            f.set(obj, Timestamp.valueOf(v));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            f.set(obj, f.getType().cast(v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Test Code</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CsvDataLoader dl = <span class="keyword">new</span> CsvDataLoader(<span class="string">&quot;com.kidbear._36.template.&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/dataConfig.xml&quot;</span>);</span><br><span class="line">        dl.load();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CsvParser"><a href="#CsvParser" class="headerlink" title="CsvParser"></a>CsvParser</h3><p>CsvDataLoader中用到的CsvParser是具体对CSV文件按逗号分割的格式的解析的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.csv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JAVA 操作 excel 中的 .csv文件格式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CsvParser</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> BufferedReader bufferedreader = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CsvParser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CsvParser</span><span class="params">(InputStream inStream)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(inStream, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        bufferedreader = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">        String stemp;</span><br><span class="line">        <span class="keyword">while</span> ((stemp = bufferedreader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            list.add(stemp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">getList</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">getListWithNoHeader</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.subList(<span class="number">2</span>, list.size());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到csv文件的行数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRowNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到csv文件的列数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getColNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!list.toString().equals(<span class="string">&quot;[]&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (list.get(<span class="number">0</span>).toString().contains(<span class="string">&quot;,&quot;</span>)) &#123; <span class="comment">// csv文件中，每列之间的是用&#x27;,&#x27;来分隔的</span></span><br><span class="line">                <span class="keyword">return</span> list.get(<span class="number">0</span>).toString().split(<span class="string">&quot;,&quot;</span>).length;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list.get(<span class="number">0</span>).toString().trim().length() != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得指定行的值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.list.size() != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> (String) list.get(index);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得指定列的值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCol</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.getColNum() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer scol = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        String temp = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> colnum = <span class="keyword">this</span>.getColNum();</span><br><span class="line">        <span class="keyword">if</span> (colnum &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Iterator it = list.iterator(); it.hasNext();) &#123;</span><br><span class="line">                temp = it.next().toString();</span><br><span class="line">                scol = scol.append(temp.split(<span class="string">&quot;,&quot;</span>)[index] + <span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (Iterator it = list.iterator(); it.hasNext();) &#123;</span><br><span class="line">                temp = it.next().toString();</span><br><span class="line">                scol = scol.append(temp + <span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        String str = <span class="keyword">new</span> String(scol.toString());</span><br><span class="line">        str = str.substring(<span class="number">0</span>, str.length() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得指定行，指定列的值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getString</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col)</span> </span>&#123;</span><br><span class="line">        String temp = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">int</span> colnum = <span class="keyword">this</span>.getColNum();</span><br><span class="line">        <span class="keyword">if</span> (colnum &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            temp = list.get(row).toString().split(<span class="string">&quot;,&quot;</span>)[col];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (colnum == <span class="number">1</span>) &#123;</span><br><span class="line">            temp = list.get(row).toString();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            temp = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CsvClose</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bufferedreader.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">readCvs</span><span class="params">(String filename)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        CsvParser cu = <span class="keyword">new</span> CsvParser(<span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(filename)));</span><br><span class="line">        List list = cu.getList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createCsv</span><span class="params">(String biao, List list, String path)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        List tt = list;</span><br><span class="line">        String data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        SimpleDateFormat dataFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyyMMdd&quot;</span>);</span><br><span class="line">        Date today = <span class="keyword">new</span> Date();</span><br><span class="line">        String dateToday = dataFormat.format(today);</span><br><span class="line">        File file = <span class="keyword">new</span> File(path + <span class="string">&quot;resource/expert/&quot;</span> + dateToday</span><br><span class="line">                + <span class="string">&quot;importerrorinfo.csv&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists())</span><br><span class="line">            file.createNewFile();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            file.delete();</span><br><span class="line">        String str[];</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        sb.append(biao);</span><br><span class="line">        FileOutputStream writerStream = <span class="keyword">new</span> FileOutputStream(file, <span class="keyword">true</span>);</span><br><span class="line">        BufferedWriter output = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(</span><br><span class="line">                writerStream, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        <span class="keyword">for</span> (Iterator itt = tt.iterator(); itt.hasNext();) &#123;</span><br><span class="line">            String fileStr = itt.next().toString();</span><br><span class="line">            <span class="comment">// str = fileStr.split(&quot;,&quot;);</span></span><br><span class="line">            <span class="comment">// for (int i = 0; i &lt;= str.length - 1; i++) &#123; // 拆分成数组 用于插入数据库中</span></span><br><span class="line">            <span class="comment">// System.out.print(&quot;str[&quot; + i + &quot;]=&quot; + str[i] + &quot; &quot;);</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            <span class="comment">// System.out.println(&quot;&quot;);</span></span><br><span class="line">            sb.append(fileStr + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        output.write(sb.toString());</span><br><span class="line">        output.flush();</span><br><span class="line">        output.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TempletService-java"><a href="#TempletService-java" class="headerlink" title="TempletService.java"></a>TempletService.java</h3><p>服务器启动时，调用CsvDataLoader的load()方法，以完成对CSV文件的加载，之后就需要使用TempletService的listAll方法来讲数据加载到List中，TempletService根据JavaBean的simpleName来对数据进行加载，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.csv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加一个数据表需要做以下几步 </span></span><br><span class="line"><span class="comment"> * 1.在包com.kidbear._36.template下创建对应的模板类，类名与数据文件一致 </span></span><br><span class="line"><span class="comment"> * 2.在src/main/resources/csv/中添加模板数据文件</span></span><br><span class="line"><span class="comment"> * 3.在src/main/resources/dataConfig.xml加入刚才的模板数据文件</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 何金成</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TempletService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(TempletService.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> TempletService templetService = <span class="keyword">new</span> TempletService();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key:实体名 value:该实体下的所有模板数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, List&lt;?&gt;&gt; templetMap = <span class="keyword">new</span> HashMap&lt;String, List&lt;?&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TempletService</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TempletService <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> templetService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取该实体类下所有模板数据</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beanName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List <span class="title">listAll</span><span class="params">(String beanName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> templetMap.get(beanName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: registerObject </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>: 注册对象到对应类的List中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerObject</span><span class="params">(Object o, Map&lt;String, List&lt;?&gt;&gt; dataMap)</span> </span>&#123;</span><br><span class="line">        add(o.getClass().getSimpleName(), o, dataMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String key, Object data, Map&lt;String, List&lt;?&gt;&gt; dataMap)</span> </span>&#123;</span><br><span class="line">        List list = dataMap.get(key);</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="keyword">null</span>) &#123;</span><br><span class="line">            list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            dataMap.put(key, list);</span><br><span class="line">        &#125;</span><br><span class="line">        list.add(data);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterLoad</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加载后处理</span></span><br><span class="line">        <span class="comment">// List tests = TempletService.listAll(Test.class.getSimpleName());</span></span><br><span class="line">        <span class="comment">// for (Object object : tests) &#123;</span></span><br><span class="line">        <span class="comment">// Test test = (Test)object;</span></span><br><span class="line">        <span class="comment">// System.out.print(test.getEquipLv());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv1());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv2());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv3());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv4());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv5());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv6());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv7());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv8());</span></span><br><span class="line">        <span class="comment">// System.out.print(&quot;,&quot;+test.getLv9());</span></span><br><span class="line">        <span class="comment">// System.out.println(&quot;,&quot;+test.getLv10());</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadCanShu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 加载全局参数xml配置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用静态数据"><a href="#使用静态数据" class="headerlink" title="使用静态数据"></a>使用静态数据</h3><p>在完成了添加和加载等一系列操作之后，就可以在代码中调用CSV表中加载进来的数据了，例如上文提到的卡牌数据表，加载代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 卡牌数据表</span></span><br><span class="line">List&lt;Card&gt; cardList = TempletService</span><br><span class="line">                .listAll(Card.class.getSimpleName());</span><br><span class="line">Map&lt;Integer, Card&gt; cardMap = <span class="keyword">new</span> HashMap&lt;Integer, Card&gt;();</span><br><span class="line"><span class="keyword">for</span> (Card card : cardList) &#123;</span><br><span class="line">    cardMap.put(card.getCardId(), card);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.cardMap = cardMap;</span><br></pre></td></tr></table></figure><p>使用时只需要根据卡牌的Id，就可以取到这张卡牌的所有数据。</p><h2 id="Mysql存储数据"><a href="#Mysql存储数据" class="headerlink" title="Mysql存储数据"></a>Mysql存储数据</h2><p>我们使用Mysql作为冷数据的存储数据库，并使用Druid和Hibernate来创建数据库的连接以及增删改查的操作。在游戏数据中，我对游戏中的冷数据做了一个总结，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/Mysql%E6%95%B0%E6%8D%AE.png" alt="Mysql数据"><br>完成要存储的游戏数据的分析之后，我们就可以进行具体建模建表的工作，完成对数据的设计。由于在游戏服务器的数据存储中，数据库基本上只是一个游戏数据临时存放的地方，所以游戏数据中的关联性并不是特别强，所以不需要严密的数据库设计，只需简单的将玩家所有的数据按照一个userid进行关联即可，在使用Hibernate的时候，我们使用了Hibernate4，使用了它注解JavaBean自动建表的功能，我们只需将需要存储的Model写成JavaBean，并写上注解，在启动时，Hibernate扫描到JavaBean会自动为我们创建或更新表。</p><h3 id="Druid数据库连接池"><a href="#Druid数据库连接池" class="headerlink" title="Druid数据库连接池"></a>Druid数据库连接池</h3><p>游戏服务器运行中经常是多个玩家同时在线的，可想而知，如果同时进行某一项涉及数据库的操作时，也会并发请求数据库，多个数据库请求就需要我们对多个数据库连接进行有效的管理，当然，我们可以自己写一个数据库卡连接池来进行数据库管理，但好在以后前辈为我们做足了工作，有很多成型的开源数据库连接池可供我们选择，常见的有c3p0、dbcp、proxool和driud等，这里我们使用阿里巴巴公司的开源产品Druid，这是我个人认为最好用的数据库连接池，它不仅提供了数据库连接池应有的功能，更是提供了良好的数据库监控性能，这是我们作为开发人员在遇到性能瓶颈时最需要的东西，感兴趣的朋友可以参考下官方github，根据官方wiki配置一个Druid的数据监控系统，通过系统可以查看数据库的各种性能指标。<br>Druid在github中的地址是：<a href="https://github.com/alibaba/druid">https://github.com/alibaba/druid</a><br>在项目中使用druid，首先我们需要导入druid所需jar包以及Mysql的驱动jar包，由于我们是maven项目，我们就直接添加pom依赖，代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Mysql驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据库连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在spring的xml中对druid进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxActive&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.initialSize&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxWait&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.timeBetweenEvictionRunsMillis&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.minEvictableIdleTimeMillis&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--过滤 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;config,wall,mergeStat&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--密码加密 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- property name=&quot;connectionProperties&quot; value=&quot;config.decrypt=true&quot; / --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--合并多个数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useGloalDataSourceStat&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;proxyFilters&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;log-filter&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;stat-filter&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;log-filter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.filter.logging.Log4jFilter&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;statementLogErrorEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;statementLogEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;stat-filter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.filter.stat.StatFilter&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;slowSqlMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1000&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;logSlowSql&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后需要在web.xml中再对druid的filter进行配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>DruidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.alibaba.druid.support.http.WebStatFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>exclusions<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>weburi.json,.html,.js,.gif,.jpg,.png,.css,.ico,/fonts/*,/datas/*,images/*<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>sessionStatMaxCount<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>principalSessionName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>FRONT_USER<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>DruidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DruidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.alibaba.druid.support.http.StatViewServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DruidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/druid/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此为止，Druid的配置就算是完成，启动工程之后我们还能通过/druid路径来访问Druid提供的监控系统，更多关于Druid的使用可以参照github中的wiki介绍，了解更多Druid配置及参数设置。</p><h3 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a>Hibernate</h3><p>使用Hibernate作为Mysql数据库的ORM框架，主要是因为其良好的封装，首先我个人认为Hibernate的性能是不足与和原生JDBC以及MyBatis这样的框架所匹敌的，封装的更好却带来了更多的性能损失，但我使用他也是看中他良好的封装性，因为我对性能的需求还没有达到很高的级别；其次，Hibernate很难写出复杂的SQL查询，而MyBatis却可以写出一些复杂的SQL，但在我的设计中，我不需要太复杂的查询，基本上我所有的SQL语句的where条件都是”where userid=?”，因此在性能需求上以及易用的对比上，我选择了Hibernate。<br>我使用的版本你是Hibernate4，因为Hibernate4提供了注解自动创建表的功能，Hibernate集成在spring的配置的xml代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义事务管理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;org.springframework.orm.hibernate4.HibernateTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sessionFactory&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 事务执行方式 REQUIRED：指定当前方法必需在事务环境中运行， 如果当前有事务环境就加入当前正在执行的事务环境， 如果当前没有事务，就新建一个事务。 </span></span><br><span class="line"><span class="comment">            这是默认值。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;create*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;save*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;remove*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;del*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;import*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定当前方法以非事务方式执行操作，如果当前存在事务，就把当前事务挂起，等我以非事务的状态运行完，再继续原来的事务。 查询定义即可 </span></span><br><span class="line"><span class="comment">            read-only=&quot;true&quot; 表示只读 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;NOT_SUPPORTED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hibernate SessionFactory --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;org.springframework.orm.hibernate4.LocalSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- hibernate的相关属性配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernateProperties&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置数据库方言 --&gt;</span></span><br><span class="line">            hibernate.dialect=org.hibernate.dialect.MySQLDialect</span><br><span class="line">            <span class="comment">&lt;!-- 设置自动创建|更新|验证数据库表结构 --&gt;</span></span><br><span class="line">            hibernate.hbm2ddl.auto=update</span><br><span class="line">            <span class="comment">&lt;!-- 是否在控制台显示sql --&gt;</span></span><br><span class="line">            hibernate.show_sql=false</span><br><span class="line">            <span class="comment">&lt;!-- 是否格式化sql，优化显示 --&gt;</span></span><br><span class="line">            hibernate.format_sql=false</span><br><span class="line">            <span class="comment">&lt;!-- 是否开启二级缓存 --&gt;</span></span><br><span class="line">            hibernate.cache.use_second_level_cache=false</span><br><span class="line">            <span class="comment">&lt;!-- 是否开启查询缓存 --&gt;</span></span><br><span class="line">            hibernate.cache.use_query_cache=false</span><br><span class="line">            <span class="comment">&lt;!-- 数据库批量查询最大数 --&gt;</span></span><br><span class="line">            hibernate.jdbc.fetch_size=50</span><br><span class="line">            <span class="comment">&lt;!-- 数据库批量更新、添加、删除操作最大数 --&gt;</span></span><br><span class="line">            hibernate.jdbc.batch_size=50</span><br><span class="line">            <span class="comment">&lt;!-- 是否自动提交事务 --&gt;</span></span><br><span class="line">            hibernate.connection.autocommit=true</span><br><span class="line">            <span class="comment">&lt;!-- 指定hibernate在何时释放JDBC连接 --&gt;</span></span><br><span class="line">            hibernate.connection.release_mode=auto</span><br><span class="line">            <span class="comment">&lt;!-- 创建session方式 hibernate4.x 的方式 --&gt;</span></span><br><span class="line">            hibernate.current_session_context_class=thread</span><br><span class="line">            <span class="comment">&lt;!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包 </span></span><br><span class="line"><span class="comment">                所以把它设置为none即可 --&gt;</span></span><br><span class="line">            javax.persistence.validation.mode=none</span><br><span class="line">        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描实体对象 tdxy.bean的包结构中存放实体类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;packagesToScan&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.kidbear._36&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置完了之后，我们需要对我们需要进行存储的数据进行注解，如君主信息的Model如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.manager.junzhu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Column;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.cache.MCSupport;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;JunZhu&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JunZhu</span> <span class="keyword">implements</span> <span class="title">MCSupport</span> </span>&#123;</span><br><span class="line">    <span class="comment">// id，用户id，用户名字，用户所属国家，用户头像（用数字表示），用户等级，用户vip等级，用户军令数，用户金宝，用户银宝，用户粮食，用户精铁，用户木材，</span></span><br><span class="line">    <span class="comment">// 用户兵数量，用户军工数，用户将魂数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">5385044598250102957L</span>;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span> id;<span class="comment">// —用户id</span></span><br><span class="line">    <span class="keyword">public</span> String name;<span class="comment">// — 用户名</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> headImg;<span class="comment">// —用户头像</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> role;<span class="comment">// —用户角色</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> country;<span class="comment">// —用户所属国家 1表示蜀国 2表示魏国 3表示吴国</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> exp;<span class="comment">// —用户等级 —君主等级</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> level;<span class="comment">// —用户等级 —君主等级</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> vip;<span class="comment">// —用户vip等级</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> vipExp;<span class="comment">// —用户vip经验</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> junling;<span class="comment">// —用户军令数</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> coin;<span class="comment">// —用户金币</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> yuanbao;<span class="comment">// —用户元宝</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> food;<span class="comment">// —用户粮食</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> iron;<span class="comment">// —用户精铁</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> wood;<span class="comment">// —用户木材</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> soldierNum;<span class="comment">// —用户兵力</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> jungongNum;<span class="comment">// —用户军功数</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> jianghunNum;<span class="comment">// —将魂数量</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> shengwang;<span class="comment">// —声望</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> zxId;<span class="comment">// —阵型id</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> paySum;<span class="comment">// -充值总额</span></span><br><span class="line">    <span class="meta">@Column(columnDefinition = &quot;INT default 0&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> conduction;<span class="comment">// -新手引导</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter/setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码中，@Entity和@Table(name = “JunZhu”)就可以使Hibernate在启动时自动创建一个JunZhu表，@Id的属性即设为主键的字段。创建好Model之后，就可以使用Hibernate的session进行数据库操作，这里我将数据库的操作封装为一个工具类HibernateUtil，这个工具类大家可以拿去直接使用，具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.hibernate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Query;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SQLQuery;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.Where;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.transform.Transformers;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.FileSystemXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameInit;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.card.CardInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.equip.EquipInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.mail.MailInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.pve.PveInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.zhenxing.ZhenXingInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.zhenxing.ZhenxingMgr;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.task.ExecutorPool;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.cache.MC;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.cache.MCSupport;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.memcached.MemcachedCRUD;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> showMCHitLog = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(HibernateUtil.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;Class&lt;?&gt;, String&gt; beanKeyMap = <span class="keyword">new</span> HashMap&lt;Class&lt;?&gt;, String&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> synDelayT = <span class="number">0</span>;<span class="comment">// 延迟同步周期</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sessionFactory = buildSessionFactory();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SessionFactory <span class="title">getSessionFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sessionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Throwable <span class="title">insert</span><span class="params">(Object o, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        session.beginTransaction();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session.save(o);</span><br><span class="line">            session.getTransaction().commit();</span><br><span class="line">            <span class="keyword">if</span> (MC.cachedList.contains(o.getClass().getSimpleName())) &#123;</span><br><span class="line">                synMC4Insert(o.getClass().getSimpleName(), o,</span><br><span class="line">                        String.valueOf(id));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;0要insert的数据&#123;&#125;&quot;</span>, o == <span class="keyword">null</span> ? <span class="string">&quot;null&quot;</span> : JSONObject</span><br><span class="line">                    .fromObject(o).toString());</span><br><span class="line">            log.error(<span class="string">&quot;0保存出错&quot;</span>, e);</span><br><span class="line">            session.getTransaction().rollback();</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * FIXME 不要这样返回异常，没人会关系返回的异常。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Throwable <span class="title">save</span><span class="params">(Object o, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        Transaction t = session.beginTransaction();</span><br><span class="line">        <span class="keyword">boolean</span> mcOk = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (o <span class="keyword">instanceof</span> MCSupport) &#123;</span><br><span class="line">                MCSupport s = (MCSupport) o;<span class="comment">// 需要对控制了的对象在第一次存库时调用MC.add</span></span><br><span class="line">                MC.update(o, String.valueOf(s.getIdentifier()));<span class="comment">// MC中控制了哪些类存缓存。</span></span><br><span class="line">                mcOk = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">// session.update(o);</span></span><br><span class="line">                session.saveOrUpdate(o);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                session.saveOrUpdate(o);</span><br><span class="line">            &#125;</span><br><span class="line">            t.commit();</span><br><span class="line">            <span class="keyword">if</span> (o <span class="keyword">instanceof</span> MCSupport) &#123;</span><br><span class="line">                <span class="keyword">if</span> (MC.cachedList.contains(o.getClass().getSimpleName())) &#123;</span><br><span class="line">                    synMC4Save(o.getClass().getSimpleName(), o,</span><br><span class="line">                            String.valueOf(id));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;1要save的数据&#123;&#125;,&#123;&#125;&quot;</span>, o, o == <span class="keyword">null</span> ? <span class="string">&quot;null&quot;</span> : JSONObject</span><br><span class="line">                    .fromObject(o).toString());</span><br><span class="line">            <span class="keyword">if</span> (mcOk) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;MC保存成功后报错，可能是数据库条目丢失。&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            log.error(<span class="string">&quot;1保存出错&quot;</span>, e);</span><br><span class="line">            t.rollback();</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Throwable <span class="title">update</span><span class="params">(Object o, String id)</span> </span>&#123;</span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        Transaction t = session.beginTransaction();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (o <span class="keyword">instanceof</span> MCSupport) &#123;</span><br><span class="line">                MCSupport s = (MCSupport) o;<span class="comment">// 需要对控制了的对象在第一次存库时调用MC.add</span></span><br><span class="line">                MC.update(o, String.valueOf(s.getIdentifier()));<span class="comment">// MC中控制了哪些类存缓存。</span></span><br><span class="line">                session.update(o);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                session.update(o);</span><br><span class="line">            &#125;</span><br><span class="line">            t.commit();</span><br><span class="line">            <span class="keyword">if</span> (o <span class="keyword">instanceof</span> MCSupport) &#123;</span><br><span class="line">                <span class="keyword">if</span> (MC.cachedList.contains(o.getClass().getSimpleName())) &#123;</span><br><span class="line">                    synMC4Update(o.getClass().getSimpleName(), o,</span><br><span class="line">                            String.valueOf(id));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;1要update的数据&#123;&#125;,&#123;&#125;&quot;</span>, o, o == <span class="keyword">null</span> ? <span class="string">&quot;null&quot;</span> : JSONObject</span><br><span class="line">                    .fromObject(o).toString());</span><br><span class="line">            log.error(<span class="string">&quot;1保存出错&quot;</span>, e);</span><br><span class="line">            t.rollback();</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">find</span><span class="params">(Class&lt;T&gt; t, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        String keyField = getKeyField(t);</span><br><span class="line">        <span class="keyword">if</span> (keyField == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;类型&quot;</span> + t + <span class="string">&quot;没有标注主键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!MC.cachedClass.contains(t)) &#123;</span><br><span class="line">            <span class="keyword">return</span> find(t, <span class="string">&quot;where &quot;</span> + keyField + <span class="string">&quot;=&quot;</span> + id, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        T ret = MC.get(t, String.valueOf(id));</span><br><span class="line">        <span class="keyword">if</span> (ret == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                log.info(<span class="string">&quot;MC未命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), id);</span><br><span class="line">            ret = find(t, <span class="string">&quot;where &quot;</span> + keyField + <span class="string">&quot;=&quot;</span> + id, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (ret != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                    log.info(<span class="string">&quot;DB命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), id);</span><br><span class="line">                MC.add(ret, String.valueOf(id));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                    log.info(<span class="string">&quot;DB未命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                log.info(<span class="string">&quot;MC命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), id);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">find</span><span class="params">(Class&lt;T&gt; t, String where)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> find(t, where, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">find</span><span class="params">(Class&lt;T&gt; t, String where, <span class="keyword">boolean</span> checkMCControl)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// if (checkMCControl &amp;&amp; MC.cachedClass.contains(t)) &#123;</span></span><br><span class="line">        <span class="comment">// // 请使用static &lt;T&gt; T find(Class&lt;T&gt; t,long id)</span></span><br><span class="line">        <span class="comment">// throw new BaseException(&quot;由MC控制的类不能直接查询DB:&quot; + t);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        Transaction tr = session.beginTransaction();</span><br><span class="line">        T ret = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// FIXME 使用 session的get方法代替。</span></span><br><span class="line">            String hql = <span class="string">&quot;from &quot;</span> + t.getSimpleName() + <span class="string">&quot; &quot;</span> + where;</span><br><span class="line">            Query query = session.createQuery(hql);</span><br><span class="line">            ret = (T) query.uniqueResult();</span><br><span class="line">            tr.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tr.rollback();</span><br><span class="line">            log.error(<span class="string">&quot;list fail for &#123;&#125; &#123;&#125;&quot;</span>, t, where);</span><br><span class="line">            log.error(<span class="string">&quot;list fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">list</span><span class="params">(Class&lt;T&gt; t, <span class="keyword">long</span> id, String where)</span> </span>&#123;</span><br><span class="line">        String keyField = getKeyField(t);</span><br><span class="line">        <span class="keyword">if</span> (keyField == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;类型&quot;</span> + t + <span class="string">&quot;没有标注主键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!MC.cachedList.contains(t.getSimpleName())) &#123;</span><br><span class="line">            <span class="keyword">return</span> list(t, where, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;T&gt; ret = MC.getList(t, String.valueOf(id), where);</span><br><span class="line">        <span class="keyword">if</span> (ret == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                log.info(<span class="string">&quot;MC未命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), where);</span><br><span class="line">            ret = list(t, where, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (ret != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                    log.info(<span class="string">&quot;DB命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), where);</span><br><span class="line">                MC.addList(ret, t.getSimpleName(), String.valueOf(id), where);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                    log.info(<span class="string">&quot;DB未命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), where);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (showMCHitLog)</span><br><span class="line">                log.info(<span class="string">&quot;MC命中&#123;&#125;#&#123;&#125;&quot;</span>, t.getSimpleName(), where);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> where</span></span><br><span class="line"><span class="comment">     *            例子： where uid&gt;100</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">list</span><span class="params">(Class&lt;T&gt; t, String where,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">boolean</span> checkMCControl)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// if (checkMCControl &amp;&amp; MC.cachedList.contains(t)) &#123;</span></span><br><span class="line">        <span class="comment">// // 请使用static &lt;T&gt; T find(Class&lt;T&gt; t,long id)</span></span><br><span class="line">        <span class="comment">// throw new BaseException(&quot;由MC控制的类不能直接查询DB:&quot; + t);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        Transaction tr = session.beginTransaction();</span><br><span class="line">        List&lt;T&gt; list = Collections.EMPTY_LIST;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String hql = <span class="string">&quot;from &quot;</span> + t.getSimpleName() + <span class="string">&quot; &quot;</span> + where;</span><br><span class="line">            Query query = session.createQuery(hql);</span><br><span class="line">            list = query.list();</span><br><span class="line">            tr.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tr.rollback();</span><br><span class="line">            log.error(<span class="string">&quot;list fail for &#123;&#125; &#123;&#125;&quot;</span>, t, where);</span><br><span class="line">            log.error(<span class="string">&quot;list fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SessionFactory <span class="title">buildSessionFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始构建hibernate&quot;</span>);</span><br><span class="line">        String path = <span class="string">&quot;classpath*:spring-conf/applicationContext.xml&quot;</span>;</span><br><span class="line">        ApplicationContext ac = <span class="keyword">new</span> FileSystemXmlApplicationContext(path);</span><br><span class="line">        sessionFactory = (SessionFactory) ac.getBean(<span class="string">&quot;sessionFactory&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;结束构建hibernate&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> sessionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Throwable <span class="title">delete</span><span class="params">(Object o, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        session.beginTransaction();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session.delete(o);</span><br><span class="line">            session.getTransaction().commit();</span><br><span class="line">            <span class="keyword">if</span> (o <span class="keyword">instanceof</span> MCSupport) &#123;</span><br><span class="line">                MCSupport s = (MCSupport) o;<span class="comment">// 需要对控制了的对象在第一次存库时调用MC.add</span></span><br><span class="line">                MC.delete(o.getClass(), String.valueOf(s.getIdentifier()));<span class="comment">// MC中控制了哪些类存缓存。</span></span><br><span class="line">                <span class="keyword">if</span> (MC.cachedList.contains(o.getClass().getSimpleName())) &#123;</span><br><span class="line">                    synMC4Delete(o.getClass().getSimpleName(), o,</span><br><span class="line">                            String.valueOf(id));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;要删除的数据&#123;&#125;&quot;</span>, o);</span><br><span class="line">            log.error(<span class="string">&quot;出错&quot;</span>, e);</span><br><span class="line">            session.getTransaction().rollback();</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注意这个方法会返回大于等于1的值。数据库无记录也会返回1，而不是null</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Long <span class="title">getTableIDMax</span><span class="params">(Class&lt;T&gt; t)</span> </span>&#123;</span><br><span class="line">        Long id = <span class="keyword">null</span>;</span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        Transaction tr = session.beginTransaction();</span><br><span class="line">        String hql = <span class="string">&quot;select max(id) from &quot;</span> + t.getSimpleName();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Query query = session.createQuery(hql);</span><br><span class="line">            Object uniqueResult = query.uniqueResult();</span><br><span class="line">            <span class="keyword">if</span> (uniqueResult == <span class="keyword">null</span>) &#123;</span><br><span class="line">                id = <span class="number">1L</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                id = Long.parseLong(uniqueResult + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                id = Math.max(<span class="number">1L</span>, id);</span><br><span class="line">            &#125;</span><br><span class="line">            tr.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tr.rollback();</span><br><span class="line">            log.error(<span class="string">&quot;query max id fail for &#123;&#125; &#123;&#125;&quot;</span>, t, hql);</span><br><span class="line">            log.error(<span class="string">&quot;query max id fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Map&lt;String, Object&gt;&gt; querySql(String hql) &#123;</span><br><span class="line">        Session session = sessionFactory.getCurrentSession();</span><br><span class="line">        Transaction tr = session.beginTransaction();</span><br><span class="line">        List list = Collections.emptyList();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SQLQuery query = session.createSQLQuery(hql);</span><br><span class="line">            query.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP);</span><br><span class="line">            list = query.list();</span><br><span class="line">            tr.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tr.rollback();</span><br><span class="line">            log.error(<span class="string">&quot;query  failed &#123;&#125;&quot;</span>, hql);</span><br><span class="line">            log.error(<span class="string">&quot;query count(type) fail&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码中，除了调用session的数据库操作API之外，我还使用了Memcache进行结果集的缓存，具体关系Memcache和Mysql的集合使用，在下文中在进行讲解。上文代码中首先在服务器启动时，需要构建SessionFactory，然后通过操作session开始事务，通过session调用CRUD方法进行操作，之后再调用commit方法提交并结束事务，中间如果发生异常则进行rollback操作回滚事务。</p><h2 id="Redis存储数据"><a href="#Redis存储数据" class="headerlink" title="Redis存储数据"></a>Redis存储数据</h2><p>游戏中的热数据的存储我选用了Redis，Redis不仅是运行在内存上的内存数据库，并且它的数据存储结构也是很丰富的，包括String，Set，List，Sorted Set和Hash五种数据结构，我对游戏数据的热数据进行了分析，如下图：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/Redis%E6%95%B0%E6%8D%AE.png" alt="Redis数据"><br>使用Redis首先得了解Redis的五种基本数据类型，每一种数据类型都对应不同的Redis操作API，在Java中使用Redis可以使用官方提供的Jedis客户端，Jedis客户端中包含了各种数据类型的操作，我将所有的Redis操作都封装在了Redis类中，启动时调用init方法进行Redis连接，使用时通过getInstance获取实例，再调用相应的API即可完成相关的Redis操作，在init方法中，我是通过调用JedisSentinelPool去获取Redis的连接，因为我在服务器对Redis做了Sentinel的集群部署，大家可以直接拿这个Redis工具类去使用，Redis类的方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.BeanInfo;</span><br><span class="line"><span class="keyword">import</span> java.beans.IntrospectionException;</span><br><span class="line"><span class="keyword">import</span> java.beans.Introspector;</span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyDescriptor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.HostAndPort;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisSentinelPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Tuple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameInit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Redis</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Redis instance;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(Redis.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GLOBAL_DB = <span class="number">0</span>;<span class="comment">// 全局</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOGIC_DB = GameInit.serverId;<span class="comment">// 模块库</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Redis <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> Redis();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// private JedisPool pool;</span></span><br><span class="line">    <span class="keyword">private</span> JedisSentinelPool sentinelPool;</span><br><span class="line">    <span class="keyword">public</span> String host;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// public int getDB(long userid)&#123;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.sentinelPool.getResource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">returnResource</span><span class="params">(Jedis jedis)</span> </span>&#123;</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="comment">// this.sentinelPool.returnResource(jedis);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String redisServer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (GameInit.cfg != <span class="keyword">null</span>) &#123;</span><br><span class="line">            redisServer = GameInit.cfg.get(<span class="string">&quot;redisServer&quot;</span>);</span><br><span class="line">            password = GameInit.cfg.get(<span class="string">&quot;redisPwd&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (redisServer == <span class="keyword">null</span>) &#123;</span><br><span class="line">            redisServer = <span class="string">&quot;127.0.0.1:6440&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        redisServer = redisServer.trim();</span><br><span class="line">        String[] tmp = redisServer.split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">        host = tmp[<span class="number">0</span>];</span><br><span class="line">        port = Integer.parseInt(tmp[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (tmp.length == <span class="number">2</span>) &#123;</span><br><span class="line">            port = Integer.parseInt(tmp[<span class="number">1</span>].trim());</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;Redis sentinel at &#123;&#125;:&#123;&#125;&quot;</span>, host, port);</span><br><span class="line">        <span class="comment">// sentinelPool = new JedisPool(host, port);</span></span><br><span class="line">        Set sentinels = <span class="keyword">new</span> HashSet();</span><br><span class="line">        sentinels.add(<span class="keyword">new</span> HostAndPort(host, port).toString());</span><br><span class="line">        sentinelPool = <span class="keyword">new</span> JedisSentinelPool(<span class="string">&quot;master1&quot;</span>, sentinels);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// private void init() &#123;</span></span><br><span class="line">    <span class="comment">// String redisServer = null;</span></span><br><span class="line">    <span class="comment">// if (GameInit.cfg != null) &#123;</span></span><br><span class="line">    <span class="comment">// redisServer = GameInit.cfg.get(&quot;redisServer&quot;);</span></span><br><span class="line">    <span class="comment">// password = GameInit.cfg.get(&quot;redisPwd&quot;);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if (redisServer == null) &#123;</span></span><br><span class="line">    <span class="comment">// redisServer = &quot;127.0.0.1:6379&quot;;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// redisServer = redisServer.trim();</span></span><br><span class="line">    <span class="comment">// String[] tmp = redisServer.split(&quot;:&quot;);</span></span><br><span class="line">    <span class="comment">// host = tmp[0];</span></span><br><span class="line">    <span class="comment">// port = Integer.parseInt(tmp[1]);</span></span><br><span class="line">    <span class="comment">// if (tmp.length == 2) &#123;</span></span><br><span class="line">    <span class="comment">// port = Integer.parseInt(tmp[1].trim());</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// log.info(&quot;Redis at &#123;&#125;:&#123;&#125;&quot;, host, port);</span></span><br><span class="line">    <span class="comment">// // sentinelPool = new JedisPool(host, port);</span></span><br><span class="line">    <span class="comment">// JedisPoolConfig config = new JedisPoolConfig();</span></span><br><span class="line">    <span class="comment">// sentinelPool = new JedisPool(config, host, port, 100000, password);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Jedis j = getJedis();</span><br><span class="line">        j.auth(password);</span><br><span class="line">        returnResource(j);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        Jedis j = getJedis();</span><br><span class="line">        j.auth(password);</span><br><span class="line">        j.select(index);</span><br><span class="line">        returnResource(j);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hexist</span><span class="params">(<span class="keyword">int</span> db, String key, String field)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        <span class="keyword">boolean</span> ret = redis.hexists(key, field);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">hdel</span><span class="params">(<span class="keyword">int</span> db, String key, String... fields)</span> </span>&#123;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        Long cnt = redis.hdel(key, fields);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hget</span><span class="params">(<span class="keyword">int</span> db, String key, String field)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        String ret = redis.hget(key, field);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">hgetAll</span><span class="params">(<span class="keyword">int</span> db, String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        Map&lt;String, String&gt; ret = redis.hgetAll(key);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hset</span><span class="params">(<span class="keyword">int</span> db, String key, String field, String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (field == <span class="keyword">null</span> || field.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span> || value.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        redis.hset(key, field, value);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> db, String group, String key, String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span> || key == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        redis.hset(group, key, value);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> db, String key, String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span> || key == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        redis.set(key, value);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(<span class="keyword">int</span> db, String key)</span> </span>&#123;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        String ret = redis.get(key);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加元素到集合中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> element</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sadd</span><span class="params">(<span class="keyword">int</span> db, String key, String... element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (element == <span class="keyword">null</span> || element.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        <span class="keyword">boolean</span> success = redis.sadd(key, element) == <span class="number">1</span>;</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">smove</span><span class="params">(<span class="keyword">int</span> db, String oldKey, String newKey, String element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (element == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jedis redis = getJedis();</span><br><span class="line">        redis.auth(password);</span><br><span class="line">        redis.select(db);</span><br><span class="line">        <span class="keyword">boolean</span> success = (redis.smove(oldKey, newKey, element) == <span class="number">1</span>);</span><br><span class="line">        returnResource(redis);</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        getInstance().sentinelPool.destroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中间省略一万字：中间都是Redis的各种API的操作，需要了解的朋友可以去看看Jedis的API文档</span></span><br></pre></td></tr></table></figure><h2 id="Memcache数据结果集缓存"><a href="#Memcache数据结果集缓存" class="headerlink" title="Memcache数据结果集缓存"></a>Memcache数据结果集缓存</h2><p>上文在介绍Hibernate中说到了Memcache对Mysql结果集的缓存，Memcache作为一种内存数据库，经常用作应用系统的缓存系统，我也将Memcache引入到项目作为Mysql数据结果集的缓存系统，其实在实现Memcache对Mysql查询的缓存的过程中，我曾进行了多种尝试，具体有以下几种缓存模型：<br>1.无缓存<br>这种方式不使用Memcache缓存，游戏服务器的操作直接穿透到Mysql中，这种方式在高并发环境下容易引起Mysql服务器高负载情况，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B1.png" alt="缓存模型1"><br>2.查询使用缓存，更新穿透到数据库，数据库同步数据到缓存<br>这种方式在客户端表现来看可以提供一部分速度，因为查询操作都是基于缓存的，但实际上Mysql的负担反而加大了，因为每一个更新请求，都需要Mysql同步最新的查询结果集给Memcache，因为每一个更新操作都会带来一个查询操作，当然这个同步过程可以使异步，但是就算我们感受不到这个同步的过程，但在实际上也是加大了数据库的负载，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B2.png" alt="缓存模型2"><br>3.更新和查询都使用缓存，缓存按策略与数据库进行同步<br>这种方式是比较好的方式，因为客户端的所有操作都是被缓存给拦截下来了，所有操作均是基于缓存，不会穿透到数据库，而缓存与数据库之间可以按照一定策略进行同步，如每5分钟同步一次数据到数据库等，具体同步策略可根据情况具体调整，当然这种方式的缺陷就是一旦服务器宕机，那么在上次同步到宕机这段时间之间的数据都会丢失，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B3.png" alt="缓存模型3"><br>4.更新和查询都是用缓存，更新操作同时穿透到数据库，数据库同步缓存的查询<br>这种方式是我最终使用的方式，虽然更新操作穿透到数据库，但是我可以在保证查询效率的同时，也保证数据的安全稳定性，因为每一步更新操作都是要进行数据库存储的，并且所有的查询操作可以直接在缓存中进行，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B4.png" alt="缓存模型4"></p><p>需要支持缓存的类需实现MCSupport接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现此接口后还需要再MC类中增加cachedClass，并使用</span></span><br><span class="line"><span class="comment"> * com.qx.persistent.HibernateUtil.find(Class&lt;T&gt;, long)</span></span><br><span class="line"><span class="comment"> * 代替where进行查询。</span></span><br><span class="line"><span class="comment"> * 需要对控制了的对象在第一次存库时调用MC.add，再调用HIbernateUtil.insert</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 何金成</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MCSupport</span> <span class="keyword">extends</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">getIdentifier</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Memcache的工具类MemcacheCRUD实现了Memcache的连接，以及add，update，delete等操作，具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.memcached;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.danga.MemCached.MemCachedClient;</span><br><span class="line"><span class="keyword">import</span> com.danga.MemCached.SockIOPool;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameInit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 何金成</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MemcachedCRUD</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> Logger logger = LoggerFactory</span><br><span class="line">            .getLogger(MemcachedCRUD.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String poolName = <span class="string">&quot;gameDBPool&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> MemCachedClient memCachedClient;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> MemcachedCRUD memcachedCRUD = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SockIOPool sockIoPool;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MemcachedCRUD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sockIoPool = init(poolName, <span class="string">&quot;cacheServer&quot;</span>);</span><br><span class="line">        memCachedClient = <span class="keyword">new</span> MemCachedClient(poolName);</span><br><span class="line">        <span class="comment">// if true, then store all primitives as their string value.</span></span><br><span class="line">        memCachedClient.setPrimitiveAsString(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SockIOPool <span class="title">init</span><span class="params">(String poolName, String confKey)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存服务器</span></span><br><span class="line">        String cacheServers = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (GameInit.cfg != <span class="keyword">null</span>) &#123;</span><br><span class="line">            cacheServers = GameInit.cfg.getServerByName(confKey);</span><br><span class="line">        &#125;</span><br><span class="line">        String server[] = &#123; <span class="string">&quot;127.0.0.1:11211&quot;</span> &#125;;</span><br><span class="line">        <span class="keyword">if</span> (cacheServers == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(cacheServers)) &#123;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            server[<span class="number">0</span>] = cacheServers;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建一个连接池</span></span><br><span class="line">        SockIOPool pool = SockIOPool.getInstance(poolName);</span><br><span class="line">        logger.info(<span class="string">&quot;连接池&#123;&#125;缓存配置 &#123;&#125;&quot;</span>, poolName, Arrays.toString(server));</span><br><span class="line">        pool.setServers(server);<span class="comment">// 缓存服务器</span></span><br><span class="line">        pool.setInitConn(<span class="number">50</span>); <span class="comment">// 初始化链接数</span></span><br><span class="line">        pool.setMinConn(<span class="number">50</span>); <span class="comment">// 最小链接数</span></span><br><span class="line">        pool.setMaxConn(<span class="number">500</span>); <span class="comment">// 最大连接数</span></span><br><span class="line">        pool.setMaxIdle(<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>);<span class="comment">// 最大处理时间</span></span><br><span class="line">        pool.setMaintSleep(<span class="number">3000</span>);<span class="comment">// 设置主线程睡眠时,每3秒苏醒一次，维持连接池大小</span></span><br><span class="line">        pool.setNagle(<span class="keyword">false</span>);<span class="comment">// 关闭套接字缓存</span></span><br><span class="line">        pool.setSocketTO(<span class="number">3000</span>);<span class="comment">// 链接建立后超时时间</span></span><br><span class="line">        pool.setSocketConnectTO(<span class="number">0</span>);<span class="comment">// 链接建立时的超时时间</span></span><br><span class="line">        pool.initialize();</span><br><span class="line">        <span class="keyword">return</span> pool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sockIoPool.shutDown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MemcachedCRUD <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (memcachedCRUD == <span class="keyword">null</span>) &#123;</span><br><span class="line">            memcachedCRUD = <span class="keyword">new</span> MemcachedCRUD();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> memcachedCRUD;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> INTERVAL = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">exist</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> memCachedClient.keyExists(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(String key, Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> memCachedClient.add(key, o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">update</span><span class="params">(String key, Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> memCachedClient.replace(key, o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">saveObject</span><span class="params">(String key, Object msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> o = memCachedClient.keyExists(key);</span><br><span class="line">        <span class="keyword">if</span> (o) &#123;<span class="comment">// 存在替换掉</span></span><br><span class="line">            <span class="keyword">return</span> memCachedClient.replace(key, msg);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> memCachedClient.add(key, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">keyExist</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> memCachedClient.keyExists(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * delete</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteObject</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> memCachedClient.delete(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getObject</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        Object obj = memCachedClient.get(key);</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MemCachedClient <span class="title">getMemCachedClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> memCachedClient;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用Memcache进行缓存，则需要封装一个缓存的操作工具类MC，封装各种缓存操作方法，具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.util.cache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameInit;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.bag.ItemInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.building.BuildingInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.card.CardInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.equip.EquipInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.junzhu.JunZhu;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.mail.MailInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.pve.PveInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.task.MainTaskInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.tec.TecInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.zhenxing.ZhenXingInfo;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.memcached.MemcachedCRUD;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MC</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 控制哪些类进行memcached缓存。 被控制的类在进行创建时，需要注意调用MC的add和hibernate的insert。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Set&lt;Class&lt;? extends MCSupport&gt;&gt; cachedClass = <span class="keyword">new</span> HashSet&lt;Class&lt;? extends MCSupport&gt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Set&lt;String&gt; cachedList = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        cachedClass.add(JunZhu.class);</span><br><span class="line">        <span class="comment">// 添加需要缓存find操作的类</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        cachedList.add(CardInfo.class.getSimpleName());</span><br><span class="line">        <span class="comment">// 添加需要缓存list操作的类</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">get</span><span class="params">(Class&lt;T&gt; t, String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedClass.contains(t)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>).append(t.getSimpleName())</span><br><span class="line">                .append(<span class="string">&quot;#&quot;</span>).append(id);</span><br><span class="line">        Object o = MemcachedCRUD.getInstance().getObject(key.toString());</span><br><span class="line">        <span class="keyword">return</span> (T) o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">getList</span><span class="params">(Class&lt;T&gt; t, String id, String where)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedList.contains(t.getSimpleName())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>).append(id).append(<span class="string">&quot;#&quot;</span>)</span><br><span class="line">                .append(t.getSimpleName()).append(<span class="string">&quot;#&quot;</span>).append(where);</span><br><span class="line">        Object o = MemcachedCRUD.getInstance().getObject(key.toString());</span><br><span class="line">        <span class="keyword">return</span> (List&lt;T&gt;) o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">String <span class="title">getListKeys</span><span class="params">(String tName, String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedList.contains(tName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>).append(id).append(<span class="string">&quot;#&quot;</span>)</span><br><span class="line">                .append(tName);</span><br><span class="line">        Object o = MemcachedCRUD.getInstance().getObject(key.toString());</span><br><span class="line">        <span class="keyword">return</span> (String) o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getValue</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        Object o = MemcachedCRUD.getInstance().getObject(key);</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(Object t, String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedClass.contains(t.getClass())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>)</span><br><span class="line">                .append(t.getClass().getSimpleName()).append(<span class="string">&quot;#&quot;</span>).append(id);</span><br><span class="line">        <span class="keyword">return</span> MemcachedCRUD.getInstance().add(key.toString(), t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">addList</span><span class="params">(List list, String tName, String id,</span></span></span><br><span class="line"><span class="function"><span class="params">            String where)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedList.contains(tName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>).append(id).append(<span class="string">&quot;#&quot;</span>)</span><br><span class="line">                .append(tName);</span><br><span class="line">        String c = key.toString();</span><br><span class="line">        key.append(<span class="string">&quot;#&quot;</span>).append(where);</span><br><span class="line">        Object tmp = MemcachedCRUD.getInstance().getObject(c);</span><br><span class="line">        String keys = tmp == <span class="keyword">null</span> ? <span class="string">&quot;&quot;</span> : (String) tmp;</span><br><span class="line">        <span class="keyword">if</span> (keys.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            MemcachedCRUD.getInstance().add(c, key.toString());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!keys.contains(key.toString())) &#123;</span><br><span class="line">            MemcachedCRUD.getInstance().update(c, keys + <span class="string">&quot;,&quot;</span> + key.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> MemcachedCRUD.getInstance().add(key.toString(), list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">addKeyValue</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MemcachedCRUD.getInstance().add(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Object t, String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedClass.contains(t.getClass())) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>)</span><br><span class="line">                .append(t.getClass().getSimpleName()).append(<span class="string">&quot;#&quot;</span>).append(id);</span><br><span class="line">        MemcachedCRUD.getInstance().update(key.toString(), t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">updateList</span><span class="params">(List list, String tName, String id,</span></span></span><br><span class="line"><span class="function"><span class="params">            String where)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedList.contains(tName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>).append(id).append(<span class="string">&quot;#&quot;</span>)</span><br><span class="line">                .append(tName);</span><br><span class="line">        String c = key.toString();</span><br><span class="line">        key.append(<span class="string">&quot;#&quot;</span>).append(where);</span><br><span class="line">        Object tmp = MemcachedCRUD.getInstance().getObject(c);</span><br><span class="line">        String keys = tmp == <span class="keyword">null</span> ? <span class="string">&quot;&quot;</span> : (String) tmp;</span><br><span class="line">        <span class="keyword">if</span> (keys.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            MemcachedCRUD.getInstance().add(c, key.toString());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!keys.contains(key)) &#123;</span><br><span class="line">            MemcachedCRUD.getInstance().update(c, keys + <span class="string">&quot;,&quot;</span> + key.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> MemcachedCRUD.getInstance().update(key.toString(), list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键删除缓存</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     *            删除对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     *            主键id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Class clazz, String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedClass.contains(clazz)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer key = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        key.append(GameInit.serverId).append(<span class="string">&quot;#&quot;</span>).append(clazz.getSimpleName())</span><br><span class="line">                .append(<span class="string">&quot;#&quot;</span>).append(id);</span><br><span class="line">        MemcachedCRUD.getInstance().deleteObject(key.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码中，find方法的缓存和list方法的缓存需要分别实现，find方法缓存只需要将类名和id作为key，对象作为value即可，而list的缓存不仅需要缓存所有的结果集，还需要缓存所有的where查询条件，根据类型查询出where条件，然后根据where条件分别进行缓存。<br>HibernateUtil中使用缓存部分的java代码如下，其中注释的方法为上面第二种缓存模型的实现（现已被我淘汰）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">synMC4Insert</span><span class="params">(String tName, Object o, String id)</span> </span>&#123;</span><br><span class="line">    String keys = MC.getListKeys(tName, id);</span><br><span class="line">    <span class="keyword">if</span> (keys != <span class="keyword">null</span> &amp;&amp; keys.length() &gt; <span class="number">0</span>) &#123;<span class="comment">// 遍历所有的where缓存</span></span><br><span class="line">        String[] wheres = keys.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String where : wheres) &#123;</span><br><span class="line">            where = where.split(<span class="string">&quot;#&quot;</span>)[<span class="number">3</span>];</span><br><span class="line">            List list = MC.getList(o.getClass(), id, where);</span><br><span class="line">            list.add(o);</span><br><span class="line">            MC.updateList(list, tName, id, where);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">synMC4Save</span><span class="params">(String tName, Object o, String id)</span> </span>&#123;</span><br><span class="line">    String keys = MC.getListKeys(tName, id);</span><br><span class="line">    <span class="keyword">if</span> (keys != <span class="keyword">null</span> &amp;&amp; keys.length() &gt; <span class="number">0</span>) &#123;<span class="comment">// 遍历所有的where缓存</span></span><br><span class="line">        String[] wheres = keys.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String where : wheres) &#123;</span><br><span class="line">            where = where.split(<span class="string">&quot;#&quot;</span>)[<span class="number">3</span>];</span><br><span class="line">            List list = MC.getList(o.getClass(), id, where);</span><br><span class="line">            MCSupport mc = (MCSupport) o;</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (Iterator iterator = list.iterator(); iterator.hasNext(); index++) &#123;</span><br><span class="line">                MCSupport tmpObj = (MCSupport) iterator.next();</span><br><span class="line">                <span class="keyword">if</span> (tmpObj.getIdentifier() == mc.getIdentifier()) &#123;</span><br><span class="line">                    list.set(index, o);</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                list.add(o);</span><br><span class="line">            &#125;</span><br><span class="line">            MC.updateList(list, tName, id, where);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">synMC4Update</span><span class="params">(String tName, Object o, String id)</span> </span>&#123;</span><br><span class="line">    String keys = MC.getListKeys(tName, id);</span><br><span class="line">    <span class="keyword">if</span> (keys != <span class="keyword">null</span> &amp;&amp; keys.length() &gt; <span class="number">0</span>) &#123;<span class="comment">// 遍历所有的where缓存</span></span><br><span class="line">        String[] wheres = keys.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String where : wheres) &#123;</span><br><span class="line">            where = where.split(<span class="string">&quot;#&quot;</span>)[<span class="number">3</span>];</span><br><span class="line">            List list = MC.getList(o.getClass(), id, where);</span><br><span class="line">            MCSupport mc = (MCSupport) o;</span><br><span class="line">            <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (Iterator iterator = list.iterator(); iterator.hasNext(); index++) &#123;</span><br><span class="line">                MCSupport tmpObj = (MCSupport) iterator.next();</span><br><span class="line">                <span class="keyword">if</span> (tmpObj.getIdentifier() == mc.getIdentifier()) &#123;</span><br><span class="line">                    list.set(index, o);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            MC.updateList(list, tName, id, where);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">synMC4Delete</span><span class="params">(String tName, Object o, String id)</span> </span>&#123;</span><br><span class="line">    String keys = MC.getListKeys(tName, id);</span><br><span class="line">    <span class="keyword">if</span> (keys != <span class="keyword">null</span> &amp;&amp; keys.length() &gt; <span class="number">0</span>) &#123;<span class="comment">// 遍历所有的where缓存</span></span><br><span class="line">        String[] wheres = keys.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String where : wheres) &#123;</span><br><span class="line">            where = where.split(<span class="string">&quot;#&quot;</span>)[<span class="number">3</span>];</span><br><span class="line">            List list = MC.getList(o.getClass(), id, where);</span><br><span class="line">            MCSupport mc = (MCSupport) o;</span><br><span class="line">            <span class="keyword">for</span> (Iterator iterator = list.iterator(); iterator.hasNext();) &#123;</span><br><span class="line">                MCSupport tmpObj = (MCSupport) iterator.next();</span><br><span class="line">                <span class="keyword">if</span> (tmpObj.getIdentifier() == mc.getIdentifier()) &#123;</span><br><span class="line">                    iterator.remove();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            MC.updateList(list, tName, id, where);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// public static &lt;T&gt; void synchronizeDB2MemAsy(final Class&lt;T&gt; t,</span></span><br><span class="line"><span class="comment">// final String id) &#123;</span></span><br><span class="line"><span class="comment">// ExecutorPool.dbThread.execute(new Runnable() &#123;</span></span><br><span class="line"><span class="comment">// @Override</span></span><br><span class="line"><span class="comment">// public void run() &#123;</span></span><br><span class="line"><span class="comment">// String keys = MC.getListKeys(t.getSimpleName(), id);</span></span><br><span class="line"><span class="comment">// if (keys != null &amp;&amp; keys.length() &gt; 0) &#123;// 遍历所有的where缓存</span></span><br><span class="line"><span class="comment">// String[] wheres = keys.split(&quot;,&quot;);</span></span><br><span class="line"><span class="comment">// for (String where : wheres) &#123;</span></span><br><span class="line"><span class="comment">// where = where.split(&quot;#&quot;)[3];</span></span><br><span class="line"><span class="comment">// List&lt;T&gt; list = list(t, where, false);</span></span><br><span class="line"><span class="comment">// MC.updateList(list, t.getSimpleName(), id, where);</span></span><br><span class="line"><span class="comment">// if (showMCHitLog) &#123;</span></span><br><span class="line"><span class="comment">// log.info(&quot;DB 同步 MC 成功 t:&#123;&#125;,where:&#123;&#125;&quot;,</span></span><br><span class="line"><span class="comment">// t.getSimpleName(), where);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// public static &lt;T&gt; void synchronizeDB2MemSyn(final Class&lt;T&gt; t,</span></span><br><span class="line"><span class="comment">// final String id) &#123;</span></span><br><span class="line"><span class="comment">// String keys = MC.getListKeys(t.getSimpleName(), id);</span></span><br><span class="line"><span class="comment">// if (keys != null &amp;&amp; keys.length() &gt; 0) &#123;// 遍历所有的where缓存</span></span><br><span class="line"><span class="comment">// String[] wheres = keys.split(&quot;,&quot;);</span></span><br><span class="line"><span class="comment">// for (String where : wheres) &#123;</span></span><br><span class="line"><span class="comment">// where = where.split(&quot;#&quot;)[3];</span></span><br><span class="line"><span class="comment">// List&lt;T&gt; list = list(t, where, false);</span></span><br><span class="line"><span class="comment">// MC.updateList(list, t.getSimpleName(), id, where);</span></span><br><span class="line"><span class="comment">// if (showMCHitLog) &#123;</span></span><br><span class="line"><span class="comment">// log.info(&quot;DB 同步 MC 成功 t:&#123;&#125;,where:&#123;&#125;&quot;, t.getSimpleName(),</span></span><br><span class="line"><span class="comment">// where);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上是本文对我们这款游戏中的数据管理的介绍，游戏服务器中的各种数据是多种多样的，我们应该根据各种数据的各种性质，合理利用进行存取，以保证不管什么类型的游戏数据，在我们的游戏服务器中都可以安全稳定的运行，数据安全，玩家才会放心！</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上文介绍了我们的SLG手游的服务器架构设计以及网络通信部分，本文介绍数据管理部分，在数据存储方面，我选择了Mysql、Memcache和Redis，利用这三种数据库各自的优势，各自发挥所长，在项目中有着不同的应用。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="SLG" scheme="http://www.hjcenry.com/tags/SLG/"/>
    
  </entry>
  
  <entry>
    <title>SLG手游Java服务器的设计与开发——网络通信</title>
    <link href="http://www.hjcenry.com/2016/08/27/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
    <id>http://www.hjcenry.com/2016/08/27/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</id>
    <published>2016-08-27T11:01:00.000Z</published>
    <updated>2020-09-29T03:25:11.724Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。</code></li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上文分析了我们这款SLG的架构，本章着重讲解我们的网络通信架构，由上文的功能分析我们可以得知，游戏的所有功能基本上属于非及时的通信机制，所以依靠HTTP短连接就能够基本满足游戏的通信需求。</p><a id="more"></a><p>当然，我们先撇开国战部分不说，因为国战部分我们正在优化开发最新版本，之前我们做的版本是想通过异步战斗的机制达到实时战斗效果，通过使用HTTP的请求机制，加上前端画面表现，让玩家感觉到即时战斗的感觉，既能在地图上能看到其他玩家的行进队列，又能进入城池多国混战。可惜的是，让异步战斗来实现实时战斗的效果，会产生很多问题，最终因为机制的问题而商议出必须优化一版再上线。所以目前所有的功能均通过HTTP实现，如果后期国战需要使用TCP长连接可以单独对国战部分使用TCP长连接实现。</p><h2 id="通信框架"><a href="#通信框架" class="headerlink" title="通信框架"></a>通信框架</h2><h3 id="使用Netty"><a href="#使用Netty" class="headerlink" title="使用Netty"></a>使用Netty</h3><p>在开始设计通信机制时，就需要选择合适的通信框架，当然，我们也可以自己动手写底层通信的实现，不过在前人已有成熟框架的情况下，我们大而不必重复造轮子，由于在通信方面，我们并没有太多的个性化需求，因此基本上成熟的通信框架都能满足目前所需。选择框架，无非就是看它们的底层架构是否符合需求、资料是否齐全、API文档是否详细、以及成熟案例有多少。上文提到，可以使用HTTP通信协议的框架中，有Servlet、Spring、Struts、Mina和Netty等常见的通信框架，在这其中我选择了Netty，Servlet、Spring和Struts属于同一系列，他们的底层都是Servlet的实现，在Servlet3.0以前均是BIO通信模式，而Mina和Netty均属于基于Java NIO的通信框架，由于通信机制的不同，基于NIO的通信程序比基于BIO的通信程序能承受更多的并发连接，而在后者的框架选择中，其实并没有太多的谁好与不好，Mina和Netty底层都是Java NIO的封装，并且两者的底层框架也是大致一样（其作者其实就是一个人），选择Netty更多的是因为Netty的有更多的资料可查，遇到问题可能会更容易解决，并且我个人在同时使用过Mina和Netty的情况下，认为Netty的API更友好，使用起来更方便（个人感觉哈）。综合种种原因，我选择了Netty作为我的底层通信框架。</p><h3 id="Netty的特点"><a href="#Netty的特点" class="headerlink" title="Netty的特点"></a>Netty的特点</h3><p>选择了Netty，我们就应该明白Netty的一些特点，Netty具有以下特点：<br>1.异步、非阻塞、基于事件驱动的NIO框架<br>2.支持多种传输层通信协议，包括TCP、UDP等<br>3.开发异步HTTP服务端和客户端应用程序<br>4.提供对多种应用层协议的支持，包括TCP私有协议、HTTP协议、WebSocket协议、文件传输等<br>5.默认提供多种编解码能力，包括Java序列化、Google的ProtoBuf、二进制编解码、Jboss marshalling、文本字符串、base64、简单XML等，这些编解码框架可以被用户直接使用<br>6.提供形式多样的编解码基础类库，可以非常方便的实现私有协议栈编解码框架的二次定制和开发<br>7.经典的ChannelFuture-listener机制，所有的异步IO操作都可以设置listener进行监听和获取操作结果<br>8.基于ChannelPipeline-ChannelHandler的责任链模式，可以方便的自定义业务拦截器用于业务逻辑定制<br>9.安全性：支持SSL、HTTPS<br>10.可靠性：流量整形、读写超时控制机制、缓冲区最大容量限制、资源的优雅释放等<br>11.简洁的API和启动辅助类，简化开发难度，减少代码量</p><h3 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h3><p>Netty是基于NIO的通信框架，为什么要使用NIO而不是用传统的BIO通信机制呢，因为在BIO的线程模型上，存在着致命缺陷，由于线程模型问题，接入用户数与服务端创造线程数是1:1的关系，也就是说每一个用户从接入断开连接，服务端都要创造一个与之对应的线程做处理，一旦并发用户数增多，再好配置的服务器也有可能会有因为线程开销问题造成服务器崩溃宕机的情况。除此之外，BIO的所有IO操作都是同步的，当IO线程处理业务逻辑时，也会出现同步阻塞，其他请求都要进入阻塞状态。<br>相反，NIO的通信机制可以很好地解决BIO的线程开销问题，NIO采用Reactor通信模式，一个Reactor线程聚合一个多路复用Selector，这个Selector可同时注册、监听、轮回上百个Channel请求，这种情况下，一个IO线程就可以处理N个客户端的同时接入，接入用户数与线程数为N:1的关系，并且IO总数有限，不会出现频繁上下文切换，提高了CPU利用率，并且所有的 IO 操作都是异步的，即使业务线程直接进行IO操作，也不会被同步阻塞，系统不再依赖外部的网络环境和外部应用程序的处理性能</p><h3 id="Netty架构"><a href="#Netty架构" class="headerlink" title="Netty架构"></a>Netty架构</h3><p>Netty采用经典的MVC三层架构：<br>1.第一层：Reactor通信调度层，它由一系列辅助类组成，包括Reactor线程NioEventLoop 以及其父类、NioSocketChannel/NioServerSocketChannel 以及其父类、ByteBuffer 以及由其衍生出来的各种 Buffer、Unsafe 以及其衍生出的各种内部子类等。<br>2.第二层：职责链ChannelPipeLine，它负责调度事件在职责链中的传播，支持动态的编排职责链，职责链可以选择性的拦截自己关心的事件，对于其它IO操作和事件忽略，Handler同时支持inbound和outbound事件<br>3.第三层：业务逻辑编排层，业务逻辑编排层通常有两类：一类是纯粹的业务逻辑编排，还有一类是应用层协议插件，用于协议相关的编解码和链路管理，例如CMPP协议插件</p><h2 id="基于Netty实现的HTTP-Server"><a href="#基于Netty实现的HTTP-Server" class="headerlink" title="基于Netty实现的HTTP Server"></a>基于Netty实现的HTTP Server</h2><p>Netty其实更适合使用创建TCP长连接的Server，但是其也提供了HTTP的实现封装，我们也可以很容易的实现基于Netty的HTTP服务器。Netty实现HTTP服务器主要通过HttpResponseEncoder和HttpRequestDecoder来进行HTTP请求的解码以及HTTP响应的编码，通过HttpRequest和HttpResponse接口来实现对请求的解析以及对响应的构造。本节先描述整个处理流程，然后通过源码进行分享。</p><h3 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h3><p>使用Netty实现的HTTP Server的处理流程如下：<br>1.HttpServer接收到客户端的HttpRequest，打开Channel连接<br>2.pipeline中的HttpInHandler调用channelRead方法读取Channel中的ChannelHandlerContext和Object<br>3.channelRead中调用实现类HttpInHandlerImp中的处理，将请求按照Get或Post方式进行解析，并将数据转为ProtoMessage，然后转交给MsgHandler处理<br>4.MsgHandler将其封装为Message类添加到userid哈希的消息处理队列中，并对队列中的消息调用handle进行游戏的逻辑处理<br>5.在逻辑处理中，调用HttpInHandler的writeJSON方法构造并返回HttpResponse响应消息<br>6.HttpOutHandler截取消息并打印log日志<br>7.HttpResponse响应消息返回给客户端并断开Channel连接<br>整个流程的流程图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E7%BD%91%E7%BB%9C%E6%B5%81%E7%A8%8B.png" alt="网络处理流程"></p><h3 id="HttpServer"><a href="#HttpServer" class="headerlink" title="HttpServer"></a>HttpServer</h3><p>HttpServer中负责创造并启动Netty实例，并绑定我们的逻辑Handler到pipeline，使请求进入我们自己的逻辑处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net.http;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.bootstrap.ServerBootstrap;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInitializer;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelPipeline;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.nio.NioEventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.SocketChannel;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.nio.NioServerSocketChannel;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpObjectAggregator;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpRequestDecoder;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpResponseEncoder;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.stream.ChunkedWriteHandler;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.concurrent.DefaultThreadFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(HttpServer.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpServer inst;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Properties p;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String ip;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> port;</span><br><span class="line">    <span class="keyword">private</span> NioEventLoopGroup bossGroup = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> NioEventLoopGroup workGroup = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HttpServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpServer <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (inst == <span class="keyword">null</span>) &#123;</span><br><span class="line">            inst = <span class="keyword">new</span> HttpServer();</span><br><span class="line">            inst.initData();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inst;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            p = readProperties();</span><br><span class="line">            ip = p.getProperty(<span class="string">&quot;ip&quot;</span>);</span><br><span class="line">            port = Integer.parseInt(p.getProperty(<span class="string">&quot;port&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;socket配置文件读取错误&quot;</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bossGroup = <span class="keyword">new</span> NioEventLoopGroup(<span class="number">0</span>, Executors.newCachedThreadPool());<span class="comment">// boss线程组</span></span><br><span class="line">        workGroup = <span class="keyword">new</span> NioEventLoopGroup(<span class="number">0</span>, Executors.newCachedThreadPool());<span class="comment">// work线程组</span></span><br><span class="line">        ServerBootstrap bootstrap = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">        bootstrap.group(bossGroup, workGroup);</span><br><span class="line">        bootstrap.channel(NioServerSocketChannel.class);</span><br><span class="line">        bootstrap.childHandler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                ChannelPipeline pipeline = ch.pipeline();</span><br><span class="line">                <span class="comment">/* http request解码 */</span></span><br><span class="line">                pipeline.addLast(<span class="string">&quot;decoder&quot;</span>, <span class="keyword">new</span> HttpRequestDecoder());</span><br><span class="line">                pipeline.addLast(<span class="string">&quot;aggregator&quot;</span>, <span class="keyword">new</span> HttpObjectAggregator(<span class="number">65536</span>));</span><br><span class="line">                <span class="comment">/* http response 编码 */</span></span><br><span class="line">                pipeline.addLast(<span class="string">&quot;encoder&quot;</span>, <span class="keyword">new</span> HttpResponseEncoder());</span><br><span class="line">                pipeline.addLast(<span class="string">&quot;http-chunked&quot;</span>, <span class="keyword">new</span> ChunkedWriteHandler());</span><br><span class="line">                <span class="comment">/* http response handler */</span></span><br><span class="line">                pipeline.addLast(<span class="string">&quot;outbound&quot;</span>, <span class="keyword">new</span> HttpOutHandler());</span><br><span class="line">                <span class="comment">/* http request handler */</span></span><br><span class="line">                pipeline.addLast(<span class="string">&quot;inbound&quot;</span>, <span class="keyword">new</span> HttpInHandler());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        bootstrap.bind(port);</span><br><span class="line">        log.info(<span class="string">&quot;端口&#123;&#125;已绑定&quot;</span>, port);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bossGroup != <span class="keyword">null</span> &amp;&amp; workGroup != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bossGroup.shutdownGracefully();</span><br><span class="line">            workGroup.shutdownGracefully();</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;端口&#123;&#125;已解绑&quot;</span>, port);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读配置socket文件</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Properties <span class="title">readProperties</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">        InputStream in = HttpServer.class</span><br><span class="line">                .getResourceAsStream(<span class="string">&quot;/net.properties&quot;</span>);</span><br><span class="line">        Reader r = <span class="keyword">new</span> InputStreamReader(in, Charset.forName(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        p.load(r);</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中首先使用NioEventLoopGroup构造boss线程和work线程，然后构造ServerBootstrap，来设置Server的一些属性，包括在pipeline中添加Http的编码解码以及逻辑处理相关类。通过调用该类的start方法即可启动此HTTP服务器，其中端口在配置文件中配置好，启动时从配置文件读取。</p><h3 id="HttpInHandler"><a href="#HttpInHandler" class="headerlink" title="HttpInHandler"></a>HttpInHandler</h3><p>Http请求的处理器，绑定在pipeLine中，负责请求的解析与逻辑处理，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net.http;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerAdapter;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInboundHandlerAdapter;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelPromise;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.SimpleChannelInboundHandler;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.FullHttpRequest;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpResponseStatus;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: HttpServerHandler</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: netty处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 何金成</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2015年12月18日 下午6:27:06</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpInHandler</span> <span class="keyword">extends</span> <span class="title">ChannelHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HttpInHandlerImp handler = <span class="keyword">new</span> HttpInHandlerImp();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        handler.channelRead(ctx, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        handler.exceptionCaught(ctx, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeJSON</span><span class="params">(ChannelHandlerContext ctx,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpResponseStatus status, Object msg)</span> </span>&#123;</span><br><span class="line">        HttpInHandlerImp.writeJSON(ctx, status, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeJSON</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> </span>&#123;</span><br><span class="line">        HttpInHandlerImp.writeJSON(ctx, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的实现方法我都将其分离出来为单独的类来处理，我这样做主要为了我以后能通过JSP热修复Bug（以后会讲到，通过JSP热加载的原理实现线上项目的热修复），分离出来的实现类代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net.http;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBufInputStream;</span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBufOutputStream;</span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.Unpooled;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelFutureListener;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.DefaultFullHttpRequest;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.DefaultFullHttpResponse;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.FullHttpResponse;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpResponseStatus;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpVersion;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.QueryStringDecoder;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.multipart.Attribute;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.multipart.DefaultHttpDataFactory;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.multipart.HttpPostRequestDecoder;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.multipart.InterfaceHttpData;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.CharsetUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Future;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameServer;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.net.MsgHandler;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.net.ProtoMessage;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.net.ResultCode;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.net.rpc.JsonRpcServers;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.Constants;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.encrypt.XXTeaCoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpInHandlerImp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger log = LoggerFactory.getLogger(HttpInHandlerImp.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String DATA = <span class="string">&quot;data&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> CODE_DEBUG = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">public</span> ConcurrentHashMap&lt;String, Future&gt; executeMap = <span class="keyword">new</span> ConcurrentHashMap&lt;String, Future&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx, <span class="keyword">final</span> Object msg)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">/** work线程的内容转交线程池管理类处理，缩短work线程耗时 **/</span></span><br><span class="line">        <span class="keyword">if</span> (!GameServer.shutdown) &#123;<span class="comment">// 服务器开启的情况下</span></span><br><span class="line">            DefaultFullHttpRequest req = (DefaultFullHttpRequest) msg;</span><br><span class="line">            <span class="keyword">if</span> (req.getMethod() == HttpMethod.GET) &#123; <span class="comment">// 处理get请求</span></span><br><span class="line">                getHandle(ctx, req);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (req.getMethod() == HttpMethod.POST) &#123; <span class="comment">// 处理POST请求</span></span><br><span class="line">                postHandle(ctx, req);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">// 服务器已关闭</span></span><br><span class="line">            JSONObject jsonObject = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            jsonObject.put(<span class="string">&quot;errMsg&quot;</span>, <span class="string">&quot;server closed&quot;</span>);</span><br><span class="line">            writeJSON(ctx, jsonObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">final</span> DefaultFullHttpRequest req)</span> </span>&#123;</span><br><span class="line">        HttpPostRequestDecoder decoder = <span class="keyword">new</span> HttpPostRequestDecoder(</span><br><span class="line">                <span class="keyword">new</span> DefaultHttpDataFactory(<span class="keyword">false</span>), req);</span><br><span class="line">        <span class="comment">// 逻辑接口处理</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InterfaceHttpData data = decoder.getBodyHttpData(DATA);</span><br><span class="line">            <span class="keyword">if</span> (data != <span class="keyword">null</span>) &#123;</span><br><span class="line">                String val = ((Attribute) data).getValue();</span><br><span class="line">                val = codeFilter(val);</span><br><span class="line">                log.info(<span class="string">&quot;ip:&#123;&#125;,read :&#123;&#125;&quot;</span>, ctx.channel().remoteAddress(),</span><br><span class="line">                        val);</span><br><span class="line">                ProtoMessage msg = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    msg = JSON.parseObject(val, ProtoMessage.class);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    log.error(<span class="string">&quot;gameData的json格式转换错误&quot;</span>);</span><br><span class="line">                    HttpInHandler.writeJSON(ctx,</span><br><span class="line">                            HttpResponseStatus.NOT_ACCEPTABLE,</span><br><span class="line">                            <span class="string">&quot;not acceptable&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Long userid = msg.getUserid();</span><br><span class="line">                <span class="comment">// 添加到消息处理队列</span></span><br><span class="line">                <span class="comment">// MsgHandler.getInstance().addMsg(userid, msg, ctx);</span></span><br><span class="line">                <span class="comment">// 直接处理消息</span></span><br><span class="line">                <span class="comment">// MsgHandler.getInstance().handle(new Message(msg, ctx));</span></span><br><span class="line">                <span class="comment">// 处理消息队列</span></span><br><span class="line">                MsgHandler.getInstance().handleMsg(userid, msg, ctx);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 异常日志</span></span><br><span class="line">            log.error(<span class="string">&quot;post error msg:&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// Print our stack trace</span></span><br><span class="line">            StringBuffer eBuffer = <span class="keyword">new</span> StringBuffer(e.getMessage() + <span class="string">&quot;,&quot;</span>);</span><br><span class="line">            StackTraceElement[] trace = e.getStackTrace();</span><br><span class="line">            <span class="keyword">for</span> (StackTraceElement traceElement : trace) &#123;</span><br><span class="line">                eBuffer.append(<span class="string">&quot;\r\n &quot;</span> + traceElement);</span><br><span class="line">            &#125;</span><br><span class="line">            HttpInHandler.writeJSON(ctx, ProtoMessage.getErrorResp(</span><br><span class="line">                    ResultCode.SERVER_ERR, eBuffer.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getHandle</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx,</span></span></span><br><span class="line"><span class="function"><span class="params">            DefaultFullHttpRequest req)</span> </span>&#123;</span><br><span class="line">        QueryStringDecoder decoder = <span class="keyword">new</span> QueryStringDecoder(req.getUri());</span><br><span class="line">        Map&lt;String, List&lt;String&gt;&gt; params = decoder.parameters();</span><br><span class="line">        List&lt;String&gt; typeList = params.get(<span class="string">&quot;type&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Constants.MSG_LOG_DEBUG) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;ip:&#123;&#125;,read :&#123;&#125;&quot;</span>, ctx.channel().remoteAddress(),</span><br><span class="line">                    typeList.get(<span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        writeJSON(ctx, HttpResponseStatus.NOT_IMPLEMENTED, <span class="string">&quot;not implement&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: codeFilter</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>: 编解码过滤</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="comment">     *             String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">codeFilter</span><span class="params">(String val)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line">        val = val.contains(<span class="string">&quot;%&quot;</span>) ? URLDecoder.decode(val, <span class="string">&quot;UTF-8&quot;</span>) : val;</span><br><span class="line">        String valTmp = val;</span><br><span class="line">        val = CODE_DEBUG ? XXTeaCoder.decryptBase64StringToString(val,</span><br><span class="line">                XXTeaCoder.key) : val;</span><br><span class="line">        <span class="keyword">if</span> (Constants.MSG_LOG_DEBUG) &#123;</span><br><span class="line">            <span class="keyword">if</span> (val == <span class="keyword">null</span>) &#123;</span><br><span class="line">                val = valTmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeJSON</span><span class="params">(ChannelHandlerContext ctx,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpResponseStatus status, Object msg)</span> </span>&#123;</span><br><span class="line">        String sentMsg = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (msg <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            sentMsg = (String) msg;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sentMsg = JSON.toJSONString(msg);</span><br><span class="line">        &#125;</span><br><span class="line">        sentMsg = CODE_DEBUG ? XXTeaCoder.encryptToBase64String(sentMsg,</span><br><span class="line">                XXTeaCoder.key) : sentMsg;</span><br><span class="line">        writeJSON(ctx, status,</span><br><span class="line">                Unpooled.copiedBuffer(sentMsg, CharsetUtil.UTF_8));</span><br><span class="line">        ctx.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeJSON</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> </span>&#123;</span><br><span class="line">        String sentMsg = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (msg <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            sentMsg = (String) msg;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sentMsg = JSON.toJSONString(msg);</span><br><span class="line">        &#125;</span><br><span class="line">        sentMsg = CODE_DEBUG ? XXTeaCoder.encryptToBase64String(sentMsg,</span><br><span class="line">                XXTeaCoder.key) : sentMsg;</span><br><span class="line">        writeJSON(ctx, HttpResponseStatus.OK,</span><br><span class="line">                Unpooled.copiedBuffer(sentMsg, CharsetUtil.UTF_8));</span><br><span class="line">        ctx.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeJSON</span><span class="params">(ChannelHandlerContext ctx,</span></span></span><br><span class="line"><span class="function"><span class="params">            HttpResponseStatus status, ByteBuf content <span class="comment">/*</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="comment">                                                         * , boolean isKeepAlive</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="comment">                                                         */</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ctx.channel().isWritable()) &#123;</span><br><span class="line">            FullHttpResponse msg = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (content != <span class="keyword">null</span>) &#123;</span><br><span class="line">                msg = <span class="keyword">new</span> DefaultFullHttpResponse(HttpVersion.HTTP_1_1, status,</span><br><span class="line">                        content);</span><br><span class="line">                msg.headers().set(HttpHeaders.Names.CONTENT_TYPE,</span><br><span class="line">                        <span class="string">&quot;application/json; charset=utf-8&quot;</span>);</span><br><span class="line">                msg.headers().set(<span class="string">&quot;userid&quot;</span>, <span class="number">101</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                msg = <span class="keyword">new</span> DefaultFullHttpResponse(HttpVersion.HTTP_1_1, status);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (msg.content() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                msg.headers().set(HttpHeaders.Names.CONTENT_LENGTH,</span><br><span class="line">                        msg.content().readableBytes());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// not keep-alive</span></span><br><span class="line">            ctx.write(msg).addListener(ChannelFutureListener.CLOSE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;netty exception:&quot;</span>, cause);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码实现了使用Netty中封装的Http请求的解析类对消息进行Get或Post解析，并使用了Http相应的构造类对返回消息进行Http消息格式的构造。</p><h3 id="MsgHandler"><a href="#MsgHandler" class="headerlink" title="MsgHandler"></a>MsgHandler</h3><p>以上代码包含了Netty中的Get请求和Post请求的解析处理，请求消息以及响应消息的XXTea加密解密等。其中，服务器接受到请求后，会将请求交给一个消息处理类进行具体的消息处理，消息处理器MsgHandler的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.MessageSizeEstimator.Handle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.LinkedBlockingQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.GameServer;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.core.Router;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.manager.log.LogMgr;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.net.http.HttpInHandler;</span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.task.ExecutorPool;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: MsgHandler</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 消息处理器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 何金成</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2016年8月22日 下午12:04:23</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsgHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(MsgHandler.class);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MsgHandler handler;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MsgHandler <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> handler == <span class="keyword">null</span> ? <span class="keyword">new</span> MsgHandler() : handler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">MsgHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Fields</span> msgMap : 并发消息处理map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ConcurrentMap&lt;Long, BlockingQueue&lt;Message&gt;&gt; msgMap = <span class="keyword">new</span> ConcurrentHashMap&lt;Long, BlockingQueue&lt;Message&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMsg</span><span class="params">(Long userid, ProtoMessage msg,</span></span></span><br><span class="line"><span class="function"><span class="params">            ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// add message</span></span><br><span class="line">        Message message = <span class="keyword">new</span> Message();</span><br><span class="line">        message.msg = msg;</span><br><span class="line">        message.ctx = ctx;</span><br><span class="line">        BlockingQueue&lt;Message&gt; queue = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (msgMap.containsKey(userid)) &#123;</span><br><span class="line">            queue = msgMap.get(userid);</span><br><span class="line">            queue.put(message);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            queue = <span class="keyword">new</span> LinkedBlockingQueue&lt;Message&gt;();</span><br><span class="line">            queue.put(message);</span><br><span class="line">            msgMap.put(userid, queue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// log</span></span><br><span class="line">        LogMgr.getInstance().concurrentLog(msgMap);</span><br><span class="line">        <span class="comment">// handle message</span></span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            message = queue.take();</span><br><span class="line">            <span class="keyword">if</span> (queue.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                msgMap.remove(userid);</span><br><span class="line">            &#125;</span><br><span class="line">            handle(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: addMsg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>: 添加消息到处理队列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ctx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment">     *             void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMsg</span><span class="params">(Long userid, ProtoMessage msg, ChannelHandlerContext ctx)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Message message = <span class="keyword">new</span> Message();</span><br><span class="line">        message.msg = msg;</span><br><span class="line">        message.ctx = ctx;</span><br><span class="line">        <span class="keyword">if</span> (msgMap.containsKey(userid)) &#123;</span><br><span class="line">            BlockingQueue&lt;Message&gt; queue = msgMap.get(userid);</span><br><span class="line">            queue.put(message);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            BlockingQueue&lt;Message&gt; queue = <span class="keyword">new</span> LinkedBlockingQueue&lt;Message&gt;();</span><br><span class="line">            queue.put(message);</span><br><span class="line">            msgMap.put(userid, queue);</span><br><span class="line">        &#125;</span><br><span class="line">        LogMgr.getInstance().concurrentLog(msgMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Title</span>: run</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>: 处理消息队列 void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ExecutorPool.msgHandleThread.execute(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                logger.info(<span class="string">&quot;消息处理线程开启&quot;</span>);</span><br><span class="line">                <span class="keyword">while</span> (!GameServer.shutdown) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (Iterator&lt;Long&gt; iterator = msgMap.keySet().iterator(); iterator</span><br><span class="line">                            .hasNext();) &#123;</span><br><span class="line">                        Long userid = iterator.next();</span><br><span class="line">                        BlockingQueue&lt;Message&gt; queue = msgMap.get(userid);</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Message msg = queue.take();</span><br><span class="line">                            <span class="keyword">if</span> (queue.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                                iterator.remove();</span><br><span class="line">                            &#125;</span><br><span class="line">                            handle(msg);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                            logger.error(<span class="string">&quot;msg handle err:&#123;&#125;&quot;</span>, e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(<span class="keyword">final</span> Message message)</span> </span>&#123;</span><br><span class="line">        ExecutorPool.channelHandleThread.execute(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Short typeid = message.msg.getTypeid();</span><br><span class="line">                <span class="keyword">if</span> (typeid == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    logger.error(<span class="string">&quot;没有typeid&quot;</span>);</span><br><span class="line">                    HttpInHandler.writeJSON(message.ctx,</span><br><span class="line">                            ProtoMessage.getErrorResp(<span class="string">&quot;没有typeid&quot;</span>));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                JSONObject msgData = message.msg.getData();</span><br><span class="line">                Router.getInstance().route(typeid, msgData,</span><br><span class="line">                        message.msg.getUserid(), message.ctx);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码包含handleMsg、handle和addMsg方法，msgMap中包含每个用户的userid哈希对应的消息处理队列，原本我的设想是在服务器启动时，调用MsgHandler的run方法启动消息处理，无限循环的遍历msgMap，来处理所有玩家的消息处理队列，请求接入时，直接添加消息到msgMap的相应玩家的消息队列，然后由这个run方法中的线程来处理所有的消息，后来考虑到效率问题，改为直接在HttpInHandler中调用handleMsg方法，直接处理消息请求。每个玩家分配一个消息队列来进行处理主要是为了考虑到单个玩家的并发请求的情况。hash使用ConcurrentMap主要是考虑到这个Map的并发使用情景，使用ConcurrentMap的桶锁机制可以让它在并发情境中有更高的处理效率。</p><h3 id="Message"><a href="#Message" class="headerlink" title="Message"></a>Message</h3><p>MsgHandle中使用的Message类是对消息的封装包括ProtoMessage和ChannelHandlerContext，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BlockingQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Message</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> ProtoMessage msg;</span><br><span class="line">    <span class="keyword">public</span> ChannelHandlerContext ctx;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Message</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Message</span><span class="params">(ProtoMessage msg, ChannelHandlerContext ctx)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">        <span class="keyword">this</span>.ctx = ctx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ProtoMessage"><a href="#ProtoMessage" class="headerlink" title="ProtoMessage"></a>ProtoMessage</h3><p>ProtoMessage是通信中对消息格式的封装，消息格式定义为：”{typeid:1,userid:1,data:{}}”，typeid代表游戏中接口的协议号，userid代表玩家id，data代表具体传输的数据，其代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProtoMessage</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Fields</span> serialVersionUID : TODO</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">3460913241121151489L</span>;</span><br><span class="line">    <span class="keyword">private</span> Short typeid;</span><br><span class="line">    <span class="keyword">private</span> Long userid;</span><br><span class="line">    <span class="keyword">public</span> JSONObject data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProtoMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; ProtoMessage(Short typeid, T data) &#123;</span><br><span class="line">        <span class="keyword">this</span>.typeid = typeid;</span><br><span class="line">        <span class="keyword">this</span>.setData(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; ProtoMessage(T data) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getResp</span><span class="params">(String msg, <span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        JSONObject ret = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        ret.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">        <span class="keyword">if</span> (msg != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ret.put(<span class="string">&quot;err&quot;</span>, msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ProtoMessage(ret);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getSuccessResp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getResp(<span class="keyword">null</span>, ResultCode.SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getEmptyResp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ProtoMessage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getErrorResp</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getResp(msg, ResultCode.COMMON_ERR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getErrorResp</span><span class="params">(<span class="keyword">short</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getResp(<span class="keyword">null</span>, ResultCode.COMMON_ERR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getErrorResp</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getResp(<span class="keyword">null</span>, code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ProtoMessage <span class="title">getErrorResp</span><span class="params">(<span class="keyword">int</span> code, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getResp(msg, code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(JSONObject data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getData</span><span class="params">(Class&lt;T&gt; t)</span> </span>&#123;<span class="comment">// 转换为对象传递</span></span><br><span class="line">        <span class="keyword">return</span> JSON.parseObject(JSON.toJSONString(data), t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">setData</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = JSON.parseObject(JSON.toJSONString(t), JSONObject.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Short <span class="title">getTypeid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTypeid</span><span class="params">(Short typeid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.typeid = typeid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUserid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserid</span><span class="params">(Long userid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userid = userid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HttpOutHandler"><a href="#HttpOutHandler" class="headerlink" title="HttpOutHandler"></a>HttpOutHandler</h3><p>绑定在pipeLine中，负责处理相应消息，其实响应消息的处理在HttpInHandler的writeJSON方法中已经完成，使用DefaultFullHttpResponse对响应消息进行Http格式构造，然后调用ChannelHandlerContext的write方法直接write到消息管道中，并且在完成消息传输后自动关闭管道。而HttpOutHandler则只是截取响应消息并进行log打印输出一下，然后继续调用super发送出去，其接口及实现类代码如下：<br>HttpOutHandler:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net.http;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerAdapter;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelPromise;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpOutHandler</span> <span class="keyword">extends</span> <span class="title">ChannelHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HttpOutHandlerImp handler = <span class="keyword">new</span> HttpOutHandlerImp();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(ChannelHandlerContext ctx, Object msg,</span></span></span><br><span class="line"><span class="function"><span class="params">            ChannelPromise promise)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.write(ctx, msg, promise);</span><br><span class="line">        handler.write(ctx, msg, promise);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HttpOutHandlerImp:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kidbear._36.net.http;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kidbear._36.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBufUtil;</span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.Unpooled;</span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.UnpooledUnsafeDirectByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelPromise;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.DefaultFullHttpResponse;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.http.HttpHeaders;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpOutHandlerImp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Logger logger = LoggerFactory.getLogger(HttpOutHandlerImp.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(ChannelHandlerContext ctx, Object msg,</span></span></span><br><span class="line"><span class="function"><span class="params">            ChannelPromise promise)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Constants.MSG_LOG_DEBUG) &#123;</span><br><span class="line">            DefaultFullHttpResponse resp = (DefaultFullHttpResponse) msg;</span><br><span class="line">            logger.info(<span class="string">&quot;ip:&#123;&#125;,write:&#123;&#125;&quot;</span>, ctx.channel().remoteAddress(), resp</span><br><span class="line">                    .content().toString(Charset.forName(<span class="string">&quot;UTF-8&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本章内容介绍我们的这款游戏的网络通信的处理方式，总体来说，对目前的策划需求，以及目前的用户量来说，这个通信框架已经能满足，但客观的说，这个网络架构还是存在很多问题的，比如通信使用JSON字符串，使得通信数据的大小没有得到很好地处理，如果使用ProtoBuffer这样高效的二进制数据传输会有更小的数据传输量。另外，通信完全采用Http通信，使得游戏中一些需要实时展示的效果只能通过请求——响应式来获取最新数据，比如游戏中的邮件、战报等功能，只能通过客户端的不断请求来获取到最新消息，实时效果通过非实时通信来实现，会有很多冗余的请求，浪费带宽资源，如果以后玩家数量太多，对网络通信这块，我们肯定还会再进行优化。<br>下章内容，我们会对游戏中的数据缓存与存储进行介绍。</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上文分析了我们这款SLG的架构，本章着重讲解我们的网络通信架构，由上文的功能分析我们可以得知，游戏的所有功能基本上属于非及时的通信机制，所以依靠HTTP短连接就能够基本满足游戏的通信需求。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="SLG" scheme="http://www.hjcenry.com/tags/SLG/"/>
    
  </entry>
  
  <entry>
    <title>SLG手游Java服务器的设计与开发——架构分析</title>
    <link href="http://www.hjcenry.com/2016/08/14/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E6%9E%B6%E6%9E%84%E5%88%86%E6%9E%90/"/>
    <id>http://www.hjcenry.com/2016/08/14/SLG%E6%89%8B%E6%B8%B8Java%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94%E6%9E%B6%E6%9E%84%E5%88%86%E6%9E%90/</id>
    <published>2016-08-13T16:07:00.000Z</published>
    <updated>2020-09-29T03:25:11.723Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。</code></li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>从去年12月份开始，到现在，我全程参与了公司一款SLG手游的研发，负责整个游戏的服务端部分。这也是我第一次单独负责一款网游的服务端开发，整个研发过程，也让我的各方面技术提升了不少。目前这款游戏正在紧张的测试中，预计下周左右会在XY渠道进行一轮封测，以测试玩家对我们的游戏的反馈数据。<a id="more"></a></p><p>这款游戏集合市面上大多数SLG的特点，包含了卡牌、装备、科技、建筑的等养成内容，同时也在战斗系统做了创新，通过卡牌搭配，装备搭配，以及阵型搭配，再加上各方面的养成数据，能让玩家在战斗中产生不同的效果。同时，他最大的特点也是最核心的部分，就是国战，不过很遗憾的是，第一版上线不会有国战内容，因为在测试过程中，我们发现整个国战的游戏机制还存在很多漏洞，我们将会持续优化，优化出一版完整的国战内容，再呈现给玩家。</p><p>我经历了整个开发过程，在游戏服务器开发方面有了不少新的认识，我想通过写文章的方式把这些设计思路、技术难点、以及踩过的坑，都分享给大家，所以我们准备通过系列文章的方式一点一点把服务器的框架内容分享出来，本章首先从游戏服务器的架构分析开始。</p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>在开始设计整个游戏服务器的架构之前，我首先需要对游戏的功能有所掌握。上文已经简单提到了部分核心功能，比如卡牌、装备、阵型等，但实际上游戏的内容并不止这些。这款游戏属于SLG手游，即策略类的游戏，游戏以三国为题材，通过获得三国名将卡牌，搭配各种装备，设置战斗阵型，达到在战斗中的不同表现效果，战斗模式类似于《小小军团》的战斗，但是小小军团主要以兵种为核心，而我们的战斗以武将为核心，不同武将有不同的技能，不同的战斗属性，合理搭配，才能发挥最大的效果。围绕着这些游戏核心，设计了以下不同的功能模块。</p><h3 id="账号系统"><a href="#账号系统" class="headerlink" title="账号系统"></a>账号系统</h3><p>作为一款网游，最基础的，就是账号系统，一款网游一定会有账号系统，这是保证玩家能从不同终端都能进入自己的游戏数据的凭证。不过最近在手游市场，一般情况游戏都不会有自己的账号系统，而是接入第三方的账号系统，比如腾讯游戏一般会让玩家选择QQ登录或微信登录，网易一般会让玩家选择网易账号登录，还有很多渠道如XY，海马玩，快用等，都有自己的账号系统，账号系统的功能，就是保证玩家的唯一标识。</p><h3 id="君主模块"><a href="#君主模块" class="headerlink" title="君主模块"></a>君主模块</h3><p>进入游戏之后，玩家就需要创建一个君主，并设置君主的名字，性别，头像和国家。SLG游戏中，资源也是一个很重要的内容，所有的资源都是跟玩家直接相关的，所以资源内容也是跟君主相关，我们就可以把资源内容绑定在君主模块中，玩家在游戏中，是扮演这个君主的角色，所有游戏中的资源消耗以及资源产出，都是跟君主息息相关。在竞技场以及国战等pvp玩法中，君主也是玩家在游戏的唯一身份显示。</p><h3 id="卡牌模块"><a href="#卡牌模块" class="headerlink" title="卡牌模块"></a>卡牌模块</h3><p>这款游戏在SLG的基础之上加上了卡牌养成玩法，玩家需要通过收集卡牌来进行游戏的操作，卡牌包含了吕布、关羽、张飞、华雄等三国名将。卡牌分了白绿蓝紫橙红的品质分段，不同品质的卡牌有着不同的属性数值。卡牌可以通过酒馆抽卡获得，抽卡分为单次抽卡和十连抽，十连抽会必中一张橙色卡片。卡牌具有星级属性，多张相同的卡牌还可以进行升星操作，升星具有一定的失败几率，品质越高，失败率越高。如果有多余的卡牌，还可以进行分解操作，分解卡牌可以获得将魂和银两，而将魂还可以继续用于抽卡。在战斗中，上阵的卡牌将会增长经验，而卡牌的等级，就与它的经验相关。总结起来，卡牌具有等级和星级两个养成属性，其它还有统勇智以及攻击防御，技能伤害，普攻伤害等基础属性。整个卡牌模块还有很多养成点的。</p><h3 id="装备模块"><a href="#装备模块" class="headerlink" title="装备模块"></a>装备模块</h3><p>有了战斗的卡牌，那就必须给卡牌配备装备模块了，所有的卡牌具有6个装备位，每个装备位对应一种装备，装备也分为了白绿蓝紫橙红的几个品质阶段，不同品质的卡牌也能给卡牌加上不同的属性效果，卡牌同样具有等级和星级两个养成属性以及其他的基础属性，装备可以进行强化以强化等级，以及升星来提升装备的星级，升星消耗任意的装备作为材料。卡牌模块配合装备模块，可以有更多的养成玩法的自由发挥空间。</p><h3 id="道具模块"><a href="#道具模块" class="headerlink" title="道具模块"></a>道具模块</h3><p>游戏中也有常见的背包，背包中存放着各种道具，道具种类繁多，包括粮草、银两、经验丹等资源道具，也可以在背包中查看拥有的卡牌和装备。背包中可以直接使用道具，使用完道具就能增加相应的资源。</p><h3 id="建筑模块"><a href="#建筑模块" class="headerlink" title="建筑模块"></a>建筑模块</h3><p>玩家刚进入游戏会看到很多建筑，这些建筑都具有不同的功能，升级这些建筑会增强建筑的属性效果，建筑包括皇城、军机处、校场、仓库、招商局、兵营、酒馆、竞技场、铁匠铺、农田（6个）、民居（6个），各个建筑具有不同的功能，皇城等级限制所有建筑的最高等级，军机处可以解锁升级科技，军机处等级限制科技等级，仓库等级限制最高资源上限，招商局等级限制民居产出，兵营等级限制兵力上限，铁匠铺等级限制装备强化等级，农田和民居的等级限制资源的产出，竞技场和酒馆没有等级，竞技场是功能入口，酒馆包含抽卡，卡牌升星和卡牌分解的功能。</p><h3 id="科技模块"><a href="#科技模块" class="headerlink" title="科技模块"></a>科技模块</h3><p>军机处的科技收到军机处建筑的等级限制，科技一共有30个，随着军机处的等级分别开放，不同的科技能增加不同的效果，其实有部分科技是属于阵型，每解锁一种阵型，就能在战斗前设置战斗的阵型，阵型中的位置也会随着君主的等级而开放。</p><h3 id="关卡模块"><a href="#关卡模块" class="headerlink" title="关卡模块"></a>关卡模块</h3><p>游戏核心内容是战斗，战斗包含了普通关卡和精英关卡、以及竞技场、国战和日常副本。其中，普通关卡、精英关卡和日常副本在功能上来说是差不多的，只是战斗中的数值配置不同，精英关卡和日常副本加了挑战次数限制，日常副本还加了难度解锁限制。</p><h3 id="竞技场"><a href="#竞技场" class="headerlink" title="竞技场"></a>竞技场</h3><p>玩家的君主等级升级到16级时会开启竞技场，竞技场是玩家第一次感觉自己玩的不是单机的内容，竞技场的规则是打离线数据，服务器开服之后会初始化2000名机器人，玩家选择挑战前面排名的玩家，如果挑战成功，则互换位次，如果挑战失败，则位次不变，同时成功失败均会损失挑战次数，挑战次数次日刷新。</p><h3 id="活动模块"><a href="#活动模块" class="headerlink" title="活动模块"></a>活动模块</h3><p>国产游戏最少不了的还是活动模块了，做游戏除了卖情怀，就是卖活动，活动是一款游戏付费率最高的内容。这款游戏中包含的活动不多，只有每日签到、会员、首冲、以及豪华签到。每日签到是每9天一个轮回，每天签到送不同的奖励，其他几种活动均是需要充值人民币之后再领取到相应的奖励。</p><h3 id="国战模块"><a href="#国战模块" class="headerlink" title="国战模块"></a>国战模块</h3><p>国战分为两个模块，国战PVE和人国战PVP，玩家30级开启国战之后会进入一个大地图，地图上有76座城池，玩家首先需要进入国战PVE模块，把所有的城池都攻打下来才会开启国战的PVP模块，不过很遗憾的是，即将上线的版本的国战PVP模块并没有开放，打完PVE之后就会弹出提示PVP暂未开放。虽然没有开放，但实际上我们也做了一版国战，不过在测试中发现其机制有问题，便决定优化之后再上线这个模块。国战PVE同关卡部分大同小异，只不过由闯关改为了攻打城池。</p><h3 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h3><p>现在的网游大部分都会有热更新的功能，所谓热更新，就是指用户在不从应用商店更新游戏版本的情况下，直接进入游戏，在游戏中更新游戏版本。热更新的原理就是在服务端存储一个游戏版本，客户端每次进入游戏先读取服务端的版本信息，如果有最新版本，就直接从服务端进行下载，下载完在本地解压更新本地资源，然后再进入游戏，这样玩家就能看到最新版本的游戏资源。</p><p>以上是部分功能内容，其他还有很多边缘的系统功能没有介绍，通过这部分内容我们就可以开始对游戏的服务器框架进行分析设计了。</p><h2 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h2><p>通过功能设计，可以发现，除了国战模块，游戏整体对实时性要求都不高，与前端商议之后，决定先使用HTTP短连接，国战部分再做商议（但其实后来开发国战模块也是通过短连接实现的，因为其机制就是一个异步的机制），网络通信的数据传输也暂时采用最简单的JSON字符串。不过目前这个机制确实产生了很多问题，首先是HTTP协议，在其他模块没多大问题，但在国战模块的时候要求实时性较高，应该采用实时性更强的TCP长连接比较合适。另外就是数据传输的问题，直接采用JSON字符串确实也没问题，但是传输字符串会让传输信息量变大，这样在弱网情况下会使得游戏的体验很不好，如果采用二进制进行传输，就会好很多。这次的这方面问题没有考虑周全，下一次我还是希望采用TCP长连接加Google Protobuffer这样的二进制传输协议进行数据交互。</p><h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><p>游戏数据分为两部分：游戏数据和玩家数据，游戏数据指的是游戏中的静态数据，如果签到奖励，战斗掉落，抽卡概率等内容，这部分内容均由策划配置好静态表，服务器启动时直接读取静态表，将表中内容加载到服务器内存，使用时直接从内存读取，而玩家数据指是随着玩家的操作而变化的数据，这部分数据我又分为了冷数据和热数据，热数据即游戏中读写频繁的数据，如免费抽卡次数、君主体力恢复、国战城池状态等，这部分数据的特点就是读写都很频繁，并且数据结构各不相同，每时每刻这些数据都有可能产生变化，产生读写操作，这部分数据，数据结构各不相同，可以采用nosql数据库，而Redis不仅是nosql数据库，还是内存数据库，非常适合这部分数据的存储。冷数据，则指的是交互相对不是很频繁的数据，如君主等级，卡牌等级，卡牌星级，装备等级，装备星级等，这部分数据的特点就是读写不是很频繁，需要玩家做了一定操作才会发生变化，并且数据具有结构化的特点，这些数据可以抽象出关系型数据表，所以我采用了Mysql进行了这部分数据的存储，为了考虑数据库性能，我采用了Memcache进行Mysql结果集的缓存。后来我认为，其实游戏数据的结构应该是采用Mongo更符合需求，它多变的数据结构满足游戏中的各种数据类型，但由于确实Mongo的实际开发经验和维护经验，也没敢轻易尝试。</p><h2 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h2><p>作为后端服务器，能否对前端请求快速做出响应，是判断一个服务器性能是否良好的重要指标，对于客户端来说，服务端就是一个url地址或者一个套接字，但是对于整个服务端架构来说，暴露给客户端的或许只是其中的一个连接处理服务器。良好的服务端架构是整个服务端开发成功了一半。我个人经验并不是很丰富，所以我所设计的架构也并不是很好的架构，大多数都是我参考了网上大量的关于服务端架构的文章之后的设计，在参考别人文章的过程中，自己也有了很多感悟。<br>根据游戏的需求，可将服务器大致分为登录服务器、逻辑服务器、文件服务器、支付服务器、国战服务器和聊天服务器。在第一轮进行封测时候只有一台服务器，所以目前所有的服务器设计均部署在同一台服务器上，提前设计好架构以便在以后更多玩家进来之后进行服务器分离，以承受更多的负载。<br>总体的结构设计图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E6%9E%B6%E6%9E%84%E5%85%B3%E7%B3%BB%E5%9B%BE.png" alt="服务器架构图"></p><h3 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h3><p>负责接入客户端的登录，选服的功能，多台登录服务器可通过Nginx配置负载均衡以承载更多玩家的连接。玩家登录选服之后，登录服务器会返回逻辑服务器的地址，此时客户端与登录服务器便没有任何关系，只需要拿着地址去连接相应的逻辑服务器，通过引导玩家去到不同的游戏服就实现了玩家流量的分流。</p><h3 id="逻辑服务器"><a href="#逻辑服务器" class="headerlink" title="逻辑服务器"></a>逻辑服务器</h3><p>这是游戏中最重要的用于处理玩家游戏逻辑的服务器，玩家的所有逻辑操作都将基于此服务器，如果要用到其他的服务，则采用Rpc的通信方式调用其他服务器的进程，逻辑服务器与其他服务器的通信采用Motan Rpc框架，逻辑服务器作为Motan的调用方，其他服务器均作为Motan的服务方。</p><h3 id="文件服务器"><a href="#文件服务器" class="headerlink" title="文件服务器"></a>文件服务器</h3><p>主要用于游戏中的热更新，进入游戏前，客户端将进行版本检查，如果发现有最新版本的内容，会提供文件服务器的最新版本下载地址，客户端请求文件服务器进行更新版本文件下载。</p><h3 id="支付服务器"><a href="#支付服务器" class="headerlink" title="支付服务器"></a>支付服务器</h3><p>游戏中的充值付费均由支付服务器完成，在逻辑服务器调用支付操作之后，逻辑服务器会通过Motan Rpc调用支付服务器发起支付操作，之后支付服务器会开始调用相应的支付操作，目前游戏的支付一般是众多平台的联运，会接入第三方的支付SDK，各联运商的支付接口规范各式各样，开发商必须要遵循个平台的规范。</p><h3 id="国战服务器"><a href="#国战服务器" class="headerlink" title="国战服务器"></a>国战服务器</h3><p>国战服务器负责处理游戏中的核心玩法——国战玩法，由于国战的同时在线人数可能较多，所以我把此部分单独分为一个服务器，来处理国战部分的内容，玩家通过逻辑服进入国战服务器之后，所有的接入将会转为国战服务器，由国战服务器来处理国战相关的内容，这样又能把一部分玩家流量分出来，承担更多的负载。</p><h3 id="聊天服务器"><a href="#聊天服务器" class="headerlink" title="聊天服务器"></a>聊天服务器</h3><p>游戏暂无聊天功能，但如果以后加入聊天功能，会将此功能单独分出来作为聊天服务器，处理游戏中的聊天信息。</p><h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><p>以上对服务器的部署架构进行了设计，以上设计按照功能划分，把游戏服务器分为了多个模块，以逻辑服为中心，其他服为服务提供者的方式进行的服务器划分。各个模块在承受不住玩家压力时都可以再纵向做服务器的集群扩展，个人感觉这种设计还是比较合理的。由上可见，逻辑服务器是游戏服务器整个架构的核心。</p><p>架构设计之后就要开始对服务器中的技术进行选型，首先开发语言是定位了Java，那么从网络层来说，常见的就有Servlet、Spring、Struts、Netty、和Mina，Servlet、Spring和Struts其实可以归为一类，因为Spring和Struts实际上就是对Servlet的一层封装，在Java Web开发来说，应该说已经是很成熟的技术了，他们其实已经对底层的链路做了良好的封装，仅支持HTTP协议，用户使用他们只需要关注核心的业务逻辑即可，但在Servlet3.0以前，Servlet的IO都是同步阻塞的IO处理（BIO），从3.0开始，才将Servlet API和NIO结合在了一起，在游戏中，玩家客户端与游戏服务端的请求处理操作是非常频繁的，从IO方式来看，显然异步的NIO机制要比同步的BIO快很多，基于NIO能构建出IO处理速度更快的服务端，而Mina和Netty都是基于NIO的网络框架。最终，在Servlet3和Netty，以及Mina中，我选择了Netty作为我的网络层框架，原因是Netty有更多的成熟案例，API开发更加简易，并且有更多的社区和资料。<br>从数据层来说，前文已经提到了，我将使用Mysql来存储玩家冷数据，用Redis存储玩家热数据，使用Mysql时结合Memcache缓存查询结果集，增加数据库的读性能。使用Redis直接使用Redis官方的Jedis API即可，Jedis不仅能直接连接Redis，也能用Sentinel进行Redis的主从集群。Mysql我使用了Hibernate做数据库ORM框架，原因是游戏中不会有太多的复杂查询，最多会有一个类似于”where userid=1”这样的查询条件，没有太复杂的SQL语句，Hibernate对JDBC做了良好的封装，如果没有很多复杂的SQL语句，则可以直接使用Hibernate即可。虽然Hibernate的性能不如MyBatis或JDBC，但有了Hibernate+Memcache的方案，相信能弥补一些性能上的不足。<br>还有其他一些技术就不再做过多的介绍，总体的架构流程如下：<br>1.游戏客户端为Cocos2d，与服务器交互采用Http通信，数据传输采用Json格式字符串<br>2.服务器端的网络层使用基于Netty实现的Http服务器<br>3.通过Netty接入客户端请求，根据请求数据中的协议号，调用服务器中相对应的逻辑模块<br>4.逻辑模块处理消息，若要处理游戏数据则调用Jedis或Hibernate处理，若触发某事件，则调用事件处理器<br>5.通过Netty的ChannelHandlerContext返回处理结果<br>6.客户端与服务器交互的数据通过XXTea+Base64进行加密处理<br>系统架构图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="系统架构图"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，本文对游戏的架构分析的内容就结束了，我参加工作也不久，个人经验很欠缺，文中描述的技术若有误导的部分，还请帮忙指出来，不要继续误导其他人，再次感谢大家。本系列文章是我本人参与一款SLG手游服务端开发的一些个人见解，我只是想把我学到的，我知道的东西分享给大家。下章开始，我将从各个部分，以源代码为基础进行详细介绍，下章先讲讲Netty在HTTP游戏服务器中的应用。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>从产品立项到开发，到测试，我经历了整个开发的过程，整个过程除了让我在个人技术上有了不少提升、对游戏服务器有了新的认识之外，也让我对整个游戏行业有了很多的看法。在产品的研发过程中，我们团队见证了COK的火爆，CR的兴起，ChinaJoy中也看到了中国有很多优秀的手游作品，同时我们也看到了国家在7月1日开始对游戏行业立的新规，以及苹果对中国政策的妥协。我们目前的状态，可以说是挑战与机遇并存，小型游戏CP团队，不是生，就是死。在这大半年开发中，我们的产品也是在不断调整方向，以适应残酷的游戏市场，国家出了新规之后，我们也是第一时间就去申请了文网文以及游戏版号，足以见得，我们团队的每个人，都想要在这场无声的战争中活下来。眼看产品就要上线，我们也对自己这款产品做了上线后的数据目标以及盈利目标，不管怎么样，我认为这是我们辛勤付出的东西，不管成功与否，我们都有了宝贵的经验，也算对得起努力的付出了。</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;文章版权归腾讯GAD所有，禁止匿名转载；禁止商业使用；禁止个人使用。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;从去年12月份开始，到现在，我全程参与了公司一款SLG手游的研发，负责整个游戏的服务端部分。这也是我第一次单独负责一款网游的服务端开发，整个研发过程，也让我的各方面技术提升了不少。目前这款游戏正在紧张的测试中，预计下周左右会在XY渠道进行一轮封测，以测试玩家对我们的游戏的反馈数据。</summary>
    
    
    
    <category term="Java" scheme="http://www.hjcenry.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.hjcenry.com/tags/Java/"/>
    
    <category term="游戏服务器" scheme="http://www.hjcenry.com/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="SLG" scheme="http://www.hjcenry.com/tags/SLG/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-JS实现的打飞机</title>
    <link href="http://www.hjcenry.com/2016/07/10/Cocos2d-JS%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%89%93%E9%A3%9E%E6%9C%BA/"/>
    <id>http://www.hjcenry.com/2016/07/10/Cocos2d-JS%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%89%93%E9%A3%9E%E6%9C%BA/</id>
    <published>2016-07-10T10:17:00.000Z</published>
    <updated>2020-09-29T03:25:11.718Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天我们来讲一个最最最常见的一个小游戏——打飞机！是的，打飞机！还记得小时候在玩儿的雷电，应该是打飞机最早的样子了吧。直到现在，也有微信打飞机，全民飞机大战，全民打飞机等游戏的出现，这些游戏基本都是在我们小时候玩儿的打飞机的原型上增加特效音效以及更多新的玩儿法，在这基础上进行的创新。<a id="more"></a>其实作为开发者来说，仔细看这款游戏，也并不是什么高大上的游戏，其他很多元素、逻辑，都是我们常见的，比如滚动背景，定时产生敌人等。真正开发一款打飞机游戏，其实只要一天就够了，但这个游戏的经典玩法却是很难超越的，在这里，我不得不向这款游戏的原创致敬。</p><h3 id="游戏分析"><a href="#游戏分析" class="headerlink" title="游戏分析"></a>游戏分析</h3><p>游戏中的元素基本可以确定，有玩家，三种敌机，两种道具，子弹和滚动的背景。而游戏的场景，也就是开始场景，游戏场景，帮助场景（这个都是可有可无的），暂停场景和结束场景。游戏中的逻辑其实也很简单，无非就是灵活运用定时器，定时产生敌人，定时产生子弹，定时产生道具，再然后就是玩家与道具，玩家与敌人，子弹与敌人的碰撞检测。我们可以把以上提到的元素全部抽象成类，每个类封装自己的实现接口，在游戏场景中调用相应类的对应的方法即可。</p><h3 id="游戏实现"><a href="#游戏实现" class="headerlink" title="游戏实现"></a>游戏实现</h3><h4 id="全局类"><a href="#全局类" class="headerlink" title="全局类"></a>全局类</h4><p>游戏中所有用到的常量都可以放在一个全局类中，在实际开发中可根据需求动态修改，也方便管理维护。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Global = &#123;</span><br><span class="line">    <span class="comment">// 子弹移动速度</span></span><br><span class="line">    bulletSpeed:<span class="number">10</span>,</span><br><span class="line">    <span class="comment">// 敌机移动速度</span></span><br><span class="line">    enemySpeed:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 敌机创造速度</span></span><br><span class="line">    createEnemySpeed:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 敌机生命</span></span><br><span class="line">    enemyHp:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 道具移动速度</span></span><br><span class="line">    toolSpeed:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 道具创造速度</span></span><br><span class="line">    createToolSpeed:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">50</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 射击速度</span></span><br><span class="line">    shootSpeed:<span class="number">0.2</span>,</span><br><span class="line">    <span class="comment">// 双倍射击时长</span></span><br><span class="line">    doubleShootTimes:<span class="number">100</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="背景类"><a href="#背景类" class="headerlink" title="背景类"></a>背景类</h4><p>游戏中用到的背景也可以提出来为一个背景类，游戏中的背景是滚动的，滚动背景的实现方式就是用两张相同的图片拼接起来，不断往下移动，当下面那张完全移出屏幕的时候，再将这张图片移动到前一张的上面，这样一直循环往复，就形成了不断滚动的背景。实现代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">var</span> Background = cc.Sprite.extend(&#123;</span><br><span class="line">     ctor: <span class="function"><span class="keyword">function</span> (<span class="params">isOver</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isOver)&#123;</span><br><span class="line">            <span class="built_in">this</span>._super();</span><br><span class="line">            <span class="keyword">var</span> bg = <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;gameover.png&quot;</span>));</span><br><span class="line">            bg.setScale(<span class="number">750</span>/<span class="number">480</span>);</span><br><span class="line">            <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>._super();</span><br><span class="line">            <span class="built_in">this</span>.setScale(<span class="number">750</span>/<span class="number">480</span>);</span><br><span class="line">            <span class="comment">// 滚动背景图1</span></span><br><span class="line">            <span class="keyword">var</span> menuBg1 = <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;background.png&quot;</span>));</span><br><span class="line">            menuBg1.setPosition(cc.winSize.width / <span class="number">2</span>, cc.winSize.height / <span class="number">2</span>);</span><br><span class="line">            menuBg1.setScale(<span class="number">750</span> / <span class="number">480</span>);</span><br><span class="line">            menuBg1.setTag(<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">this</span>.addChild(menuBg1);</span><br><span class="line">            <span class="comment">// 滚动背景图2</span></span><br><span class="line">            <span class="keyword">var</span> menuBg2 = <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;background.png&quot;</span>));</span><br><span class="line">            menuBg2.setPosition(cc.winSize.width / <span class="number">2</span>, cc.winSize.height / <span class="number">2</span> + cc.winSize.height - <span class="number">4</span>);</span><br><span class="line">            menuBg2.setScale(<span class="number">750</span> / <span class="number">480</span>);</span><br><span class="line">            menuBg2.setTag(<span class="number">2</span>);</span><br><span class="line">            <span class="built_in">this</span>.addChild(menuBg2);</span><br><span class="line">            <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.update);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">     &#125;,</span><br><span class="line">     stopMove:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.update);</span><br><span class="line">     &#125;,</span><br><span class="line">     update: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="keyword">var</span> menuBg1 = <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>);</span><br><span class="line">         <span class="keyword">var</span> menuBg2 = <span class="built_in">this</span>.getChildByTag(<span class="number">2</span>);</span><br><span class="line">         <span class="keyword">if</span> (menuBg1.getPositionY() &lt;= -cc.winSize.height / <span class="number">2</span> + <span class="number">20</span>) &#123;</span><br><span class="line">             menuBg1.setPositionY(cc.winSize.height / <span class="number">2</span> + cc.winSize.height);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             menuBg1.setPositionY(menuBg1.getPositionY() - <span class="number">1</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (menuBg2.getPositionY() &lt;= -cc.winSize.height / <span class="number">2</span> + <span class="number">20</span>) &#123;</span><br><span class="line">             menuBg2.setPositionY(cc.winSize.height / <span class="number">2</span> + cc.winSize.height);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             menuBg2.setPositionY(menuBg2.getPositionY() - <span class="number">1</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h4 id="子弹类"><a href="#子弹类" class="headerlink" title="子弹类"></a>子弹类</h4><p>玩家不断发出子弹，子弹类需要包含移动和移除两个方法，子弹一旦被创建，就按照一个轨迹移动，直到碰撞到敌机或飞出屏幕才移除子弹，碰撞检测在游戏场景中实现，碰撞之后调用子弹类的移除方法。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Bullet = cc.Sprite.extend(&#123;</span><br><span class="line">    gameLayer:<span class="literal">null</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">type,isUp,gameLayer</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.gameLayer = gameLayer;</span><br><span class="line">        <span class="built_in">this</span>._super(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;bullet&quot;</span>+type+<span class="string">&quot;.png&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(isUp)&#123;</span><br><span class="line">            <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.moveUp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.moveDown);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    moveUp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setPositionY(<span class="built_in">this</span>.getPositionY() + Global.bulletSpeed);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.getPositionY()&gt;=cc.winSize.height+<span class="built_in">this</span>.height/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">// 飞出屏幕删除</span></span><br><span class="line">            <span class="built_in">this</span>.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    moveDown:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setPositionY(<span class="built_in">this</span>.getPositionY() - Global.bulletSpeed);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.getPositionY()&lt;=-<span class="built_in">this</span>.height/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">// 飞出屏幕删除</span></span><br><span class="line">            <span class="built_in">this</span>.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    remove:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> index = <span class="built_in">this</span>.gameLayer.bullets.indexOf(<span class="built_in">this</span>);  </span><br><span class="line">        <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;  </span><br><span class="line">            <span class="built_in">this</span>.gameLayer.bullets.splice(index, <span class="number">1</span>);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.removeFromParent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="玩家类"><a href="#玩家类" class="headerlink" title="玩家类"></a>玩家类</h4><p>游戏中的主角就是玩家类，玩家控制玩家类在屏幕中移动飞行，并不断射击子弹，玩家类中包含单行子弹射击和吃完道具之后的双行子弹射击两个方法，玩家还有移动方法，飞入屏幕方法和爆炸方法。同时飞机重复播放飞行动画。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Player = cc.Sprite.extend(&#123;</span><br><span class="line">    lock:<span class="literal">true</span>,</span><br><span class="line">    gameLayer:<span class="literal">null</span>,</span><br><span class="line">    doubleCount:<span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">gameLayer</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero1.png&quot;</span>));</span><br><span class="line">        <span class="built_in">this</span>.gameLayer = gameLayer;</span><br><span class="line">        <span class="built_in">this</span>.doubleCount = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.lock = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 飞行动画</span></span><br><span class="line">        <span class="keyword">var</span> heroHoldFrames = [</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero1.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero2.png&quot;</span>)</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">var</span> holdAnimation = <span class="keyword">new</span> cc.Animation(heroHoldFrames, <span class="number">0.1</span>);</span><br><span class="line">        <span class="built_in">this</span>.runAction(cc.repeatForever(cc.animate(holdAnimation)));</span><br><span class="line">        <span class="built_in">this</span>.moveIn();</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.shootSingleBullet,Global.shootSpeed);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    shootSingleBullet:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.lock) &#123;</span><br><span class="line">            <span class="keyword">var</span> bullet = <span class="keyword">new</span> Bullet(<span class="number">2</span>,<span class="literal">true</span>,<span class="built_in">this</span>.gameLayer);</span><br><span class="line">            bullet.setPosition(<span class="built_in">this</span>.getPositionX(),<span class="built_in">this</span>.getPositionY()+<span class="built_in">this</span>.height/<span class="number">2</span>);</span><br><span class="line">            <span class="built_in">this</span>.gameLayer.addChild(bullet);</span><br><span class="line">            <span class="built_in">this</span>.gameLayer.bullets.push(bullet);</span><br><span class="line">            <span class="comment">// 发射子弹音效</span></span><br><span class="line">            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/bullet.mp3&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    shootDoubleBegin:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.shootSingleBullet);</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.shootDoubleBullet,Global.shootSpeed<span class="number">-0.1</span>);</span><br><span class="line">        <span class="built_in">this</span>.doubleCount = <span class="number">0</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    shootDoubleBullet:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.lock) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">this</span>.doubleCount&gt;=Global.doubleShootTimes)&#123;</span><br><span class="line">                <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.shootDoubleBullet);</span><br><span class="line">                <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.shootSingleBullet,Global.shootSpeed);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.doubleCount += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">var</span> bulletLeft = <span class="keyword">new</span> Bullet(<span class="number">2</span>,<span class="literal">true</span>,<span class="built_in">this</span>.gameLayer);</span><br><span class="line">                <span class="keyword">var</span> bulletRight = <span class="keyword">new</span> Bullet(<span class="number">2</span>,<span class="literal">true</span>,<span class="built_in">this</span>.gameLayer);</span><br><span class="line">                bulletLeft.setPosition(<span class="built_in">this</span>.getPositionX()<span class="number">-35</span>,<span class="built_in">this</span>.getPositionY()+<span class="number">5</span>);</span><br><span class="line">                bulletRight.setPosition(<span class="built_in">this</span>.getPositionX()+<span class="number">35</span>,<span class="built_in">this</span>.getPositionY()+<span class="number">5</span>);</span><br><span class="line">                <span class="built_in">this</span>.gameLayer.addChild(bulletLeft);</span><br><span class="line">                <span class="built_in">this</span>.gameLayer.addChild(bulletRight);</span><br><span class="line">                <span class="built_in">this</span>.gameLayer.bullets.push(bulletLeft);</span><br><span class="line">                <span class="built_in">this</span>.gameLayer.bullets.push(bulletRight);</span><br><span class="line">                <span class="comment">// 发射子弹音效</span></span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/bullet.mp3&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    moveIn:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.runAction(cc.sequence(</span><br><span class="line">            cc.moveTo(<span class="number">1</span>, cc.p(cc.winSize.width/<span class="number">2</span>, cc.winSize.height/<span class="number">2</span>)),</span><br><span class="line">            cc.moveBy(<span class="number">2</span>, cc.p(<span class="number">0</span>, <span class="number">-400</span>)),</span><br><span class="line">            cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">player</span>)</span>&#123;</span><br><span class="line">                <span class="comment">// 播完动画解锁操作</span></span><br><span class="line">                player.lock = <span class="literal">false</span>;</span><br><span class="line">            &#125;,<span class="built_in">this</span>,<span class="built_in">this</span>)</span><br><span class="line">        ));</span><br><span class="line">    &#125;,</span><br><span class="line">    moveBy:<span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.lock) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setPosition(<span class="built_in">this</span>.getPositionX() + x, <span class="built_in">this</span>.getPositionY() + y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    blowUp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.lock = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 爆炸动画</span></span><br><span class="line">        <span class="keyword">var</span> blowUpFrames = [</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero_blowup_n1.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero_blowup_n2.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero_blowup_n3.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;hero_blowup_n4.png&quot;</span>)</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">var</span> blowUpAnimation = <span class="keyword">new</span> cc.Animation(blowUpFrames, <span class="number">0.1</span>);</span><br><span class="line">        <span class="built_in">this</span>.stopAllActions();</span><br><span class="line">        <span class="built_in">this</span>.runAction(cc.sequence(cc.animate(blowUpAnimation),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">hero</span>)</span>&#123;</span><br><span class="line">            hero.removeFromParent();</span><br><span class="line">        &#125;,<span class="built_in">this</span>,<span class="built_in">this</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="敌机类"><a href="#敌机类" class="headerlink" title="敌机类"></a>敌机类</h4><p>敌机分为三种，小型飞机，中型飞机和大型飞机，三种飞机的血量，速度都不相同，其中，大型飞机还能在每三秒创建三个小型飞机。敌机同样包含移动，击中和爆炸方法。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Enemy = cc.Sprite.extend(&#123;</span><br><span class="line">    type:<span class="number">1</span>,</span><br><span class="line">    hp:<span class="number">0</span>,</span><br><span class="line">    gameLayer:<span class="literal">null</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">type,gameLayer</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.hp = Global.enemyHp(type);</span><br><span class="line">        <span class="built_in">this</span>.gameLayer = gameLayer;</span><br><span class="line">        <span class="keyword">if</span>(type==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="comment">// 大型飞机的动画</span></span><br><span class="line">            <span class="built_in">this</span>._super(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+type+<span class="string">&quot;_n1.png&quot;</span>));</span><br><span class="line">            <span class="keyword">var</span> holdFrames = [</span><br><span class="line">                cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+type+<span class="string">&quot;_n1.png&quot;</span>),</span><br><span class="line">                cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+type+<span class="string">&quot;_n2.png&quot;</span>)</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">var</span> holdAnimation = <span class="keyword">new</span> cc.Animation(holdFrames, <span class="number">0.1</span>);</span><br><span class="line">            <span class="built_in">this</span>.runAction(cc.repeatForever(cc.animate(holdAnimation)));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>._super(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+type+<span class="string">&quot;.png&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.moveDown);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.type==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="comment">// 大飞机每3s产生3个小飞机</span></span><br><span class="line">            <span class="built_in">this</span>.schedule(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.createEnemy();</span><br><span class="line">            &#125;,<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 创造三个小型飞机</span></span><br><span class="line">    createEnemy:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> enemy1 = <span class="keyword">new</span> Enemy(<span class="number">1</span>,<span class="built_in">this</span>.gameLayer);</span><br><span class="line">        <span class="keyword">var</span> enemy2 = <span class="keyword">new</span> Enemy(<span class="number">1</span>,<span class="built_in">this</span>.gameLayer);</span><br><span class="line">        <span class="keyword">var</span> enemy3 = <span class="keyword">new</span> Enemy(<span class="number">1</span>,<span class="built_in">this</span>.gameLayer);</span><br><span class="line">        <span class="keyword">var</span> x1 = <span class="built_in">this</span>.getPositionX()-<span class="built_in">this</span>.width/<span class="number">2</span>+enemy1.width/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">var</span> x2 = <span class="built_in">this</span>.getPositionX();</span><br><span class="line">        <span class="keyword">var</span> x3 = <span class="built_in">this</span>.getPositionX()+<span class="built_in">this</span>.width/<span class="number">2</span>-enemy3.width/<span class="number">2</span>;</span><br><span class="line">        enemy1.setPosition(x1,<span class="built_in">this</span>.getPositionY());</span><br><span class="line">        enemy2.setPosition(x2,<span class="built_in">this</span>.getPositionY());</span><br><span class="line">        enemy3.setPosition(x3,<span class="built_in">this</span>.getPositionY());</span><br><span class="line">        <span class="built_in">this</span>.gameLayer.addChild(enemy1);</span><br><span class="line">        <span class="built_in">this</span>.gameLayer.addChild(enemy2);</span><br><span class="line">        <span class="built_in">this</span>.gameLayer.addChild(enemy3);</span><br><span class="line">        <span class="built_in">this</span>.gameLayer.enemies.push(enemy1);</span><br><span class="line">        <span class="built_in">this</span>.gameLayer.enemies.push(enemy2);</span><br><span class="line">        <span class="built_in">this</span>.gameLayer.enemies.push(enemy3);</span><br><span class="line">    &#125;,</span><br><span class="line">    moveDown:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setPositionY(<span class="built_in">this</span>.getPositionY() - <span class="built_in">parseInt</span>(Global.enemySpeed(<span class="built_in">this</span>.type)));</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.getPositionY()&lt;=-<span class="built_in">this</span>.height/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">// 飞出屏幕删除</span></span><br><span class="line">            <span class="built_in">this</span>.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    remove:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> index = <span class="built_in">this</span>.gameLayer.enemies.indexOf(<span class="built_in">this</span>);  </span><br><span class="line">        <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;  </span><br><span class="line">            <span class="built_in">this</span>.gameLayer.enemies.splice(index, <span class="number">1</span>);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.removeFromParent();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 击中</span></span><br><span class="line">    hit:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 击中动画</span></span><br><span class="line">        <span class="built_in">this</span>.hp -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.hp&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.blowUp();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> holdFrame = <span class="built_in">this</span>.type==<span class="number">3</span>?<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_n1.png&quot;</span>:<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> hitFrames = [</span><br><span class="line">                cc.spriteFrameCache.getSpriteFrame(holdFrame),</span><br><span class="line">                cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_hit.png&quot;</span>)</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">var</span> hitAnimation = <span class="keyword">new</span> cc.Animation(hitFrames, <span class="number">0.1</span>);</span><br><span class="line">            <span class="built_in">this</span>.runAction(cc.sequence(cc.animate(hitAnimation),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">enemy</span>)</span>&#123;</span><br><span class="line">                enemy.setSpriteFrame(cc.spriteFrameCache.getSpriteFrame(holdFrame));</span><br><span class="line">            &#125;,<span class="built_in">this</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 爆炸</span></span><br><span class="line">    blowUp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.type==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="comment">// 大飞机爆炸产生3个小飞机</span></span><br><span class="line">            <span class="built_in">this</span>.createEnemy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.moveDown);</span><br><span class="line">        <span class="keyword">var</span> index = <span class="built_in">this</span>.gameLayer.enemies.indexOf(<span class="built_in">this</span>);  </span><br><span class="line">        <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;  </span><br><span class="line">            <span class="built_in">this</span>.gameLayer.enemies.splice(index, <span class="number">1</span>);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 爆炸动画</span></span><br><span class="line">        <span class="keyword">var</span> blowUpFrames = [</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_down1.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_down2.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_down3.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_down4.png&quot;</span>)</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.type==<span class="number">3</span>)&#123;</span><br><span class="line">            blowUpFrames = blowUpFrames.concat([</span><br><span class="line">                cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_down5.png&quot;</span>),</span><br><span class="line">                cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;enemy&quot;</span>+<span class="built_in">this</span>.type+<span class="string">&quot;_down6.png&quot;</span>)</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 播放爆炸音效</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.type==<span class="number">3</span>)&#123;</span><br><span class="line">            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/enemy3_down.mp3&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/enemy1_down.mp3&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> blowUpAnimation = <span class="keyword">new</span> cc.Animation(blowUpFrames, <span class="number">0.1</span>);</span><br><span class="line">        <span class="built_in">this</span>.stopAllActions();</span><br><span class="line">        <span class="built_in">this</span>.runAction(cc.sequence(cc.animate(blowUpAnimation),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">enemy</span>)</span>&#123;</span><br><span class="line">            enemy.removeFromParent();</span><br><span class="line">        &#125;,<span class="built_in">this</span>,<span class="built_in">this</span>)));</span><br><span class="line">        <span class="comment">// 加分</span></span><br><span class="line">        <span class="built_in">this</span>.gameLayer.addScore(<span class="built_in">this</span>.type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="道具类"><a href="#道具类" class="headerlink" title="道具类"></a>道具类</h4><p>游戏中会定时掉落道具，道具类包含向下移动方法，移除方法和旋转方法。道具与玩家的碰撞检测在游戏场景中实现。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Tool = cc.Sprite.extend(&#123;</span><br><span class="line">    gameLayer:<span class="literal">null</span>,</span><br><span class="line">    type:<span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">type,gameLayer</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;ufo&quot;</span>+type+<span class="string">&quot;.png&quot;</span>));</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.gameLayer = gameLayer;</span><br><span class="line">        <span class="comment">// 旋转特效</span></span><br><span class="line">        <span class="built_in">this</span>.rotate();</span><br><span class="line">        <span class="comment">// 向下移动</span></span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.moveDown);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    moveDown:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setPositionY(<span class="built_in">this</span>.getPositionY()-Global.toolSpeed(<span class="built_in">this</span>.type));</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.getPositionY()&lt;=-<span class="built_in">this</span>.height/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">// 飞出屏幕删除</span></span><br><span class="line">            <span class="built_in">this</span>.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    remove:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> index = <span class="built_in">this</span>.gameLayer.tools.indexOf(<span class="built_in">this</span>);  </span><br><span class="line">        <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;  </span><br><span class="line">            <span class="built_in">this</span>.gameLayer.tools.splice(index, <span class="number">1</span>);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.runAction(cc.sequence(cc.scaleTo(<span class="number">0.1</span>,<span class="number">0</span>),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">tool</span>)</span>&#123;</span><br><span class="line">            tool.removeFromParent();</span><br><span class="line">        &#125;,<span class="built_in">this</span>,<span class="built_in">this</span>)));</span><br><span class="line">    &#125;,</span><br><span class="line">    rotate:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> rotateAction = cc.repeatForever(cc.sequence(cc.rotateTo(<span class="number">1</span>,<span class="number">30</span>),cc.sequence(cc.rotateTo(<span class="number">1</span>,<span class="number">-30</span>))));</span><br><span class="line">        <span class="built_in">this</span>.runAction(rotateAction);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="载入类"><a href="#载入类" class="headerlink" title="载入类"></a>载入类</h4><p>载入类只是在开始场景中的一个载入的循环播放的动画。<br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Loading = cc.Sprite.extend(&#123;</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_loading1.png&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> loadingFrames = [</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_loading1.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_loading2.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_loading3.png&quot;</span>),</span><br><span class="line">            cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_loading4.png&quot;</span>)</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">var</span> loadingAnimation = <span class="keyword">new</span> cc.Animation(loadingFrames, <span class="number">0.5</span>);</span><br><span class="line">        <span class="built_in">this</span>.runAction(cc.repeatForever(cc.animate(loadingAnimation)));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="开始场景"><a href="#开始场景" class="headerlink" title="开始场景"></a>开始场景</h4><p>开始场景是游戏的入口场景，进入之后首先进入开始场景，开始场景包含开始游戏按钮和帮助按钮，点击帮助按钮进入帮助场景，点击开始按钮进入游戏场景。开始场景还包含一个滚动的背景图和一个载入动画。<br>开始场景的效果如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/MenuScene.gif" alt="开始场景"><br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> MenuLayer = cc.Layer.extend(&#123;</span><br><span class="line">    loadCount: <span class="number">1</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.loadCount = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 加载plist</span></span><br><span class="line">        cc.spriteFrameCache.addSpriteFrames(res.shoot_background_plist);</span><br><span class="line">        <span class="comment">// 添加背景图</span></span><br><span class="line">        <span class="keyword">var</span> bg = <span class="keyword">new</span> Background(<span class="literal">false</span>);</span><br><span class="line">        bg.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">        <span class="comment">// logo</span></span><br><span class="line">        <span class="keyword">var</span> copyright = <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;shoot_copyright.png&quot;</span>));</span><br><span class="line">        copyright.setPosition(cc.winSize.width / <span class="number">2</span>, cc.winSize.height / <span class="number">2</span> + <span class="number">270</span>);</span><br><span class="line">        copyright.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(<span class="number">1</span>, <span class="number">1.5</span>), cc.scaleTo(<span class="number">1</span>, <span class="number">1</span>))));</span><br><span class="line">        <span class="built_in">this</span>.addChild(copyright);</span><br><span class="line">        <span class="comment">// 游戏按钮</span></span><br><span class="line">        <span class="keyword">var</span> startBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_start.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_start_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> GameScene()));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> helpBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_help.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_help_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> HelpScene()));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        helpBtn.setPositionY(startBtn.getPositionY() - startBtn.height / <span class="number">2</span> - <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(startBtn, helpBtn);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="comment">// loading动画</span></span><br><span class="line">        <span class="keyword">var</span> loading = <span class="keyword">new</span> Loading();</span><br><span class="line">        loading.setPosition(cc.winSize.width/<span class="number">2</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(loading);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MenuScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> MenuLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="游戏场景"><a href="#游戏场景" class="headerlink" title="游戏场景"></a>游戏场景</h4><p>从开始场景点击开始游戏按钮之后进入游戏场景，游戏场景包含所有的游戏逻辑，包括滚动背景，玩家，定时产生的敌机，定时产生的道具，玩家与敌机、敌机与子弹、以及玩家与道具的碰撞检测，玩家的移动操作，使用爆炸道具等。<br>游戏开始之前有一个玩家飞入屏幕的动画，效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/MoveIn.gif" alt="玩家飞入"><br>玩家飞入之后，就可以定时创建子弹、道具与敌机，游戏场景的效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/GameScene.gif" alt="游戏场景"><br>掉落的道具有发射双排子弹和炸弹两种，双排子弹效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/DoubleShoot.gif" alt="双排子弹"><br>拾取到炸弹道具会累加到左下角的计数中，点击炸弹就可以使用，炸弹可让屏幕中所有飞机全部爆炸，效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/Bomb.gif" alt="炸弹"><br>游戏中的敌机，子弹以及道具，都用数组来存储，每一帧都要遍历数组来进行碰撞检测，但玩家与子弹碰撞，玩家与敌机碰撞，以及敌机与子弹碰撞时，调用相应的类的逻辑，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> GameLayer = cc.Layer.extend(&#123;</span><br><span class="line">    touchStartX:<span class="number">0</span>,</span><br><span class="line">    touchStartY:<span class="number">0</span>,</span><br><span class="line">    bullets:[],</span><br><span class="line">    enemies:[],</span><br><span class="line">    tools:[],</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.touchStartX = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.touchStartY = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.bullets = [];</span><br><span class="line">        <span class="built_in">this</span>.enemies = [];</span><br><span class="line">        <span class="built_in">this</span>.tools = [];</span><br><span class="line">        <span class="comment">// 播放背景音乐</span></span><br><span class="line">        cc.audioEngine.playMusic(<span class="string">&quot;res/sound/game_music.mp3&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 加载plist</span></span><br><span class="line">        cc.spriteFrameCache.addSpriteFrames(res.shoot_background_plist);</span><br><span class="line">        cc.spriteFrameCache.addSpriteFrames(res.shoot_plist);</span><br><span class="line">        <span class="comment">// 添加背景图</span></span><br><span class="line">        <span class="keyword">var</span> bg = <span class="keyword">new</span> Background(<span class="literal">false</span>);</span><br><span class="line">        bg.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">        <span class="comment">// 添加飞机</span></span><br><span class="line">        <span class="keyword">var</span> player = <span class="keyword">new</span> Player(<span class="built_in">this</span>);</span><br><span class="line">        player.setPosition(cc.winSize.width / <span class="number">2</span>, -player.height / <span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(player);</span><br><span class="line">        player.setTag(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 产生敌机</span></span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.createEnemy(<span class="number">1</span>);</span><br><span class="line">        &#125;,Global.createEnemySpeed(<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.createEnemy(<span class="number">2</span>);</span><br><span class="line">        &#125;,Global.createEnemySpeed(<span class="number">2</span>));</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.createEnemy(<span class="number">3</span>);</span><br><span class="line">        &#125;,Global.createEnemySpeed(<span class="number">3</span>));</span><br><span class="line">        <span class="comment">// 产生道具</span></span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.createTool(<span class="number">1</span>);</span><br><span class="line">        &#125;,Global.createToolSpeed(<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.createTool(<span class="number">2</span>);</span><br><span class="line">        &#125;,Global.createToolSpeed(<span class="number">2</span>));</span><br><span class="line">        <span class="comment">// 添加爆炸道具</span></span><br><span class="line">        <span class="keyword">var</span> bombNor = <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;bomb.png&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> bombSelected = <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;bomb.png&quot;</span>));</span><br><span class="line">        bombSelected.setPosition(-bombSelected.width/<span class="number">4</span>,-bombSelected.height/<span class="number">4</span>);</span><br><span class="line">        bombSelected.setScale(<span class="number">1.5</span>);</span><br><span class="line">        <span class="keyword">var</span> bombBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            bombNor,</span><br><span class="line">            bombSelected,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> bombNum = <span class="built_in">this</span>.getChildByTag(<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">parseInt</span>(bombNum.getString().slice(<span class="number">1</span>))==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 全屏爆炸</span></span><br><span class="line">                <span class="keyword">var</span> blowEnemy = [];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> <span class="built_in">this</span>.enemies)&#123;</span><br><span class="line">                    <span class="keyword">var</span> enemy = <span class="built_in">this</span>.enemies[i];</span><br><span class="line">                    blowEnemy.push(enemy);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> blowEnemy)&#123;</span><br><span class="line">                    blowEnemy[j].blowUp();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 数量减一</span></span><br><span class="line">                bombNum.setString(<span class="string">&quot;X&quot;</span>+(<span class="built_in">parseInt</span>(bombNum.getString().slice(<span class="number">1</span>))<span class="number">-1</span>));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        bombBtn.setPosition(<span class="number">50</span>+bombBtn.width/<span class="number">2</span>,<span class="number">50</span>+bombBtn.height/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> bombMenu = <span class="keyword">new</span> cc.Menu(bombBtn);</span><br><span class="line">        bombMenu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        bombMenu.setAnchorPoint(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(bombMenu);</span><br><span class="line">        <span class="comment">// 爆炸道具数量</span></span><br><span class="line">        <span class="keyword">var</span> bombNum = <span class="keyword">new</span> cc.LabelBMFont(<span class="string">&quot;X2&quot;</span>,res.font);</span><br><span class="line">        bombNum.setAnchorPoint(<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">        bombNum.setPosition(bombBtn.getPositionX()+bombBtn.width/<span class="number">2</span>+<span class="number">50</span>,bombBtn.getPositionY());</span><br><span class="line">        bombNum.setTag(<span class="number">3</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(bombNum);</span><br><span class="line">        <span class="comment">// 暂停开始按钮</span></span><br><span class="line">        <span class="keyword">var</span> pauseBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_pause_nor.png&quot;</span>)),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(cc.spriteFrameCache.getSpriteFrame(<span class="string">&quot;game_pause_pressed.png&quot;</span>)),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 暂停音乐音效</span></span><br><span class="line">                cc.audioEngine.pauseAllEffects();</span><br><span class="line">                cc.audioEngine.pauseMusic();</span><br><span class="line">                pauseBtn.setEnabled(<span class="literal">false</span>);</span><br><span class="line">                cc.director.pause();</span><br><span class="line">                <span class="built_in">this</span>.addChild(<span class="keyword">new</span> PauseLayer(pauseBtn),<span class="number">10</span>);</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> pauseMenu = <span class="keyword">new</span> cc.Menu(pauseBtn);</span><br><span class="line">        pauseMenu.setPosition(<span class="number">20</span>+pauseBtn.width/<span class="number">2</span>,cc.winSize.height-pauseBtn.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        pauseMenu.setAnchorPoint(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(pauseMenu);</span><br><span class="line">        <span class="comment">// 分数</span></span><br><span class="line">        <span class="keyword">var</span> score = <span class="keyword">new</span> cc.LabelBMFont(<span class="string">&quot;0&quot;</span>,res.font);</span><br><span class="line">        score.setAnchorPoint(<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">        score.setPosition(pauseMenu.getPositionX()+pauseBtn.width/<span class="number">2</span>+<span class="number">50</span>,pauseMenu.getPositionY());</span><br><span class="line">        score.setTag(<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(score);</span><br><span class="line">        <span class="comment">// 碰撞检测</span></span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.collision);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    collision:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bullets = <span class="built_in">this</span>.bullets;</span><br><span class="line">        <span class="keyword">var</span> enemies = <span class="built_in">this</span>.enemies;</span><br><span class="line">        <span class="keyword">var</span> tools = <span class="built_in">this</span>.tools;</span><br><span class="line">        <span class="keyword">var</span> score = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.getChildByTag(<span class="number">2</span>).getString());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> enemies)&#123;</span><br><span class="line">            <span class="keyword">var</span> enemy = enemies[i];</span><br><span class="line">            <span class="comment">// 检测是否与玩家碰撞</span></span><br><span class="line">            <span class="keyword">var</span> player = <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(cc.rectIntersectsRect(enemy.getBoundingBox(),player.getBoundingBox()))&#123;</span><br><span class="line">                <span class="comment">// 游戏结束</span></span><br><span class="line">                <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.collision);</span><br><span class="line">                player.blowUp();</span><br><span class="line">                <span class="comment">// 停止背景音乐</span></span><br><span class="line">                cc.audioEngine.stopMusic(<span class="string">&quot;res/sound/game_music.mp3&quot;</span>);</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/game_over.mp3&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.scheduleOnce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>,<span class="keyword">new</span> OverScene(score)));</span><br><span class="line">                &#125;,<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 检测是否吃到道具</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> m <span class="keyword">in</span> tools)&#123;</span><br><span class="line">                <span class="keyword">var</span> tool = tools[m];</span><br><span class="line">                <span class="keyword">if</span>(cc.rectIntersectsRect(tool.getBoundingBox(),player.getBoundingBox()))&#123;</span><br><span class="line">                    <span class="keyword">switch</span>(tool.type)&#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            <span class="comment">// 双排子弹道具</span></span><br><span class="line">                            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/get_double_laser.mp3&quot;</span>);</span><br><span class="line">                            player.shootDoubleBegin();</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            <span class="comment">// 清屏道具</span></span><br><span class="line">                            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/get_bomb.mp3&quot;</span>);</span><br><span class="line">                            <span class="keyword">var</span> bomb = <span class="built_in">this</span>.getChildByTag(<span class="number">3</span>);</span><br><span class="line">                            bomb.setString(<span class="string">&quot;X&quot;</span>+(<span class="built_in">parseInt</span>(bomb.getString().slice(<span class="number">1</span>))+<span class="number">1</span>));</span><br><span class="line">                            bomb.runAction(cc.sequence(cc.scaleTo(<span class="number">0.1</span>,<span class="number">1.2</span>),cc.scaleTo(<span class="number">0.1</span>,<span class="number">1</span>)));</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;                  </span><br><span class="line">                    tool.remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> bullets)&#123;</span><br><span class="line">                <span class="keyword">var</span> bullet = bullets[j];</span><br><span class="line">                <span class="comment">// 检测是否与子弹碰撞</span></span><br><span class="line">                <span class="keyword">if</span>(cc.rectIntersectsRect(enemy.getBoundingBox(),bullet.getBoundingBox()))&#123;</span><br><span class="line">                    enemy.hit();</span><br><span class="line">                    bullet.remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    addScore:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> score = <span class="built_in">this</span>.getChildByTag(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> addScore = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> curScore = <span class="built_in">parseInt</span>(score.getString());</span><br><span class="line">        <span class="keyword">switch</span>(type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                addScore = <span class="number">100</span> + <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*(curScore/<span class="number">1000</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                addScore = <span class="number">200</span> + <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*(curScore/<span class="number">1000</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                addScore = <span class="number">500</span> + <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*(curScore/<span class="number">1000</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        score.setString(curScore+addScore);</span><br><span class="line">    &#125;,</span><br><span class="line">    createEnemy:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> enemy = <span class="keyword">new</span> Enemy(type,<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> randomX = <span class="built_in">Math</span>.random()*(cc.winSize.width-enemy.width/<span class="number">2</span>-enemy.width/<span class="number">2</span>)+enemy.width/<span class="number">2</span>;</span><br><span class="line">        enemy.setPosition(randomX,cc.winSize.height+enemy.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(enemy);</span><br><span class="line">        <span class="built_in">this</span>.enemies.push(enemy);</span><br><span class="line">    &#125;,</span><br><span class="line">    createTool:<span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tool = <span class="keyword">new</span> Tool(type,<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> randomX = <span class="built_in">Math</span>.random()*(cc.winSize.width-tool.width/<span class="number">2</span>-tool.width/<span class="number">2</span>)+tool.width/<span class="number">2</span>;</span><br><span class="line">        tool.setPosition(randomX,cc.winSize.height+tool.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(tool);</span><br><span class="line">        <span class="built_in">this</span>.tools.push(tool);</span><br><span class="line">    &#125;,</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="comment">// 添加触摸事件</span></span><br><span class="line">        cc.eventManager.addListener(&#123;</span><br><span class="line">            event:cc.EventListener.TOUCH_ONE_BY_ONE,</span><br><span class="line">            swallowTouches:<span class="literal">true</span>,</span><br><span class="line">            onTouchBegan:<span class="built_in">this</span>.touchbegan,</span><br><span class="line">            onTouchMoved:<span class="built_in">this</span>.touchmoved,</span><br><span class="line">            onTouchEnded:<span class="built_in">this</span>.touchended</span><br><span class="line">        &#125;,<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchbegan:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        event.getCurrentTarget().touchStartX = touch.getLocation().x;</span><br><span class="line">        event.getCurrentTarget().touchStartY = touch.getLocation().y;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchmoved:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> touchX = touch.getLocation().x;</span><br><span class="line">        <span class="keyword">var</span> touchY = touch.getLocation().y;</span><br><span class="line">        <span class="keyword">var</span> touchStartX = event.getCurrentTarget().touchStartX;</span><br><span class="line">        <span class="keyword">var</span> touchStartY = event.getCurrentTarget().touchStartY;</span><br><span class="line">        <span class="keyword">var</span> player = event.getCurrentTarget().getChildByTag(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(player!=<span class="literal">null</span>)&#123;</span><br><span class="line">            player.moveBy(touchX-touchStartX,touchY-touchStartY);</span><br><span class="line">            event.getCurrentTarget().touchStartX = touchX;</span><br><span class="line">            event.getCurrentTarget().touchStartY = touchY;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchended:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> GameScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> GameLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="暂停场景"><a href="#暂停场景" class="headerlink" title="暂停场景"></a>暂停场景</h4><p>在游戏场景点击暂停按钮进入暂停场景，暂停场景实际上只是一个半透明的层盖在游戏场景上，进入暂停场景后游戏暂停，暂停场景包含继续按钮，结束按钮和重新开始按钮。<br>暂停场景效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/PauseMenu.gif" alt="暂停场景"><br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> PauseLayer=cc.LayerColor.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params">pauseBtn</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化为黑色</span></span><br><span class="line">        <span class="built_in">this</span>._super(cc.color(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>));</span><br><span class="line">        <span class="built_in">this</span>.width = cc.winSize.width;</span><br><span class="line">        <span class="built_in">this</span>.height = cc.winSize.height;</span><br><span class="line">        <span class="comment">// 继续按钮</span></span><br><span class="line">        <span class="keyword">var</span> resumeBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_continue.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_continue_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.audioEngine.resumeMusic();</span><br><span class="line">                cc.director.resume();</span><br><span class="line">                pauseBtn.setEnabled(<span class="literal">true</span>);</span><br><span class="line">                <span class="built_in">this</span>.removeFromParent();</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        resumeBtn.setPosition(<span class="number">0</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 结束游戏按钮</span></span><br><span class="line">        <span class="keyword">var</span> overBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_over.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_over_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.audioEngine.stopMusic(<span class="string">&quot;res/sound/game_music.mp3&quot;</span>);</span><br><span class="line">                cc.director.resume();</span><br><span class="line">                cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> MenuScene()));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        overBtn.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 重新开始按钮</span></span><br><span class="line">        <span class="keyword">var</span> reagainBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_Reagain.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/game_Reagain_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.audioEngine.stopMusic(<span class="string">&quot;res/sound/game_music.mp3&quot;</span>);</span><br><span class="line">                cc.director.resume();</span><br><span class="line">                cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> GameScene()));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        reagainBtn.setPosition(<span class="number">0</span>,<span class="number">-100</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(resumeBtn,overBtn,reagainBtn);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="结束场景"><a href="#结束场景" class="headerlink" title="结束场景"></a>结束场景</h4><p>在游戏场景中，如果在碰撞检测中检测到玩家与敌机碰撞，则游戏结束，游戏结束进入结束场景，结束场景包含玩家的最终分数，以及展示最高历史分数和保存最高历史分数。<br>结束场景的效果如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/OverScene.gif" alt="结束场景"><br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> OverLayer=cc.Layer.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params">score</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> bg = <span class="keyword">new</span> Background(<span class="literal">true</span>);</span><br><span class="line">        bg.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">        <span class="keyword">var</span> highest = cc.sys.localStorage.getItem(<span class="string">&quot;highest&quot;</span>);</span><br><span class="line">        highest = highest==<span class="literal">null</span>?<span class="number">0</span>:highest;</span><br><span class="line">        <span class="comment">// 分数存储</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">parseInt</span>(score)&gt;<span class="built_in">parseInt</span>(highest))&#123;</span><br><span class="line">            cc.sys.localStorage.setItem(<span class="string">&quot;highest&quot;</span> ,score);</span><br><span class="line">            highest = score;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 历史最高分数</span></span><br><span class="line">        <span class="keyword">var</span> highestFnt = <span class="keyword">new</span> cc.LabelBMFont(highest.toString(),res.font);</span><br><span class="line">        highestFnt.setPosition(<span class="number">250</span>,cc.winSize.height-highestFnt.height/<span class="number">2</span><span class="number">-75</span>);</span><br><span class="line">        highestFnt.setAnchorPoint(<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(highestFnt);</span><br><span class="line">        <span class="comment">// 分数显示</span></span><br><span class="line">        <span class="keyword">var</span> scoreFnt = <span class="keyword">new</span> cc.LabelBMFont(score,res.font);</span><br><span class="line">        scoreFnt.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(scoreFnt);</span><br><span class="line">        <span class="built_in">this</span>.scheduleOnce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/out_porp.mp3&quot;</span>);</span><br><span class="line">            scoreFnt.runAction(cc.sequence(cc.scaleTo(<span class="number">0.2</span>,<span class="number">1.5</span>),cc.scaleTo(<span class="number">0.2</span>,<span class="number">1</span>)));</span><br><span class="line">        &#125;,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 菜单按钮</span></span><br><span class="line">        <span class="keyword">var</span> restartBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/btn_finish.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/btn_finish_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> MenuScene()));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        restartBtn.setPosition(scoreFnt.getPositionX(),scoreFnt.getPositionY()-scoreFnt.height/<span class="number">2</span><span class="number">-100</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(restartBtn);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        menu.setAnchorPoint(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> OverScene=cc.Scene.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span>(<span class="params">score</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer=<span class="keyword">new</span> OverLayer(score);</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="帮助场景"><a href="#帮助场景" class="headerlink" title="帮助场景"></a>帮助场景</h4><p>帮助场景就是一个展示游戏帮助提示的场景，其实只有文字和返回游戏按钮。<br>帮助场景的效果如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/HelpScene.gif" alt="帮助场景"><br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> OverLayer=cc.Layer.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params">score</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> bg = <span class="keyword">new</span> Background(<span class="literal">true</span>);</span><br><span class="line">        bg.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">        <span class="keyword">var</span> highest = cc.sys.localStorage.getItem(<span class="string">&quot;highest&quot;</span>);</span><br><span class="line">        highest = highest==<span class="literal">null</span>?<span class="number">0</span>:highest;</span><br><span class="line">        <span class="comment">// 分数存储</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">parseInt</span>(score)&gt;<span class="built_in">parseInt</span>(highest))&#123;</span><br><span class="line">            cc.sys.localStorage.setItem(<span class="string">&quot;highest&quot;</span> ,score);</span><br><span class="line">            highest = score;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 历史最高分数</span></span><br><span class="line">        <span class="keyword">var</span> highestFnt = <span class="keyword">new</span> cc.LabelBMFont(highest.toString(),res.font);</span><br><span class="line">        highestFnt.setPosition(<span class="number">250</span>,cc.winSize.height-highestFnt.height/<span class="number">2</span><span class="number">-75</span>);</span><br><span class="line">        highestFnt.setAnchorPoint(<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(highestFnt);</span><br><span class="line">        <span class="comment">// 分数显示</span></span><br><span class="line">        <span class="keyword">var</span> scoreFnt = <span class="keyword">new</span> cc.LabelBMFont(score,res.font);</span><br><span class="line">        scoreFnt.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(scoreFnt);</span><br><span class="line">        <span class="built_in">this</span>.scheduleOnce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            cc.audioEngine.playEffect(<span class="string">&quot;res/sound/out_porp.mp3&quot;</span>);</span><br><span class="line">            scoreFnt.runAction(cc.sequence(cc.scaleTo(<span class="number">0.2</span>,<span class="number">1.5</span>),cc.scaleTo(<span class="number">0.2</span>,<span class="number">1</span>)));</span><br><span class="line">        &#125;,<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 菜单按钮</span></span><br><span class="line">        <span class="keyword">var</span> restartBtn = <span class="keyword">new</span> cc.MenuItemSprite(</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/btn_finish.png&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/btn_finish_selected.png&quot;</span>),</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                cc.audioEngine.playEffect(<span class="string">&quot;res/sound/button.mp3&quot;</span>);</span><br><span class="line">                cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> MenuScene()));</span><br><span class="line">            &#125;, <span class="built_in">this</span>);</span><br><span class="line">        restartBtn.setPosition(scoreFnt.getPositionX(),scoreFnt.getPositionY()-scoreFnt.height/<span class="number">2</span><span class="number">-100</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(restartBtn);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);install</span><br><span class="line">        menu.setAnchorPoint(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> OverScene=cc.Scene.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span>(<span class="params">score</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer=<span class="keyword">new</span> OverLayer(score);</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p>最后的运行效果如下<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/Plane.gif" alt="打飞机效果图"><br>通过CVP平台的项目托管可看到实际运行效果，地址如下：<br><a href="http://www.cocoscvp.com/usercode/3d1775ea3aea1f12e986b7d8ebbb079fca12c064/">http://www.cocoscvp.com/usercode/3d1775ea3aea1f12e986b7d8ebbb079fca12c064/</a></p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>所有源代码均上传到github，欢迎交流学习，地址：<br><a href="https://github.com/hjcenry/plane">https://github.com/hjcenry/plane</a></p><ul><li>原文博客：<a href="http://hjcenry.github.io/">http://hjcenry.github.io</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;今天我们来讲一个最最最常见的一个小游戏——打飞机！是的，打飞机！还记得小时候在玩儿的雷电，应该是打飞机最早的样子了吧。直到现在，也有微信打飞机，全民飞机大战，全民打飞机等游戏的出现，这些游戏基本都是在我们小时候玩儿的打飞机的原型上增加特效音效以及更多新的玩儿法，在这基础上进行的创新。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
    <category term="打飞机" scheme="http://www.hjcenry.com/tags/%E6%89%93%E9%A3%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Cocos Creator实现的《点我+1》</title>
    <link href="http://www.hjcenry.com/2016/07/02/Cocos%20Creator%E5%AE%9E%E7%8E%B0%E7%9A%84%E3%80%8A%E7%82%B9%E6%88%91+1%E3%80%8B/"/>
    <id>http://www.hjcenry.com/2016/07/02/Cocos%20Creator%E5%AE%9E%E7%8E%B0%E7%9A%84%E3%80%8A%E7%82%B9%E6%88%91+1%E3%80%8B/</id>
    <published>2016-07-02T09:14:00.000Z</published>
    <updated>2020-09-29T03:25:11.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在学习Cocos中，需要一些东西来练手，于是前段时间就开发仿照一款公司之前的产品《点我+1》来做，仿照过程中，所有的算法逻辑都是自己研究的，并没有参考公司代码，也没有使用公司的美术资源，所以也就不存在公司机密的内容啦，完全只是学习练习而已。<a id="more"></a><br>这是一款消除类游戏，规则和大多数三消类游戏差不多，在一个5x5的格子中，有25个方块，每个方块有一个数字，用户的操作就是点击方块，使方块的数字+1，当至少每3个相同数字的时候，这些数字相同的方块合成为一个，并且数字+1，在玩家的表现就是：除了点击的方块之外，其他的相同数字的方块全部消失，然后点击的方块再+1。这款游戏看似很简单，但实际也是蕴含很多细节以及算法，我也是用了一周时间断断续续才做出来。<br>并且在这次练习中，我也是第一次尝试使用Cocos Creator来做，使用中也是遇到了不少问题，它与Cocos2d-JS的原生API还是有一定的差别的，Cocos Creator在我看来就是Cocos在向Unity靠近的一个产物，想要像Unity那样实现一整套的工作流，将游戏中的所有元素都组件化，游戏场景可以通过拖动就能搭建，游戏逻辑的实现只需要对组件添加相应的脚本即可，让游戏开发更加的方便，更加直观可视化。</p><h3 id="Cocos-Creator"><a href="#Cocos-Creator" class="headerlink" title="Cocos Creator"></a>Cocos Creator</h3><p>Cocos Creator是Cocos家族又一个划时代意义的产物，前面已经提到，我个人认为这是Cocos向Unity靠近的产物，或许也可以说，游戏开发的脚本化、组件化、以及高效工作流、高度可扩展，已经成为任何一款游戏引擎的发展方向，这样的高效快速的开发的工具，才是开发者的首选工具。了解Cocos家族历史的人应该都知道，Cocos从各种语言版本，到2dx跨平台版本，到Cocos Stuio、Cocos IDE、Cocos Builder，再到Cocos Creator，这一切都是在使开发者越来越方便，使得游戏开发的门槛越来越低，任何人，只要你有心，有游戏梦，你都可以通过自身的努力来造梦，而Cocos Creator，就是我们造梦的工具。<br>不过说实话，Cocos Creator目前是1.1版本，在使用仍然还有许多bug，比如我打包Web版本之后，直接在本地无法运行，查看控制台输出应该是跨域的问题，而发布到服务器就能正常运行，再比如游戏的开发者，开发者还是需要考虑很多各种型号手机屏幕兼容的问题，希望Cocos Creator还能有一套成熟的兼容适配的方案，还有一些我个人的问题或许只是我还不熟悉Cocos的组件化开发而已，需要等到我真正熟悉这款工具，才能用好它，所谓工欲善其事必先利其器，工具用好了，你的造梦之路才会更加顺畅！<br>Cocos Creator的用户手册：<a href="http://www.cocos.com/docs/creator/index.html">http://www.cocos.com/docs/creator/index.html</a><br>Cocos Creator的API：<a href="http://www.cocos.com/docs/creator/api/index.html">http://www.cocos.com/docs/creator/api/index.html</a></p><h3 id="游戏分析"><a href="#游戏分析" class="headerlink" title="游戏分析"></a>游戏分析</h3><p>这款游戏是比较常见的三消类游戏，不过它也有着自己的特色，将数字类游戏玩法与消除类游戏玩法相结合，游戏过程也比较具有挑战性，让人产生挑战的欲望，游戏的玩法在上文已有描述，没有玩过这款消除类游戏的朋友可以通过以下地址进行下载：<br>安卓版地址：<a href="http://app.mi.com/detail/231892?ref=search">http://app.mi.com/detail/231892?ref=search</a><br>iOS版地址：<a href="https://itunes.apple.com/cn/app/dian-wo+1/id1012314214?mt=8">https://itunes.apple.com/cn/app/dian-wo+1/id1012314214?mt=8</a><br>没玩过的朋友可以通过以上地址下载下来玩一下，体验下游戏玩法，然后仔细分析其中的游戏逻辑运算过程。<br>通过游戏玩法的分析我们至少可以分析出以下几点：<br>1.点击游戏方块，方块数字+1<br>2.在至少3个相同数字的方块彼此相邻时，可以合成一个+1的数<br>3.生成5x5的地图时，最多只能有两个相同数字方块相邻<br>4.每完成一次方块合成之后，所有方块向下填补空缺的位置<br>5.在填补完空缺位置之后，再生成新的方块<br>在Cocos Creator中，我们要熟悉组件化开发，因此我们需要开始场景、游戏场景、结束场景、以及方块预制资源、能量条预制资源，以及各种脚本和音效等。分别用scene、script和voice三个文件夹来存放场景组件，脚本组件和音效组件，另外将预制资源放在根目录下，如下图资源目录：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/projstruct.png" alt="资源结构图"></p><h3 id="游戏实现"><a href="#游戏实现" class="headerlink" title="游戏实现"></a>游戏实现</h3><p>如之前一篇文章对2048游戏的分析一样，我们首先需要一个数组来存放所有的方块，并将方块单独提出来为一个对象，在这里，我们将方块做成预制资源，在需要的时候直接创建方块预制资源，同样，能量条也可以做成预制资源。另外我们需要开始场景、游戏场景和结束场景三个场景，并对这三个场景组件编写脚本。<br>在开发写代码之前，我们经过如上的分析，知道了我们大致要实现的几个核心算法：<br>1.扫描某一个位置的上下左右四个方向所有相邻的相同数字的点，并得到这些点的个数<br>2.所有方块向下移动，填补所有的空缺<br>核心的就这两个算法，其他的都是一些简单的逻辑，下面先对这两个算法进行分析</p><h4 id="扫描算法"><a href="#扫描算法" class="headerlink" title="扫描算法"></a>扫描算法</h4><p>扫描算法实质上就是对指定的点得四周进行扫描，扫描是否有数字相同的点，如果有数字相同的点，那么还需要进一步对这个数字相同的点再进行扫描，直到扫描的点四周都没有数字相同的点，才能确认最终相邻点的个数，实际上就是对指定的点向四周扩散扫描。<br>我的实现方式是这样的，写一个函数，传入两个数组，一个用来记录扫描到的数字相同的点，一个用来记录扫描过得点，以便于下次扫描不再扫描已经扫描过的点，除此之外，还需要传入行，列，上次扫描的行，上次扫描的列（在下次扫描时，不用再对上次的那个方向进行扫描），以及扫描要比对的数字。通过指定的点，我向上、下、左、右四个方向进行扫描，如果数字相同，我就将这个点加入到记录数字相同的点得数组中，并对这个点再递归调用这个函数，在四个方向全都递归扫描完毕后，我得到的这个扫描过的点的数组，就是所有与指定点的数字相同且彼此相邻的点的集合。可能我描述不是太清楚，我直接将代码贴出来，我的算法基础不是太好，可能这不是最优的算法，希望有朋友能为我提供更好更快的算法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 核心扫描逻辑</span></span><br><span class="line"><span class="comment"> * @param row 指定行</span></span><br><span class="line"><span class="comment"> * @param col 指定列</span></span><br><span class="line"><span class="comment"> * @param lastRow 上次扫描的行</span></span><br><span class="line"><span class="comment"> * @param lastCol 上次扫描的列</span></span><br><span class="line"><span class="comment"> * @param num 扫描要比对的数字</span></span><br><span class="line"><span class="comment"> * @param arr 记录数字相同且彼此相邻的数组</span></span><br><span class="line"><span class="comment"> * @param scanArr 记录扫描过的点的数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">scanAround:<span class="function"><span class="keyword">function</span>(<span class="params">row,col,lastRow,lastCol,num,arr,scanArr</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// cc.log(&quot;row:&quot;,row,&quot;,col:&quot;,col,&quot;,lastRow:&quot;,lastRow,&quot;,lastCol:&quot;,lastCol,&quot;,num:&quot;,num,&quot;,arr:&quot;,arr,&quot;,scanArr:&quot;,scanArr);</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">this</span>.tiles[row][col]==<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> isClear = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(scanArr==<span class="literal">undefined</span>)&#123;</span><br><span class="line">        scanArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扫描过的节点不再扫描</span></span><br><span class="line">    <span class="keyword">if</span>(scanArr.indexOf(row+<span class="string">&quot;#&quot;</span>+col)==<span class="number">-1</span>)&#123;</span><br><span class="line">        scanArr.push(row+<span class="string">&quot;#&quot;</span>+col);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扫描上</span></span><br><span class="line">    <span class="keyword">if</span>(row&lt;<span class="number">4</span>&amp;&amp;(lastRow!=(row+<span class="number">1</span>)||lastCol!=col)&amp;&amp;<span class="built_in">this</span>.tiles[row+<span class="number">1</span>][col]!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> nextNum = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row+<span class="number">1</span>][col].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string);</span><br><span class="line">        <span class="keyword">if</span>(nextNum==num)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.indexOf(row+<span class="string">&quot;#&quot;</span>+col)==<span class="number">-1</span>)&#123;</span><br><span class="line">                arr.push(row+<span class="string">&quot;#&quot;</span>+col);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.scanAround(row+<span class="number">1</span>,col,row,col,num,arr,scanArr);</span><br><span class="line">            isClear = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扫描下</span></span><br><span class="line">    <span class="keyword">if</span>(row&gt;<span class="number">0</span>&amp;&amp;(lastRow!=(row<span class="number">-1</span>)||lastCol!=col)&amp;&amp;<span class="built_in">this</span>.tiles[row<span class="number">-1</span>][col]!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> nextNum = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row<span class="number">-1</span>][col].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string);</span><br><span class="line">        <span class="keyword">if</span>(nextNum==num)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.indexOf(row+<span class="string">&quot;#&quot;</span>+col)==<span class="number">-1</span>)&#123;</span><br><span class="line">                arr.push(row+<span class="string">&quot;#&quot;</span>+col);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.scanAround(row<span class="number">-1</span>,col,row,col,num,arr,scanArr);</span><br><span class="line">            isClear = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扫描左</span></span><br><span class="line">    <span class="keyword">if</span>(col&gt;<span class="number">0</span>&amp;&amp;(lastRow!=row||lastCol!=(col<span class="number">-1</span>))&amp;&amp;<span class="built_in">this</span>.tiles[row][col<span class="number">-1</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> nextNum = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row][col<span class="number">-1</span>].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string);</span><br><span class="line">        <span class="keyword">if</span>(nextNum==num)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.indexOf(row+<span class="string">&quot;#&quot;</span>+col)==<span class="number">-1</span>)&#123;</span><br><span class="line">                arr.push(row+<span class="string">&quot;#&quot;</span>+col);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.scanAround(row,col<span class="number">-1</span>,row,col,num,arr,scanArr);</span><br><span class="line">            isClear = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 扫描右</span></span><br><span class="line">    <span class="keyword">if</span>(col&lt;<span class="number">4</span>&amp;&amp;(lastRow!=row||lastCol!=(col+<span class="number">1</span>))&amp;&amp;<span class="built_in">this</span>.tiles[row][col+<span class="number">1</span>]!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> nextNum = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row][col+<span class="number">1</span>].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string);</span><br><span class="line">        <span class="keyword">if</span>(nextNum==num)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.indexOf(row+<span class="string">&quot;#&quot;</span>+col)==<span class="number">-1</span>)&#123;</span><br><span class="line">                arr.push(row+<span class="string">&quot;#&quot;</span>+col);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.scanAround(row,col+<span class="number">1</span>,row,col,num,arr,scanArr);</span><br><span class="line">            isClear = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 四周都不通，但不是出发遍历点，并且数字相同，也加入到数组</span></span><br><span class="line">    <span class="keyword">if</span>(!isClear&amp;&amp;(lastRow!=<span class="number">-1</span>&amp;&amp;lastCol!=<span class="number">-1</span>))&#123;</span><br><span class="line">        <span class="keyword">var</span> curNum = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row][col].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string)</span><br><span class="line">        <span class="keyword">if</span>(curNum==num)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr.indexOf(row+<span class="string">&quot;#&quot;</span>+col)==<span class="number">-1</span>)&#123;</span><br><span class="line">                arr.push(row+<span class="string">&quot;#&quot;</span>+col);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="移动算法"><a href="#移动算法" class="headerlink" title="移动算法"></a>移动算法</h4><p>移动算法相对就比较简单了，我只需要对每一列从下往上遍历，当遍历中发现方块不为null时（即这个点有方块），我们就以这个方块为起点，对这一列往下遍历，在子循环中，如果下方为null时（即下方没有方块），这个方块就向下移动一个单位，一直循环到下方见底，或者下方遇到方块，才会停止。这个算法相对简单，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">5</span>; col++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">5</span>; row++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.tiles[row][col] != <span class="literal">null</span>) &#123;<span class="comment">// 有方块</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> row1 = row; row1 &gt; <span class="number">0</span>; row1--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.tiles[row1 - <span class="number">1</span>][col] == <span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//如果没有向下移动</span></span><br><span class="line">                    <span class="built_in">this</span>.tiles[row1 - <span class="number">1</span>][col] = <span class="built_in">this</span>.tiles[row1][col];</span><br><span class="line">                    <span class="built_in">this</span>.tiles[row1][col] = <span class="literal">null</span>;</span><br><span class="line">                    <span class="built_in">this</span>.tiles[row1 - <span class="number">1</span>][col].getComponent(<span class="string">&quot;Tile&quot;</span>).moveTo(row1 - <span class="number">1</span>, col);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方块类"><a href="#方块类" class="headerlink" title="方块类"></a>方块类</h4><p>方块类我们通过Creator的预制资源来制作，如下图所示：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/tile.png" alt="tile图"><br>在Tile预制资源中，我们只需要一个背景层，和一个显示数字的Label即可，其背景层的颜色和数字显示都通过脚本来控制，方块需要包含以下几个方法：<br>1.产生新方块的初始化及特效<br>2.移动到指定点的逻辑及特效<br>3.方块销毁的逻辑及特效<br>4.设置方块数字以及动态改变其背景色<br>5.在方块的初始化onLoad函数中，需要对方块添加TOUCH_START事件，事件中绑定上面提到的4方法，方块类的具体实现代码如下：<br>1.方块初始化函数<br>添加触摸点击事件，绑定设置数字函数，清空combo次数（combo次数记录放在全局组件Global中）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    <span class="built_in">this</span>.node.on(cc.Node.EventType.TOUCH_START,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!self.game.isCal)&#123;</span><br><span class="line">            cc.audioEngine.playEffect(self.clickEffect);</span><br><span class="line">            self.game.isCal = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// 连击次数归零</span></span><br><span class="line">            Global.combo = <span class="number">0</span>;</span><br><span class="line">            cc.audioEngine.playEffect(<span class="built_in">this</span>.addCoin);</span><br><span class="line">            self.setNum(<span class="built_in">parseInt</span>(self.numLabel.string)+<span class="number">1</span>,<span class="literal">true</span>,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="built_in">this</span>.node);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.产生新方块<br>执行从小变大的动画，设置数组中的行列到属性中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">newTile:<span class="function"><span class="keyword">function</span>(<span class="params">row,col</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.node.setPosition(<span class="number">5</span>+(<span class="number">5</span>+<span class="built_in">this</span>.node.width)*col+<span class="built_in">this</span>.node.width/<span class="number">2</span>,<span class="number">5</span>+(<span class="number">5</span>+<span class="built_in">this</span>.node.height)*row+<span class="built_in">this</span>.node.height/<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.node.setScale(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">this</span>.node.runAction(cc.scaleTo(<span class="number">0.1</span>,<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">this</span>.setArrPosition(row,col);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.移动到指定点<br>执行移动动画，设置数组中行列到属性中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">moveTo:<span class="function"><span class="keyword">function</span>(<span class="params">row,col</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.row = row;</span><br><span class="line">    <span class="built_in">this</span>.col = col;</span><br><span class="line">    <span class="built_in">this</span>.node.stopActionByTag(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> action = cc.moveTo(<span class="number">0.2</span>,cc.p(<span class="number">5</span>+(<span class="number">5</span>+<span class="built_in">this</span>.node.width)*col+<span class="built_in">this</span>.node.width/<span class="number">2</span>,<span class="number">5</span>+(<span class="number">5</span>+<span class="built_in">this</span>.node.height)*row+<span class="built_in">this</span>.node.height/<span class="number">2</span>));</span><br><span class="line">    <span class="built_in">this</span>.node.runAction(action);</span><br><span class="line">    action.setTag(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.方块销毁<br>执行从大变小的动画，执行完动画之后调用destory方法销毁方块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">destoryTile:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> action = cc.sequence(cc.scaleTo(<span class="number">0.1</span>,<span class="number">0</span>),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</span><br><span class="line">        node.destroy();</span><br><span class="line">    &#125;,<span class="built_in">this</span>.node,<span class="built_in">this</span>.node));</span><br><span class="line">    <span class="built_in">this</span>.node.runAction(action);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.设置方块数字<br>设置方块的显示数字，并动态改变相应数字对应的颜色，颜色存在全局组件变量Colors中，通过参数exeLogic判断是否需要执行游戏的消除逻辑，通过playEffect判断是否需要播放音效</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">setNum:<span class="function"><span class="keyword">function</span>(<span class="params">num,exeLogic,playEffect</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.game.maxNum = num&gt;<span class="built_in">this</span>.game.maxNum?num:<span class="built_in">this</span>.game.maxNum;</span><br><span class="line">    <span class="built_in">this</span>.numLabel.string = num;</span><br><span class="line">    <span class="keyword">switch</span>(num)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num1;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num2;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num3;</span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num4;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num5;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num6;</span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num7;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num8;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num9;</span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num10;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num11;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num12;</span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num13;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num14;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num15;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num16;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num17;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num18;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">19</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num19;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.num20;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">this</span>.node.color = Colors.nums;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 播放特效</span></span><br><span class="line">    <span class="keyword">if</span>(playEffect)&#123;</span><br><span class="line">        <span class="built_in">this</span>.node.runAction(cc.sequence(cc.scaleTo(<span class="number">0.15</span>,<span class="number">1.5</span>),cc.scaleTo(<span class="number">0.15</span>,<span class="number">1</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 消除逻辑</span></span><br><span class="line">    <span class="keyword">if</span>(exeLogic)&#123;</span><br><span class="line">        <span class="comment">// 执行逻辑</span></span><br><span class="line">        <span class="keyword">var</span> isMove = <span class="built_in">this</span>.game.operateLogic(<span class="built_in">this</span>.row,<span class="built_in">this</span>.col,<span class="built_in">parseInt</span>(<span class="built_in">this</span>.numLabel.string),<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">var</span> powers = <span class="built_in">this</span>.game.powers;</span><br><span class="line">        <span class="comment">// 能量条-1</span></span><br><span class="line">        <span class="keyword">if</span>(!isMove)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = powers.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="keyword">if</span>(powers[i]!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> costBarAction = cc.sequence(cc.scaleTo(<span class="number">0.1</span>,<span class="number">0</span>),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">power</span>)</span>&#123;</span><br><span class="line">                        power.destroy();</span><br><span class="line">                    &#125;,<span class="literal">null</span>,powers[i]));</span><br><span class="line">                    powers[i].runAction(costBarAction);</span><br><span class="line">                    powers[i] = <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 游戏结束逻辑判断：能量条为空</span></span><br><span class="line">            <span class="keyword">if</span>(powers[<span class="number">0</span>]==<span class="literal">null</span>)&#123;</span><br><span class="line">                Global.score = <span class="built_in">this</span>.game.scoreNum.string;</span><br><span class="line">                <span class="comment">// Game Over</span></span><br><span class="line">                cc.director.loadScene(<span class="string">&quot;overScene&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="能量类"><a href="#能量类" class="headerlink" title="能量类"></a>能量类</h4><p>同方块类，我们将游戏场景中的能量条也做成预制资源，其中只需要添加一个背景层就可以，背景层也是通过代码动态控制颜色，能量条不需要任何脚本文件。</p><h4 id="开始场景"><a href="#开始场景" class="headerlink" title="开始场景"></a>开始场景</h4><p>做好了预制资源之后，我们就可以先做开始场景了，效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/startScene.png" alt="startScene图"><br>开始场景中有三个元素，游戏文字，开始按钮，和背景层，其中游戏文字呈现一个变大变小循环播放的动画，点击开始游戏按钮即可转入游戏场景。具体代码如下：<br>1.onLoad加载<br>动态设置元素的位置及宽高，以适配各种型号手机屏幕</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 背景铺平</span></span><br><span class="line">    <span class="built_in">this</span>.bg.width = cc.winSize.width;</span><br><span class="line">    <span class="built_in">this</span>.bg.height = cc.winSize.height;</span><br><span class="line">    <span class="built_in">this</span>.bg.setPosition(<span class="built_in">this</span>.bg.width/<span class="number">2</span>,<span class="built_in">this</span>.bg.height/<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.bg.color = Colors.startBg;</span><br><span class="line">    <span class="comment">// 设置文字</span></span><br><span class="line">    <span class="keyword">var</span> action = cc.repeatForever(cc.sequence(cc.scaleTo(<span class="number">1</span>, <span class="number">1.5</span>),cc.scaleTo(<span class="number">1</span>,<span class="number">1</span>)));</span><br><span class="line">    <span class="built_in">this</span>.gameName.runAction(action);</span><br><span class="line">    <span class="built_in">this</span>.gameName.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 设置按钮</span></span><br><span class="line">    <span class="built_in">this</span>.startBtn.setPosition(<span class="built_in">this</span>.gameName.getPositionX(),<span class="built_in">this</span>.gameName.getPositionY()<span class="number">-210</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.开始游戏按钮回调<br>点击进入游戏场景</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">startGame:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    cc.audioEngine.playEffect(<span class="built_in">this</span>.btnEffect);</span><br><span class="line">    cc.director.loadScene(<span class="string">&quot;gameScene&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结束场景"><a href="#结束场景" class="headerlink" title="结束场景"></a>结束场景</h4><p>结束场景与开始场景差不多，相比之下，结束场景主要是提供游戏分数特效呈现的功能，效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/overScene.png" alt="overScene图"><br>结束场景也是几个Label，一个背景层和一个Button按钮组成，其中最重要的是分数特效，通过从0一直往上加，加到实际分数的特效，来使玩家获得成就感，具体代码如下：<br>1.加载函数<br>动态设置场景中元素的宽高及位置，播放分数计算特效，绑定TOUCH_START事件，使特效立即播放完成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 背景层</span></span><br><span class="line">    <span class="built_in">this</span>.bg.width = cc.winSize.width;</span><br><span class="line">    <span class="built_in">this</span>.bg.height = cc.winSize.height;</span><br><span class="line">    <span class="built_in">this</span>.bg.setPosition(<span class="built_in">this</span>.bg.width/<span class="number">2</span>,<span class="built_in">this</span>.bg.height/<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.bg.color = Colors.overBg;</span><br><span class="line">    <span class="comment">// 文字层</span></span><br><span class="line">    <span class="built_in">this</span>.gameText.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">var</span> action = cc.repeatForever(cc.sequence(cc.scaleTo(<span class="number">1</span>, <span class="number">1.5</span>),cc.scaleTo(<span class="number">1</span>,<span class="number">1</span>)));</span><br><span class="line">    <span class="built_in">this</span>.gameText.runAction(action);</span><br><span class="line">    <span class="comment">// 播放结束音效</span></span><br><span class="line">    cc.audioEngine.playEffect(<span class="built_in">this</span>.overEffect);</span><br><span class="line">    <span class="comment">// 分数</span></span><br><span class="line">    <span class="built_in">this</span>.scoreText.setPosition(<span class="built_in">this</span>.gameText.getPositionX(),<span class="built_in">this</span>.gameText.getPositionY()+<span class="number">200</span>);</span><br><span class="line">    <span class="built_in">this</span>.score = Global.score;</span><br><span class="line">    <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.updateScore,<span class="number">0.1</span>,cc.REPEAT_FOREVER,<span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 点击分数立即加到最高分数</span></span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    <span class="built_in">this</span>.bg.on(cc.Node.EventType.TOUCH_START,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        cc.log(<span class="string">&quot;score text touch&quot;</span>);</span><br><span class="line">        cc.audioEngine.playEffect(self.addCoin);</span><br><span class="line">        self.changeScore = self.score;</span><br><span class="line">        self.scoreLabel.string = <span class="string">&quot;最终分数：&quot;</span>+self.changeScore;</span><br><span class="line">    &#125;, <span class="built_in">this</span>.bg);</span><br><span class="line">    <span class="comment">// 返回按钮</span></span><br><span class="line">    <span class="built_in">this</span>.backBtn.setPosition(<span class="built_in">this</span>.gameText.getPositionX(),<span class="built_in">this</span>.gameText.getPositionY()<span class="number">-200</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.更新分数回调<br>每一次更新分数回调，将特效分数增加20，直到加满到游戏得分，并将这一过程显示在场景的Label中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">updateScore()&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">this</span>.score&lt;=<span class="built_in">this</span>.changeScore)&#123;</span><br><span class="line">        <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.updateScore);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.changeScore += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">this</span>.changeScore = <span class="built_in">this</span>.changeScore&gt;<span class="built_in">this</span>.score?<span class="built_in">this</span>.score:<span class="built_in">this</span>.changeScore;</span><br><span class="line">    <span class="comment">// 添加音效</span></span><br><span class="line">    cc.audioEngine.playEffect(<span class="built_in">this</span>.addCoin);</span><br><span class="line">    <span class="built_in">this</span>.scoreLabel.string = <span class="string">&quot;最终分数：&quot;</span>+<span class="built_in">this</span>.changeScore;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.返回按钮回调<br>游戏分数的全局变量归零，切换加载开始游戏的场景</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">back:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    Global.score = <span class="number">0</span>;</span><br><span class="line">    cc.audioEngine.playEffect(<span class="built_in">this</span>.btnEffect);</span><br><span class="line">    cc.director.loadScene(<span class="string">&quot;startScene&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="游戏场景"><a href="#游戏场景" class="headerlink" title="游戏场景"></a>游戏场景</h4><p>最主要的还是游戏场景，在游戏场景中，我们进行所有的游戏逻辑的运算，包括前面提到的两个核心算法，游戏场景的效果图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/gameScene.png" alt="gameScene图"><br>在游戏主场景中，我们主要需要在onLoad加载时，初始化25个方块，并放在地图中，使他们之间相邻个数小于3个，然后我们需要提供一个主要逻辑判断函数，这个函数中判断游戏中方块的消除逻辑，再前面的Tile的setNum函数中进行调用，代码如下：<br>1.场景加载<br>在场景加载中，我们需要初始化25个互相相邻小于3个的方块，与5个能量条，并且动态设置所有元素的宽高与位置。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 播放背景音乐</span></span><br><span class="line">    cc.audioEngine.playMusic(<span class="built_in">this</span>.bgMusic,<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 初始化方块数组</span></span><br><span class="line">    <span class="built_in">this</span>.tiles = [</span><br><span class="line">        [<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>],</span><br><span class="line">        [<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>],</span><br><span class="line">        [<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>],</span><br><span class="line">        [<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>],</span><br><span class="line">        [<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>]</span><br><span class="line">    ];</span><br><span class="line">    <span class="built_in">this</span>.powers = [<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>];</span><br><span class="line">    <span class="comment">// 背景层</span></span><br><span class="line">    <span class="built_in">this</span>.bg.width = cc.winSize.width;</span><br><span class="line">    <span class="built_in">this</span>.bg.height = cc.winSize.height;</span><br><span class="line">    <span class="built_in">this</span>.bg.setPosition(-cc.winSize.width/<span class="number">2</span>,-cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.bg.color = Colors.gameBg;</span><br><span class="line">    <span class="comment">// 顶部背景层</span></span><br><span class="line">    <span class="built_in">this</span>.topBg.width = cc.winSize.width<span class="number">-30</span>;</span><br><span class="line">    <span class="built_in">this</span>.topBg.height = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">this</span>.topBg.setPosition(-cc.winSize.width/<span class="number">2</span>+<span class="number">15</span>,(cc.winSize.width<span class="number">-30</span>)/<span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 能量条背景层</span></span><br><span class="line">    <span class="built_in">this</span>.powerBarBg.width = cc.winSize.width<span class="number">-30</span>;</span><br><span class="line">    <span class="built_in">this</span>.powerBarBg.height = <span class="built_in">this</span>.powerBarBg.width/<span class="number">5</span>/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">this</span>.powerBarBg.setPosition(<span class="number">15</span>-cc.winSize.width/<span class="number">2</span>,<span class="built_in">this</span>.topBg.getPositionY()<span class="number">-200</span>);</span><br><span class="line">    <span class="built_in">this</span>.powerBarBg.color = Colors.powerBarBg;</span><br><span class="line">    <span class="comment">// 方块背景层</span></span><br><span class="line">    <span class="built_in">this</span>.tileBg.width = cc.winSize.width<span class="number">-30</span>;</span><br><span class="line">    <span class="built_in">this</span>.tileBg.height = <span class="built_in">this</span>.tileBg.width;</span><br><span class="line">    <span class="built_in">this</span>.tileBg.setPosition(<span class="number">15</span>-cc.winSize.width/<span class="number">2</span>,<span class="built_in">this</span>.powerBarBg.getPositionY()<span class="number">-10</span>-<span class="built_in">this</span>.tileBg.height);</span><br><span class="line">    <span class="built_in">this</span>.tileBg.color = Colors.tileBg;</span><br><span class="line">    <span class="comment">// 生成能量条</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> power = cc.instantiate(<span class="built_in">this</span>.powerPre);</span><br><span class="line">        power.width = (<span class="built_in">this</span>.powerBarBg.width<span class="number">-30</span>)/<span class="number">5</span>;</span><br><span class="line">        power.height = <span class="built_in">this</span>.powerBarBg.height<span class="number">-10</span>;</span><br><span class="line">        <span class="built_in">this</span>.powerBarBg.addChild(power);</span><br><span class="line">        power.setPosition(<span class="number">5</span>+(<span class="number">5</span>+power.width)*i+power.width/<span class="number">2</span>,<span class="number">5</span>+power.height/<span class="number">2</span>);</span><br><span class="line">        power.color = Colors.power;</span><br><span class="line">        <span class="built_in">this</span>.powers[i] = power;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 生成初始方块</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> row=<span class="number">0</span>;row&lt;<span class="number">5</span>;row++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> col = <span class="number">0</span>;col&lt;<span class="number">5</span>;col++)&#123;</span><br><span class="line">            <span class="keyword">var</span> tile = cc.instantiate(<span class="built_in">this</span>.tilePre);</span><br><span class="line">            tile.getComponent(<span class="string">&quot;Tile&quot;</span>).game = <span class="built_in">this</span>;</span><br><span class="line">            tile.width = (<span class="built_in">this</span>.tileBg.width<span class="number">-30</span>)/<span class="number">5</span>;</span><br><span class="line">            tile.height = (<span class="built_in">this</span>.tileBg.height<span class="number">-30</span>)/<span class="number">5</span>;</span><br><span class="line">            <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> maxRandom = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">var</span> randomNum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">                <span class="keyword">var</span> scanArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">                <span class="keyword">if</span>(count&gt;<span class="number">10</span>)&#123;</span><br><span class="line">                    maxRandom++;</span><br><span class="line">                &#125;</span><br><span class="line">                randomNum = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*maxRandom);</span><br><span class="line">                tile.getComponent(<span class="string">&quot;Tile&quot;</span>).setNum(randomNum,<span class="literal">false</span>,<span class="literal">false</span>);</span><br><span class="line">                tile.setPosition(<span class="number">5</span>+(<span class="number">5</span>+tile.width)*col+tile.width/<span class="number">2</span>,<span class="number">5</span>+(<span class="number">5</span>+tile.height)*row+tile.height/<span class="number">2</span>);</span><br><span class="line">                <span class="built_in">this</span>.tiles[row][col] = tile;</span><br><span class="line">                <span class="built_in">this</span>.scanAround(row,col,<span class="number">-1</span>,<span class="number">-1</span>,randomNum,arr,scanArr);</span><br><span class="line">                <span class="keyword">if</span>(arr.length&lt;<span class="number">3</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            tile.getComponent(<span class="string">&quot;Tile&quot;</span>).setArrPosition(row,col);</span><br><span class="line">            <span class="built_in">this</span>.tileBg.addChild(tile);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.扫描逻辑<br>前面已经讲过<br>3.主要操作逻辑<br>在这个函数中，我们需要对指定的点进行扫描，如果相邻数超过三个，则进行合成动作，然后更新分数，将所有的方块向下移动填补，并补充一条能量条，增加连击次数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">operateLogic:<span class="function"><span class="keyword">function</span>(<span class="params">touchRow,touchCol,curNum,isFirstCall</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">var</span> scanArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="built_in">this</span>.scanAround(touchRow,touchCol,<span class="number">-1</span>,<span class="number">-1</span>,curNum,arr,scanArr);</span><br><span class="line">    <span class="keyword">if</span>(arr.length&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> addScore = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> index <span class="keyword">in</span> arr)&#123;</span><br><span class="line">            <span class="keyword">var</span> row = arr[index].split(<span class="string">&quot;#&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">var</span> col = arr[index].split(<span class="string">&quot;#&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">            addScore += <span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row][col].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string*<span class="number">10</span>);</span><br><span class="line">            <span class="keyword">if</span>(row!=touchRow||col!=touchCol)&#123;</span><br><span class="line">                <span class="comment">// 执行销毁动作                    </span></span><br><span class="line">                <span class="built_in">this</span>.tiles[row][col].getComponent(<span class="string">&quot;Tile&quot;</span>).destoryTile();</span><br><span class="line">                <span class="built_in">this</span>.tiles[row][col] = <span class="literal">null</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.tiles[row][col].getComponent(<span class="string">&quot;Tile&quot;</span>).setNum(curNum+<span class="number">1</span>,<span class="literal">false</span>,<span class="literal">true</span>);</span><br><span class="line">                <span class="built_in">this</span>.maxNum = curNum+<span class="number">1</span>&gt;<span class="built_in">this</span>.maxNum?curNum+<span class="number">1</span>:<span class="built_in">this</span>.maxNum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新分数</span></span><br><span class="line">        <span class="built_in">this</span>.scoreNum.string = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.scoreNum.string)+addScore;</span><br><span class="line">        <span class="built_in">this</span>.scheduleOnce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 0.1s后所有方块向下移动</span></span><br><span class="line">            <span class="built_in">this</span>.moveAllTileDown();</span><br><span class="line">        &#125;,<span class="number">0.1</span>);</span><br><span class="line">        <span class="keyword">if</span>(!isFirstCall)&#123;</span><br><span class="line">            <span class="comment">// 能量条补充一格</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.powers[i]==<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> power = cc.instantiate(<span class="built_in">this</span>.powerPre);</span><br><span class="line">                    power.width = (<span class="built_in">this</span>.powerBarBg.width<span class="number">-30</span>)/<span class="number">5</span>;</span><br><span class="line">                    power.height = <span class="built_in">this</span>.powerBarBg.height<span class="number">-10</span>;</span><br><span class="line">                    <span class="built_in">this</span>.powerBarBg.addChild(power);</span><br><span class="line">                    power.setPosition(<span class="number">5</span>+(<span class="number">5</span>+power.width)*i+power.width/<span class="number">2</span>,<span class="number">5</span>+power.height/<span class="number">2</span>);</span><br><span class="line">                    power.color = Colors.power;</span><br><span class="line">                    power.setScale(<span class="number">0</span>);</span><br><span class="line">                    power.runAction(cc.scaleTo(<span class="number">0.1</span>,<span class="number">1</span>));</span><br><span class="line">                    <span class="built_in">this</span>.powers[i] = power;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 连击次数+1</span></span><br><span class="line">        Global.combo++;</span><br><span class="line">        <span class="comment">// cc.log(&quot;连击次数：&quot;+Global.combo);</span></span><br><span class="line">        <span class="comment">// 播放音效</span></span><br><span class="line">        <span class="keyword">switch</span>(Global.combo)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star1);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star2);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star3);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star4);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star5);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star6);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star7);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                cc.audioEngine.playEffect(<span class="built_in">this</span>.star7);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.isCal = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.所有方块向下移动<br>除了上文提到所有方块的移动算法之外，在移动完成之后，还需要进行新产生一批方块，并再次判断消除逻辑的操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">moveAllTileDown:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">5</span>; col++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">5</span>; row++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.tiles[row][col] != <span class="literal">null</span>) &#123;<span class="comment">// 有方块</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> row1 = row; row1 &gt; <span class="number">0</span>; row1--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.tiles[row1 - <span class="number">1</span>][col] == <span class="literal">null</span>)&#123;</span><br><span class="line">                        <span class="comment">//如果没有向下移动</span></span><br><span class="line">                        <span class="built_in">this</span>.tiles[row1 - <span class="number">1</span>][col] = <span class="built_in">this</span>.tiles[row1][col];</span><br><span class="line">                        <span class="built_in">this</span>.tiles[row1][col] = <span class="literal">null</span>;</span><br><span class="line">                        <span class="built_in">this</span>.tiles[row1 - <span class="number">1</span>][col].getComponent(<span class="string">&quot;Tile&quot;</span>).moveTo(row1 - <span class="number">1</span>, col);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.scheduleOnce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 0.3s后生成新方块</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">5</span>; col++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">5</span>; row++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.tiles[row][col]==<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> tile = cc.instantiate(<span class="built_in">this</span>.tilePre);</span><br><span class="line">                    tile.getComponent(<span class="string">&quot;Tile&quot;</span>).game = <span class="built_in">this</span>;</span><br><span class="line">                    tile.width = (<span class="built_in">this</span>.tileBg.width<span class="number">-30</span>)/<span class="number">5</span>;</span><br><span class="line">                    tile.height = (<span class="built_in">this</span>.tileBg.height<span class="number">-30</span>)/<span class="number">5</span>;</span><br><span class="line">                    <span class="keyword">var</span> maxRandom = <span class="built_in">this</span>.maxNum;</span><br><span class="line">                    <span class="keyword">var</span> randomNum = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*maxRandom);</span><br><span class="line">                    tile.getComponent(<span class="string">&quot;Tile&quot;</span>).setNum(randomNum,<span class="literal">false</span>,<span class="literal">false</span>);</span><br><span class="line">                    tile.getComponent(<span class="string">&quot;Tile&quot;</span>).newTile(row,col);</span><br><span class="line">                    <span class="built_in">this</span>.tiles[row][col] = tile;</span><br><span class="line">                    <span class="built_in">this</span>.tileBg.addChild(tile);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 0.5s后遍历执行逻辑</span></span><br><span class="line">        <span class="built_in">this</span>.scheduleOnce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> isSearch = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">5</span>; col++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">5</span>; row++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(!isSearch)&#123;</span><br><span class="line">                        isSearch = <span class="built_in">this</span>.tiles[row][col]!=<span class="literal">null</span>&amp;&amp;<span class="built_in">this</span>.operateLogic(row,col,<span class="built_in">parseInt</span>(<span class="built_in">this</span>.tiles[row][col].getComponent(<span class="string">&quot;Tile&quot;</span>).numLabel.string),<span class="literal">false</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">0.5</span>);        </span><br><span class="line">     &#125;, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p>最后的运行效果如下<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/addone.gif" alt="点我+1效果图"><br>通过CVP平台的项目托管可看到实际运行效果，地址如下：</p><ul><li>由于个人对Cocos Creator的适配还不大了解，在pc上运行时，需要使用chrome的手机调试预览（或者将chrome窗口调至手机屏幕大小），但是如果直接用手机打开，loadScene似乎又有不兼容的问题，至今无法理解，还请大神指点，而我无论是开发时的预览，还是通过xcode打包到我的iPhone6s Plus手机运行，都是完全没有问题。不知道是不是Creator的h5兼容还没有做好，又或者我哪里的技术没有掌握全面。<br><a href="http://www.cocoscvp.com/usercode/946fc5fd5d2c77331cc344ea1e4bfdd04630cf85/">http://www.cocoscvp.com/usercode/946fc5fd5d2c77331cc344ea1e4bfdd04630cf85/</a></li></ul><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>所有源代码均上传到github，欢迎交流学习，地址：<br><a href="https://github.com/hjcenry/addone">https://github.com/hjcenry/addone</a></p><ul><li>原文博客：<a href="http://hjcenry.github.io/">http://hjcenry.github.io</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在学习Cocos中，需要一些东西来练手，于是前段时间就开发仿照一款公司之前的产品《点我+1》来做，仿照过程中，所有的算法逻辑都是自己研究的，并没有参考公司代码，也没有使用公司的美术资源，所以也就不存在公司机密的内容啦，完全只是学习练习而已。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
    <category term="点我+1" scheme="http://www.hjcenry.com/tags/%E7%82%B9%E6%88%91-1/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-JS实现的2048</title>
    <link href="http://www.hjcenry.com/2016/06/19/Cocos2d-JS%E5%AE%9E%E7%8E%B0%E7%9A%842048/"/>
    <id>http://www.hjcenry.com/2016/06/19/Cocos2d-JS%E5%AE%9E%E7%8E%B0%E7%9A%842048/</id>
    <published>2016-06-19T14:29:00.000Z</published>
    <updated>2020-09-29T03:25:11.718Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>2048是之前火过一段时间的休闲数字消除类游戏，它的玩法很简单，上手很容易，可是想到要得到高分却很难，看似简单的游戏却有着很多得分的技巧，想当初这个游戏也曾是陪伴我大学课堂的游戏之一。<a id="more"></a>虽然在得分上有着很多的技巧，但对于开发来说，这其实是一件相当容易的事情，仔细分析之后就可能大概理清楚这种消除游戏的逻辑。</p><h3 id="游戏分析"><a href="#游戏分析" class="headerlink" title="游戏分析"></a>游戏分析</h3><p>这款游戏仔细想想就差不多清楚它的大致的思路，游戏中只有方块这一个我们操作的对象，这个对象包含了所在行，所在列，以及方块显示的数字三个属性，这三个属性足以表达游戏中的所有效果。除了方块，其他的就是游戏中必不可少的背景图层，开始及结束场景等。由于游戏中需要将4x4的方块们整齐排列，因此还需要一个四行四列的表格，来呈现我们的游戏效果。</p><h3 id="滑动逻辑"><a href="#滑动逻辑" class="headerlink" title="滑动逻辑"></a>滑动逻辑</h3><p>游戏中最主要的操作就是通过手指触摸屏幕进行滑屏操作，带动场景中的方块整体移动，并且遇到相同数字的方块进行合并。滑动的逻辑就是遍历场景中所有的方块，每一个方块在滑动方向进行移动，如果前方没有方块，方块就一直滑动，如果前方有方块，判断自己的数字与这个方块的数字是否相同，相同进行合并操作，不相同则停在当前位置。</p><h3 id="游戏实现"><a href="#游戏实现" class="headerlink" title="游戏实现"></a>游戏实现</h3><p>在对游戏逻辑进行了分析之后，就可以用代码进行实现了，编码，其实就是一个将游戏逻辑转换为机器语言的过程而已。</p><h4 id="方块类"><a href="#方块类" class="headerlink" title="方块类"></a>方块类</h4><p>首先，我们需要一个类来存储方块的长度和宽度，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存方块长度方块</span></span><br><span class="line"><span class="keyword">var</span> tile = &#123;</span><br><span class="line">    width: <span class="number">0</span>,</span><br><span class="line">    height: <span class="number">0</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>方块类是对场景中可操的方块的封装，包括所在行，所在列，显示数字三个属性，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Tiled = cc.Node.extend(&#123;</span><br><span class="line">    num: <span class="number">0</span>,</span><br><span class="line">    col: <span class="number">0</span>,</span><br><span class="line">    row: <span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然仅仅有以上三个属性是不够的，我们还需要在方块的构造函数中绘制方块的背景、绘制方块显示的数字、以及随机设定方块的行列坐标。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Tiled = cc.Node.extend(&#123;</span><br><span class="line">    num: <span class="number">0</span>,</span><br><span class="line">    col: <span class="number">0</span>,</span><br><span class="line">    row: <span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.num = num;</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="built_in">this</span>.row = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">4</span>);</span><br><span class="line">            <span class="built_in">this</span>.col = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">if</span> (tiles[<span class="built_in">this</span>.row][<span class="built_in">this</span>.col] == <span class="literal">null</span>) &#123;</span><br><span class="line">                tiles[<span class="built_in">this</span>.row][<span class="built_in">this</span>.col] = <span class="built_in">this</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (count &gt;= <span class="number">16</span>) &#123;<span class="comment">// 格子满了</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 绘制背景</span></span><br><span class="line">        <span class="keyword">var</span> bg = <span class="keyword">new</span> cc.DrawNode();</span><br><span class="line">        bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">255</span>, <span class="number">209</span>, <span class="number">145</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">255</span>, <span class="number">209</span>, <span class="number">145</span>, <span class="number">255</span>));</span><br><span class="line">        <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">        bg.setTag(<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 绘制数字</span></span><br><span class="line">        <span class="keyword">var</span> labelNum = <span class="keyword">new</span> cc.LabelTTF();</span><br><span class="line">        labelNum.setString(<span class="string">&quot;&quot;</span> + <span class="built_in">this</span>.num);</span><br><span class="line">        labelNum.setFontSize(<span class="number">60</span>);</span><br><span class="line">        <span class="comment">// 字体描边效果</span></span><br><span class="line">        <span class="comment">// labelNum.enableStroke(cc.color.BLACK, 0);</span></span><br><span class="line">        <span class="built_in">this</span>.addChild(labelNum);</span><br><span class="line">        labelNum.setTag(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 设定字体和坐标</span></span><br><span class="line">        labelNum.setPosition(tile.width / <span class="number">2</span>, tile.height / <span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 移动块</span></span><br><span class="line">        <span class="built_in">this</span>.newTile(<span class="built_in">this</span>.row, <span class="built_in">this</span>.col);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除此之外，每个方块应该还要包含一个newTile方法、moveTo方法和updateNum方法，分别封装随机创建方块、移动方块和更新方块数字三个功能。<br>在updateNum方法中，我们主要做两件事，更新方块显示数字和更新方块背景颜色（在方块的背景色上，我还专门上网搜了几种颜色搭配，恩，感觉很有艺术美，哈哈），代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">updateNum: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>).setString(<span class="string">&quot;&quot;</span> + <span class="built_in">this</span>.num);</span><br><span class="line">    <span class="keyword">var</span> bg = <span class="built_in">this</span>.getChildByTag(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="built_in">this</span>.num) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">235</span>, <span class="number">245</span>, <span class="number">223</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">235</span>, <span class="number">245</span>, <span class="number">223</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">186</span>, <span class="number">212</span>, <span class="number">170</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">186</span>, <span class="number">212</span>, <span class="number">170</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">212</span>, <span class="number">212</span>, <span class="number">170</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">212</span>, <span class="number">212</span>, <span class="number">170</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">193</span>, <span class="number">160</span>, <span class="number">117</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">193</span>, <span class="number">160</span>, <span class="number">117</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">32</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">124</span>, <span class="number">99</span>, <span class="number">84</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">124</span>, <span class="number">99</span>, <span class="number">84</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">64</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">218</span>, <span class="number">227</span>, <span class="number">224</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">218</span>, <span class="number">227</span>, <span class="number">224</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">128</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">64</span>, <span class="number">125</span>, <span class="number">148</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">64</span>, <span class="number">125</span>, <span class="number">148</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">256</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">123</span>, <span class="number">118</span>, <span class="number">135</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">123</span>, <span class="number">118</span>, <span class="number">135</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">512</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">172</span>, <span class="number">173</span>, <span class="number">172</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">172</span>, <span class="number">173</span>, <span class="number">172</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1024</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">204</span>, <span class="number">196</span>, <span class="number">194</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">204</span>, <span class="number">196</span>, <span class="number">194</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2048</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">199</span>, <span class="number">225</span>, <span class="number">240</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">199</span>, <span class="number">225</span>, <span class="number">240</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4096</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">150</span>, <span class="number">196</span>, <span class="number">230</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">150</span>, <span class="number">196</span>, <span class="number">230</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8192</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">25</span>, <span class="number">77</span>, <span class="number">91</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">25</span>, <span class="number">77</span>, <span class="number">91</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">16384</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">229</span>, <span class="number">96</span>, <span class="number">205</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">229</span>, <span class="number">96</span>, <span class="number">205</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">32768</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">250</span>, <span class="number">174</span>, <span class="number">78</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">250</span>, <span class="number">174</span>, <span class="number">78</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">65536</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">255</span>, <span class="number">241</span>, <span class="number">222</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">255</span>, <span class="number">241</span>, <span class="number">222</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            bg.drawRect(cc.p(<span class="number">5</span>, <span class="number">5</span>), cc.p(tile.width - <span class="number">5</span>, tile.height - <span class="number">5</span>), cc.color(<span class="number">255</span>, <span class="number">209</span>, <span class="number">145</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">255</span>, <span class="number">209</span>, <span class="number">145</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方块的移动方法和创建方法，我在这里先写成一样，因为还没有对方块的创建和移动做区别，如果要做优化，可以在移动时加入移动的动画，在创建加入创建的动画，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">moveTo: <span class="function"><span class="keyword">function</span> (<span class="params">row, col</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.row = row;</span><br><span class="line">    <span class="built_in">this</span>.col = col;</span><br><span class="line">    <span class="built_in">this</span>.setPositionX((cc.winSize.width - tile.width * <span class="number">4</span>) / <span class="number">2</span> + tile.width * <span class="built_in">this</span>.col);</span><br><span class="line">    <span class="built_in">this</span>.setPositionY((cc.winSize.height - tile.height * <span class="number">4</span>) / <span class="number">2</span> + tile.height * <span class="built_in">this</span>.row);</span><br><span class="line">&#125;,</span><br><span class="line">newTile: <span class="function"><span class="keyword">function</span> (<span class="params">row, col</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.row = row;</span><br><span class="line">    <span class="built_in">this</span>.col = col;</span><br><span class="line">    <span class="built_in">this</span>.setPositionX((cc.winSize.width - tile.width * <span class="number">4</span>) / <span class="number">2</span> + tile.width * <span class="built_in">this</span>.col);</span><br><span class="line">    <span class="built_in">this</span>.setPositionY((cc.winSize.height - tile.height * <span class="number">4</span>) / <span class="number">2</span> + tile.height * <span class="built_in">this</span>.row);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="游戏场景类"><a href="#游戏场景类" class="headerlink" title="游戏场景类"></a>游戏场景类</h4><p>所有的游戏操作及操作反馈都在游戏场景类中进行，游戏场景类将封装好的方块类放到游戏逻辑中，通过玩家操作给予一定的操作反馈。游戏场景类中主要接受玩家的滑动操作，并在接收到滑动操作后将所有的方块类进行移动或合并。<br>游戏场景类中需要isMove，startX，startY，以及tiles四个属性：第一个是控制玩家触摸操作的标识变量，避免重复调用移动方法；中间两个为记录玩家手指滑动的距离，当距离查过一定的长度之后，才判断玩家进行了滑动操作；最后一个变量是一个数组，用于存储在4x4的表格中的方块的信息。<br>有了以上四个属性之后，就可以在构造函数中进行初始化了，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tiles = <span class="literal">null</span>;<span class="comment">// 存储方块信息</span></span><br><span class="line"><span class="keyword">var</span> GameLayer = cc.Layer.extend(&#123;</span><br><span class="line">    isMove: <span class="literal">false</span>,</span><br><span class="line">    startX: <span class="number">0</span>,</span><br><span class="line">    startY: <span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.isMove = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">this</span>.startX = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.startY = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//设置块的宽高</span></span><br><span class="line">        <span class="keyword">if</span> (cc.winSize.width &lt; cc.winSize.height) &#123;</span><br><span class="line">            <span class="comment">// 竖屏</span></span><br><span class="line">            tile.width = cc.winSize.width / <span class="number">5</span>;</span><br><span class="line">            tile.height = cc.winSize.width / <span class="number">5</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 横屏</span></span><br><span class="line">            tile.width = cc.winSize.height / <span class="number">5</span>;</span><br><span class="line">            tile.height = cc.winSize.height / <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 初始化数组</span></span><br><span class="line">        tiles = [</span><br><span class="line">            [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>],</span><br><span class="line">            [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>],</span><br><span class="line">            [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>],</span><br><span class="line">            [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在初始化完之后，我们就可以在场景的onEnter方法中绘制场景了，绘制的内容包括游戏背景以及随机初始化两个方块，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>._super();</span><br><span class="line">    <span class="comment">// 绘制背景</span></span><br><span class="line">    <span class="built_in">this</span>.drawBg();</span><br><span class="line">    <span class="comment">// 绘制块</span></span><br><span class="line">    <span class="keyword">var</span> tile1 = <span class="keyword">new</span> Tiled(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">var</span> tile2 = <span class="keyword">new</span> Tiled(<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.addChild(tile1);</span><br><span class="line">    <span class="built_in">this</span>.addChild(tile2);</span><br><span class="line">    <span class="comment">//处理事件</span></span><br><span class="line">    cc.eventManager.addListener(&#123;</span><br><span class="line">        event: cc.EventListener.TOUCH_ONE_BY_ONE,</span><br><span class="line">        swallowTouches: <span class="literal">true</span>,</span><br><span class="line">        onTouchBegan: <span class="built_in">this</span>.touchbegan,</span><br><span class="line">        onTouchMoved: <span class="built_in">this</span>.touchmoved</span><br><span class="line">    &#125;, <span class="built_in">this</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中drawBg方法中，绘制了五条垂直直线以及五条水平直线，来作为方块所在的4x4的表格，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">drawBg: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//绘制背景</span></span><br><span class="line">    <span class="keyword">var</span> bgRect = <span class="keyword">new</span> cc.DrawNode();</span><br><span class="line">    bgRect.drawRect(cc.p(<span class="number">0</span>, <span class="number">0</span>), cc.p(cc.winSize.width, cc.winSize.height), cc.color(<span class="number">173</span>, <span class="number">140</span>, <span class="number">61</span>, <span class="number">255</span>), <span class="number">1</span>, cc.color(<span class="number">173</span>, <span class="number">140</span>, <span class="number">61</span>, <span class="number">255</span>));</span><br><span class="line">    <span class="built_in">this</span>.addChild(bgRect);</span><br><span class="line">    <span class="keyword">var</span> bg = <span class="keyword">new</span> cc.DrawNode();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; <span class="number">5</span>; n++) &#123;</span><br><span class="line">        bg.drawSegment(cc.p((cc.winSize.width - tile.width * <span class="number">4</span>) / <span class="number">2</span>, (cc.winSize.height - tile.height * <span class="number">4</span>) / <span class="number">2</span> + n * tile.width), cc.p(cc.winSize.width / <span class="number">2</span> + tile.width * <span class="number">2</span>, (cc.winSize.height - tile.height * <span class="number">4</span>) / <span class="number">2</span> + n * tile.width), <span class="number">5</span>,</span><br><span class="line">            cc.color(<span class="number">55</span>, <span class="number">62</span>, <span class="number">64</span>, <span class="number">255</span>));</span><br><span class="line">        bg.drawSegment(cc.p((cc.winSize.width - tile.width * <span class="number">4</span>) / <span class="number">2</span> + n * tile.width, (cc.winSize.height - tile.height * <span class="number">4</span>) / <span class="number">2</span>), cc.p((cc.winSize.width - tile.width * <span class="number">4</span>) / <span class="number">2</span> + n * tile.width, (cc.winSize.height - tile.height * <span class="number">4</span>) / <span class="number">2</span> + tile.width * <span class="number">4</span>), <span class="number">5</span>,</span><br><span class="line">            cc.color(<span class="number">55</span>, <span class="number">62</span>, <span class="number">64</span>, <span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.addChild(bg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，在onEnter中，注册了触摸事件，这个触摸事件就用于接受玩家的操作，在TouchBegan事件中记录触摸开始时的点，在TouchMoved中记录当前移动到的点，当触摸距离超过一定长度时，判定玩家进行了滑动操作，并通过触摸点来判断玩家滑动的举例，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">touchbegan: <span class="function"><span class="keyword">function</span> (<span class="params">touch, event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.isMove = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">this</span>.startX = touch.getLocationX();</span><br><span class="line">    <span class="built_in">this</span>.startY = touch.getLocationY();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br><span class="line">touchmoved: <span class="function"><span class="keyword">function</span> (<span class="params">touch, event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.isMove) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> endX = touch.getLocation().x;</span><br><span class="line">    <span class="keyword">var</span> endY = touch.getLocation().y;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(endX - <span class="built_in">this</span>.startX) &gt; <span class="number">20</span> ||</span><br><span class="line">        <span class="built_in">Math</span>.abs(endY - <span class="built_in">this</span>.startY) &gt; <span class="number">20</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> dir = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(endX - <span class="built_in">this</span>.startX) &gt; <span class="built_in">Math</span>.abs(endY - <span class="built_in">this</span>.startY)) &#123;<span class="comment">//左右</span></span><br><span class="line">            <span class="keyword">if</span> (endX &gt; <span class="built_in">this</span>.startX) &#123;</span><br><span class="line">                dir = <span class="string">&quot;right&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dir = <span class="string">&quot;left&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//上下</span></span><br><span class="line">            <span class="keyword">if</span> (endY &gt; <span class="built_in">this</span>.startY) &#123;</span><br><span class="line">                dir = <span class="string">&quot;up&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dir = <span class="string">&quot;down&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.isMove = <span class="literal">false</span>;</span><br><span class="line">        event.getCurrentTarget().moveAllTiled(dir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br><span class="line">moveAllTiled: <span class="function"><span class="keyword">function</span> (<span class="params">dir</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isMoved = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">switch</span> (dir) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;up&quot;</span>:</span><br><span class="line">            isMoved = <span class="built_in">this</span>.moveUp();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;down&quot;</span>:</span><br><span class="line">            isMoved = <span class="built_in">this</span>.moveDown();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;left&quot;</span>:</span><br><span class="line">            isMoved = <span class="built_in">this</span>.moveLeft();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;right&quot;</span>:</span><br><span class="line">            isMoved = <span class="built_in">this</span>.moveRight();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isMoved) &#123;</span><br><span class="line">        <span class="comment">//每次移动产生一个新块</span></span><br><span class="line">        <span class="built_in">this</span>.newTiled();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>触动滑动操作后，开始执行滑动逻辑，每次滑动之后，会随机创建一个新的方块，在newTiled方法中，除了创建新方块之外，还需要判断游戏是否结束，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">newTiled: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tile = <span class="keyword">new</span> Tiled(<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">this</span>.addChild(tile);</span><br><span class="line">    <span class="comment">// 判断游戏是否结束</span></span><br><span class="line">    <span class="keyword">var</span> isOver = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 判断是否有空余位置</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">4</span>; row++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">4</span>; col++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tiles[row][col] == <span class="literal">null</span>) &#123;</span><br><span class="line">                isOver = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isOver) &#123;</span><br><span class="line">        <span class="comment">// 判断四周是否有数字相同方块</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">4</span>; row++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">4</span>; col++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (row &lt; <span class="number">3</span> &amp;&amp; tiles[row + <span class="number">1</span>][col].num == tiles[row][col].num) &#123;</span><br><span class="line">                    isOver = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (row &gt; <span class="number">0</span> &amp;&amp; tiles[row - <span class="number">1</span>][col].num == tiles[row][col].num) &#123;</span><br><span class="line">                    isOver = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (col &lt; <span class="number">3</span> &amp;&amp; tiles[row][col + <span class="number">1</span>].num == tiles[row][col].num) &#123;</span><br><span class="line">                    isOver = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (col &gt; <span class="number">0</span> &amp;&amp; tiles[row][col - <span class="number">1</span>].num == tiles[row][col].num) &#123;</span><br><span class="line">                    isOver = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isOver) &#123;</span><br><span class="line">        cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> OverScene()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方块的滑动，就是2048这款游戏最主要的逻辑了，我们在滑动的时候，需要遍历tiles数组所有不是null的元素，并将这个元素按照滑动方向进行移动，一直遍历到数组的最大长度，也就是将滑动到表格的边缘，如果中途遇到了方块，并且数字与自己相同，就进行合并，合并是将自己删除，将遇到的方块数字乘以2，如果中途遇到的方块的数字与自己不同，此方块的滑动就停止，使其停在当前的位置，滑动分为上下左右四个逻辑，代码分别如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">moveUp: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isMoved = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">4</span>; col++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">3</span>; row &gt;= <span class="number">0</span>; row--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tiles[row][col] != <span class="literal">null</span>) &#123;<span class="comment">// 有方块</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> row1 = row; row1 &lt; <span class="number">3</span>; row1++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (tiles[row1 + <span class="number">1</span>][col] == <span class="literal">null</span>)<span class="comment">//如果没有向上移动</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        tiles[row1 + <span class="number">1</span>][col] = tiles[row1][col];</span><br><span class="line">                        tiles[row1][col] = <span class="literal">null</span>;</span><br><span class="line">                        tiles[row1 + <span class="number">1</span>][col].moveTo(row1 + <span class="number">1</span>, col);</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tiles[row1 + <span class="number">1</span>][col].num == tiles[row1][col].num) &#123;<span class="comment">// 合并</span></span><br><span class="line">                        tiles[row1 + <span class="number">1</span>][col].num = <span class="built_in">parseInt</span>(tiles[row1][col].num) * <span class="number">2</span>;</span><br><span class="line">                        tiles[row1 + <span class="number">1</span>][col].updateNum();</span><br><span class="line">                        tiles[row1][col].removeFromParent();</span><br><span class="line">                        tiles[row1][col] = <span class="literal">null</span>;</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isMoved;</span><br><span class="line">&#125;,</span><br><span class="line">moveDown: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isMoved = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">4</span>; col++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">4</span>; row++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tiles[row][col] != <span class="literal">null</span>) &#123;<span class="comment">// 有方块</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> row1 = row; row1 &gt; <span class="number">0</span>; row1--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (tiles[row1 - <span class="number">1</span>][col] == <span class="literal">null</span>)<span class="comment">//如果没有向下移动</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        tiles[row1 - <span class="number">1</span>][col] = tiles[row1][col];</span><br><span class="line">                        tiles[row1][col] = <span class="literal">null</span>;</span><br><span class="line">                        tiles[row1 - <span class="number">1</span>][col].moveTo(row1 - <span class="number">1</span>, col);</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tiles[row1 - <span class="number">1</span>][col].num == tiles[row1][col].num) &#123;<span class="comment">// 合并</span></span><br><span class="line">                        tiles[row1 - <span class="number">1</span>][col].num = <span class="built_in">parseInt</span>(tiles[row1][col].num) * <span class="number">2</span>;</span><br><span class="line">                        tiles[row1 - <span class="number">1</span>][col].updateNum();</span><br><span class="line">                        tiles[row1][col].removeFromParent();</span><br><span class="line">                        tiles[row1][col] = <span class="literal">null</span>;</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isMoved;</span><br><span class="line">&#125;,</span><br><span class="line">moveLeft: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isMoved = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">4</span>; row++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">0</span>; col &lt; <span class="number">4</span>; col++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tiles[row][col] != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> col1 = col; col1 &gt; <span class="number">0</span>; col1--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (tiles[row][col1 - <span class="number">1</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">                        tiles[row][col1 - <span class="number">1</span>] = tiles[row][col1];</span><br><span class="line">                        tiles[row][col1] = <span class="literal">null</span>;</span><br><span class="line">                        tiles[row][col1 - <span class="number">1</span>].moveTo(row, col1 - <span class="number">1</span>);</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tiles[row][col1 - <span class="number">1</span>].num == tiles[row][col1].num) &#123;<span class="comment">// 合并</span></span><br><span class="line">                        tiles[row][col1 - <span class="number">1</span>].num = <span class="built_in">parseInt</span>(tiles[row][col1].num) * <span class="number">2</span>;</span><br><span class="line">                        tiles[row][col1 - <span class="number">1</span>].updateNum();</span><br><span class="line">                        tiles[row][col1].removeFromParent();</span><br><span class="line">                        tiles[row][col1] = <span class="literal">null</span>;</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isMoved;</span><br><span class="line">&#125;,</span><br><span class="line">moveRight: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isMoved = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> row = <span class="number">0</span>; row &lt; <span class="number">4</span>; row++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> col = <span class="number">3</span>; col &gt;= <span class="number">0</span>; col--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tiles[row][col] != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> col1 = col; col1 &lt; <span class="number">3</span>; col1++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (tiles[row][col1 + <span class="number">1</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">                        tiles[row][col1 + <span class="number">1</span>] = tiles[row][col1];</span><br><span class="line">                        tiles[row][col1] = <span class="literal">null</span>;</span><br><span class="line">                        tiles[row][col1 + <span class="number">1</span>].moveTo(row, col1 + <span class="number">1</span>);</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tiles[row][col1 + <span class="number">1</span>].num == tiles[row][col1].num) &#123;<span class="comment">// 合并</span></span><br><span class="line">                        tiles[row][col1 + <span class="number">1</span>].num = <span class="built_in">parseInt</span>(tiles[row][col1].num) * <span class="number">2</span>;</span><br><span class="line">                        tiles[row][col1 + <span class="number">1</span>].updateNum();</span><br><span class="line">                        tiles[row][col1].removeFromParent();</span><br><span class="line">                        tiles[row][col1] = <span class="literal">null</span>;</span><br><span class="line">                        isMoved = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isMoved;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，我们就基本实现了2048游戏的主要逻辑。</p><h4 id="开始-结束场景类"><a href="#开始-结束场景类" class="headerlink" title="开始/结束场景类"></a>开始/结束场景类</h4><p>为了游戏框架的完整，我们还是创建一个开始场景类和结束场景类，代码分别如下：<br>开始场景类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite:<span class="literal">null</span>,</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//////////////////////////////</span></span><br><span class="line">        <span class="comment">// 1. super init first</span></span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/////////////////////////////</span></span><br><span class="line">        <span class="comment">// 2. add a menu item with &quot;X&quot; image, which is clicked to quit the program</span></span><br><span class="line">        <span class="comment">//    you may modify it.</span></span><br><span class="line">        <span class="comment">// ask the window size</span></span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/////////////////////////////</span></span><br><span class="line">        <span class="comment">// 3. add your codes below...</span></span><br><span class="line">        <span class="comment">// add a label shows &quot;Hello World&quot;</span></span><br><span class="line">        <span class="comment">// create and initialize a label</span></span><br><span class="line">        <span class="keyword">var</span> helloLabel = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;2048&quot;</span>, <span class="string">&quot;Arial&quot;</span>, <span class="number">38</span>);</span><br><span class="line">        <span class="comment">// position the label on the center of the screen</span></span><br><span class="line">        helloLabel.x = size.width / <span class="number">2</span>;</span><br><span class="line">        helloLabel.y = size.height / <span class="number">2</span> + <span class="number">200</span>;</span><br><span class="line">        <span class="comment">// add the label as a child to this layer</span></span><br><span class="line">        <span class="built_in">this</span>.addChild(helloLabel, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add &quot;HelloWorld&quot; splash screen&quot;</span></span><br><span class="line">        <span class="comment">// this.sprite = new cc.Sprite(res.HelloWorld_png);</span></span><br><span class="line">        <span class="comment">// this.sprite.attr(&#123;</span></span><br><span class="line">        <span class="comment">//     x: size.width / 2,</span></span><br><span class="line">        <span class="comment">//     y: size.height / 2</span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line">        <span class="comment">// this.addChild(this.sprite, 0);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> start = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;开始游戏&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>,<span class="keyword">new</span> GameScene()));</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(start);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> HelloWorldLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>结束场景类</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Henry on 16/6/19.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> OverLayer = cc.Layer.extend(&#123;</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> overText = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;Game Over&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="number">50</span>);</span><br><span class="line">        overText.setPosition(cc.winSize.width / <span class="number">2</span>, cc.winSize.height / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> back = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;再来一次&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> HelloWorldScene()));</span><br><span class="line">        &#125;, <span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(back);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> OverScene = cc.Scene.extend(&#123;</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> OverLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p>最后的运行效果如下<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/2048.gif" alt="2048效果图"><br>通过CVP平台的项目托管可看到实际运行效果，地址如下：<br><a href="http://www.cocoscvp.com/usercode/ea72822aeed0546b537b4226954a11be87a7f152/">http://www.cocoscvp.com/usercode/ea72822aeed0546b537b4226954a11be87a7f152/</a></p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>所有源代码均上传到github，欢迎交流学习，地址：<br><a href="https://github.com/hjcenry/2048">https://github.com/hjcenry/2048</a></p><ul><li>原文博客：<a href="http://hjcenry.github.io/">http://hjcenry.github.io</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;2048是之前火过一段时间的休闲数字消除类游戏，它的玩法很简单，上手很容易，可是想到要得到高分却很难，看似简单的游戏却有着很多得分的技巧，想当初这个游戏也曾是陪伴我大学课堂的游戏之一。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
    <category term="2048" scheme="http://www.hjcenry.com/tags/2048/"/>
    
  </entry>
  
  <entry>
    <title>CVP认证学习笔记--(何小成)027--纹理缓存的管理</title>
    <link href="http://www.hjcenry.com/2016/06/02/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)027--%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E7%9A%84%E7%AE%A1%E7%90%86/"/>
    <id>http://www.hjcenry.com/2016/06/02/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)027--%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E7%9A%84%E7%AE%A1%E7%90%86/</id>
    <published>2016-06-02T15:39:00.000Z</published>
    <updated>2020-09-29T03:25:11.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>本节内容主要讲解两个知识点，纹理缓存的管理和cocos的场景加载动画。纹理缓存管理可以通过cc.TextureCache来进行管理，而场景加载动画则在源码中的/frameworks/cocos2d-html5/cocos2d/core/scenes/CCLoaderScene.js中<a id="more"></a>，在CCLoaderScene中定义了场景加载的相关方法。</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>cc.TextureCache的使用API在官网的文档地址是：<a href="http://www.cocos.com/doc/jsdoc/symbols/cc.textureCache.html">http://www.cocos.com/doc/jsdoc/symbols/cc.textureCache.html</a><br>其主要API如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">addImage(path);<span class="comment">// 添加一个纹理到缓存</span></span><br><span class="line">dumpCachedTextureInfo();<span class="comment">// 把当前TextureCache的内容输出到cc.log,它会计算每个贴图的大小和贴图总共占用的内存</span></span><br><span class="line">getTextureForKey(textureKeyName);<span class="comment">// 返回创建好的贴图。如果贴图不存在，返回空。</span></span><br><span class="line">removeAllTextures();<span class="comment">// 清空加载贴图的字典，如果你收到“内存警告”时请调用此方法短期来看:释放某些资源，防止app出现闪退,在中期:会分配更多的资源,长远来看:没有什么区别</span></span><br><span class="line">removeTexture(texture);<span class="comment">// 从缓存中删除指定的贴图</span></span><br><span class="line">removeTextureForKey(textureKeyName);<span class="comment">// 从缓存中根据给定的key删除贴图textureForKey(textureKeyName);// 返回创建好的贴图。如果贴图不存在，返回空。</span></span><br></pre></td></tr></table></figure><h3 id="loading场景"><a href="#loading场景" class="headerlink" title="loading场景"></a>loading场景</h3><p>cocos本身的loading场景在/frameworks/cocos2d-html5/cocos2d/core/scenes/CCLoaderScene.js中，而如果我们想要自己实现loading场景，要么在这个类的基础上直接改，要么写一个自己的loading场景，然后在main.js中把加载系统的loading场景改为加载我们自己的loading场景，仔细研究这个CCLoaderScene，其实发现它也没有做多么伟大的事情，其实也就是比普通的场景多做一件事而已，那就是加载资源，通过init的函数，加载一些变量，如loading文本，百分数的进度等，然后调用一个定时任务，定期更新进度文本，定时任务中通过调用cc.loader函数检查资源加载的进度，加载完成之后，再进入主场景。</p><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>本节作业：<br>本节作业要求<br>// 本节课介绍了loading 的原理和系统源码<br>// 并深入介绍了cc.textureCache的核心用法<br>// 作业要求<br>// 实现一个自定义 loading效果（如果需要图片可以通过提交项目方式完成）<br>// 当loading 完成之后<br>// 清除loading界面的所有纹理<br>我在代码中实现了自建loading场景，写在了app.js中，并在loading场景中添加了一个移动的npc来模拟加载进度条，并且npc的纹理通过textureCache来管理，进度条加载完之后，通过textureCache移除场景中所有的纹理（其实只有npc的纹理）<br>作业代码实现如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite:<span class="literal">null</span>,</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//////////////////////////////</span></span><br><span class="line">        <span class="comment">// 1. super init first</span></span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="comment">//这时候，在src/resource.js中定义的图片数组都已经保存到了</span></span><br><span class="line">        <span class="comment">//cc.TextureCache中，因此我们可以直接从这里获取纹理</span></span><br><span class="line">        cc.textureCache.addImage(<span class="string">&quot;res/32636-2.png&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> texture1=cc.textureCache.getTextureForKey(<span class="string">&quot;res/32636-2.png&quot;</span>);</span><br><span class="line">        cc.textureCache.dumpCachedTextureInfo();</span><br><span class="line">        <span class="keyword">var</span> sp=<span class="keyword">new</span> cc.Sprite(texture1);</span><br><span class="line">        <span class="built_in">this</span>.addChild(sp);</span><br><span class="line">        sp.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 本节课介绍了loading 的原理和系统源码</span></span><br><span class="line">        <span class="comment">// 并深入介绍了cc.textureCache的核心用法</span></span><br><span class="line">        <span class="comment">// 作业要求</span></span><br><span class="line">        <span class="comment">// 实现一个自定义 loading效果（如果需要图片可以通过提交项目方式完成）</span></span><br><span class="line">        <span class="comment">// 当loading 完成之后</span></span><br><span class="line">        <span class="comment">// 清除loading界面的所有纹理        </span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> HelloWorldLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义loading界面</span></span><br><span class="line"><span class="keyword">var</span> MyLoadScene = cc.Scene.extend(&#123;</span><br><span class="line">    _interval : <span class="literal">null</span>,</span><br><span class="line">    _label : <span class="literal">null</span>,</span><br><span class="line">    _npc:<span class="literal">null</span>,</span><br><span class="line">    _className:<span class="string">&quot;LoaderScene&quot;</span>,</span><br><span class="line">    cb: <span class="literal">null</span>,</span><br><span class="line">    target: <span class="literal">null</span>,</span><br><span class="line">    npc:<span class="literal">null</span>,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Contructor of cc.LoaderScene</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@returns <span class="type">&#123;boolean&#125;</span></span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    init : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//logo</span></span><br><span class="line">        <span class="keyword">var</span> logoWidth = <span class="number">160</span>;</span><br><span class="line">        <span class="keyword">var</span> logoHeight = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// bg</span></span><br><span class="line">        <span class="keyword">var</span> bgLayer = self._bgLayer = <span class="keyword">new</span> cc.LayerColor(cc.color(<span class="number">32</span>, <span class="number">255</span>, <span class="number">32</span>, <span class="number">255</span>));</span><br><span class="line">        self.addChild(bgLayer, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//image move to CCSceneFile.js</span></span><br><span class="line">        <span class="keyword">var</span> fontSize = <span class="number">24</span>, lblHeight =  -logoHeight / <span class="number">2</span> + <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(cc._loaderImage)&#123;<span class="comment">//这个图片在Base64Image中保存，我们可以替换</span></span><br><span class="line">            <span class="comment">//loading logo</span></span><br><span class="line">            cc.loader.loadImg(cc._loaderImage, &#123;<span class="attr">isCrossOrigin</span> : <span class="literal">false</span> &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, img</span>)</span>&#123;</span><br><span class="line">                logoWidth = img.width;</span><br><span class="line">                logoHeight = img.height;</span><br><span class="line">                self._initStage(img, cc.visibleRect.center);</span><br><span class="line">            &#125;);</span><br><span class="line">            fontSize = <span class="number">14</span>;</span><br><span class="line">            lblHeight = -logoHeight / <span class="number">2</span> - <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//loading percent 加载进度</span></span><br><span class="line">        <span class="keyword">var</span> label = self._label = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;Loading... 0%&quot;</span>, <span class="string">&quot;Arial&quot;</span>, fontSize);</span><br><span class="line">        label.setPosition(cc.pAdd(cc.visibleRect.center, cc.p(<span class="number">0</span>, lblHeight)));</span><br><span class="line">        label.setColor(cc.color(<span class="number">180</span>, <span class="number">180</span>, <span class="number">180</span>));</span><br><span class="line">        bgLayer.addChild(<span class="built_in">this</span>._label, <span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 自定义npc</span></span><br><span class="line">        cc.textureCache.addImage(<span class="string">&quot;res/32636-2.png&quot;</span>);</span><br><span class="line">        cc.textureCache.dumpCachedTextureInfo();</span><br><span class="line">        cc.log(<span class="string">&quot;loading界面添加纹理32636-2&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> npcTexture = cc.textureCache.getTextureForKey(<span class="string">&quot;res/32636-2.png&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> npc = self._npc = <span class="keyword">new</span> cc.Sprite(npcTexture);</span><br><span class="line">        npc.setPosition(npc.width/<span class="number">2</span>,<span class="number">150</span>);</span><br><span class="line">        npc.setScale(<span class="number">0.5</span>);</span><br><span class="line">        <span class="built_in">this</span>._bgLayer.addChild(<span class="built_in">this</span>._npc,<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">      _initStage: <span class="function"><span class="keyword">function</span> (<span class="params">img, centerPos</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">var</span> texture2d = self._texture2d = <span class="keyword">new</span> cc.Texture2D();</span><br><span class="line">        texture2d.initWithElement(img);</span><br><span class="line">        texture2d.handleLoadedTexture();</span><br><span class="line">        <span class="keyword">var</span> logo = self._logo = <span class="keyword">new</span> cc.Sprite(texture2d);</span><br><span class="line">        logo.setScale(cc.contentScaleFactor());</span><br><span class="line">        logo.x = centerPos.x;</span><br><span class="line">        logo.y = centerPos.y;</span><br><span class="line">        self._bgLayer.addChild(logo, <span class="number">10</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * custom onEnter</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">        cc.Node.prototype.onEnter.call(self);</span><br><span class="line">        self.schedule(self._startLoading, <span class="number">0.3</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * custom onExit</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    onExit: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        cc.Node.prototype.onExit.call(<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> tmpStr = <span class="string">&quot;Loading... 100%&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>._label.setString(tmpStr);</span><br><span class="line">        <span class="comment">// 清理缓存</span></span><br><span class="line">        cc.textureCache.removeAllTextures();</span><br><span class="line">        cc.textureCache.dumpCachedTextureInfo();</span><br><span class="line">        cc.log(<span class="string">&quot;loading界面结束，清理纹理缓存&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * init with resources</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Array&#125;</span> <span class="variable">resources</span></span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Function|String&#125;</span> <span class="variable">cb</span></span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> <span class="variable">target</span></span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    initWithResources: <span class="function"><span class="keyword">function</span> (<span class="params">resources, cb, target</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cc.isString(resources))</span><br><span class="line">            resources = [resources];</span><br><span class="line">        <span class="built_in">this</span>.resources = resources || [];</span><br><span class="line">        <span class="built_in">this</span>.cb = cb;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    _startLoading: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">        self.unschedule(self._startLoading);</span><br><span class="line">        <span class="keyword">var</span> res = self.resources;</span><br><span class="line">        cc.loader.load(res,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params">result, count, loadedCount</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> percent = (loadedCount / count * <span class="number">100</span>) | <span class="number">0</span>;</span><br><span class="line">                percent = <span class="built_in">Math</span>.min(percent, <span class="number">100</span>);</span><br><span class="line">                self._label.setString(<span class="string">&quot;Loading... &quot;</span> + percent + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">                self._npc.setPositionX(self._npc.width/<span class="number">2</span>+cc.winSize.width*(percent/<span class="number">100</span>));</span><br><span class="line">                cc.log(<span class="string">&quot;loading界面npc走到了&quot;</span>+percent+<span class="string">&quot;,横坐标&quot;</span>+(self._npc.width/<span class="number">2</span>+cc.winSize.width*(percent/<span class="number">100</span>))+<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (self.cb)</span><br><span class="line">                    self.cb.call(self.target);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    _updateTransform: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._renderCmd.setDirtyFlag(cc.Node._dirtyFlags.transformDirty);</span><br><span class="line">        <span class="built_in">this</span>._bgLayer._renderCmd.setDirtyFlag(cc.Node._dirtyFlags.transformDirty);</span><br><span class="line">        <span class="built_in">this</span>._label._renderCmd.setDirtyFlag(cc.Node._dirtyFlags.transformDirty);</span><br><span class="line">        <span class="built_in">this</span>._logo._renderCmd.setDirtyFlag(cc.Node._dirtyFlags.transformDirty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">MyLoadScene.preload = <span class="function"><span class="keyword">function</span>(<span class="params">resources, cb, target</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _cc = cc;</span><br><span class="line">    <span class="keyword">if</span>(!_cc.loaderScene) &#123;</span><br><span class="line">        _cc.loaderScene = <span class="keyword">new</span> MyLoadScene();</span><br><span class="line">        _cc.loaderScene.init();</span><br><span class="line">        cc.eventManager.addCustomListener(cc.Director.EVENT_PROJECTION_CHANGED, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            _cc.loaderScene._updateTransform();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用initWithResources来实现纹理加载</span></span><br><span class="line">    _cc.loaderScene.initWithResources(resources, cb, target);</span><br><span class="line">    cc.director.runScene(_cc.loaderScene);</span><br><span class="line">    <span class="keyword">return</span> _cc.loaderScene;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中main.js加载场景的代码修改如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//load resources</span></span><br><span class="line"><span class="comment">// cc.LoaderScene.preload(g_resources, function () &#123;</span></span><br><span class="line"><span class="comment">//     cc.director.runScene(new HelloWorldScene());</span></span><br><span class="line"><span class="comment">// &#125;, this);</span></span><br><span class="line">MyLoadScene.preload(g_resources, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    cc.director.runScene(<span class="keyword">new</span> HelloWorldScene());</span><br><span class="line">&#125;, <span class="built_in">this</span>);</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><a href="http://www.cocoscvp.com/usercode/2016_05_20/55df2e8d114fce1f48d1151065951e865d56b92c/">http://www.cocoscvp.com/usercode/2016_05_20/55df2e8d114fce1f48d1151065951e865d56b92c/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;本节内容主要讲解两个知识点，纹理缓存的管理和cocos的场景加载动画。纹理缓存管理可以通过cc.TextureCache来进行管理，而场景加载动画则在源码中的/frameworks/cocos2d-html5/cocos2d/core/scenes/CCLoaderScene.js中</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
  </entry>
  
  <entry>
    <title>CVP认证学习笔记--(何小成)026--数组的使用</title>
    <link href="http://www.hjcenry.com/2016/05/29/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)026--%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.hjcenry.com/2016/05/29/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)026--%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2016-05-29T02:35:00.000Z</published>
    <updated>2020-09-29T03:25:11.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>本节讲解cocos2d-js中数组的使用，其实数组不是cocos特有的，这是js中的一种数据结构，与Java，C中的数组稍有不同，js中的数组能存储任意类型的元素，并且在声明时无需指定长度，与Java中的List的用法更相似。<a id="more"></a>不过js中数组的强大，有时候也会为开发调试带来不少烦恼，使用时还是要注意符合规范。在cocos中，数组经常被用来存储渲染的Node对象，以方便管理，如前面我写到的打飞机，子弹就可以用数组来管理，每一帧的逻辑，都可以通过遍历子弹数组，来判断是否有子弹飞出屏幕或击中玩家飞机。</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>数组常用的使用方法如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// shift:删除原数组第一项，并返回删除元素的值；如果数组为空则返回undefined </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.shift(); <span class="comment">//a:[2,3,4,5] b:1</span></span><br><span class="line"><span class="comment">// unshift:将参数添加到原数组开头，并返回数组的长度 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.unshift(<span class="number">-2</span>,<span class="number">-1</span>); <span class="comment">//a:[-2,-1,1,2,3,4,5] b:7   </span></span><br><span class="line"><span class="comment">// pop:删除原数组最后一项，并返回删除元素的值；如果数组为空则返回undefined </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.pop(); <span class="comment">//a:[1,2,3,4] b:5  </span></span><br><span class="line"><span class="comment">// push:将参数添加到原数组末尾，并返回数组的长度 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.push(<span class="number">6</span>,<span class="number">7</span>); <span class="comment">//a:[1,2,3,4,5,6,7] b:7  </span></span><br><span class="line"><span class="comment">// concat:返回一个新数组，是将参数添加到原数组中构成的 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.concat(<span class="number">6</span>,<span class="number">7</span>); <span class="comment">//a:[1,2,3,4,5] b:[1,2,3,4,5,6,7]  </span></span><br><span class="line"><span class="comment">// splice(start,deleteCount,val1,val2,...):从start位置开始删除deleteCount项，并从该位置起插入val1,val2,... </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.splice(<span class="number">2</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>); <span class="comment">//a:[1,2,7,8,9,5] b:[3,4]   </span></span><br><span class="line"><span class="keyword">var</span> b = a.splice(<span class="number">0</span>,<span class="number">1</span>); <span class="comment">//同shift   </span></span><br><span class="line">a.splice(<span class="number">0</span>,<span class="number">0</span>,<span class="number">-2</span>,<span class="number">-1</span>); <span class="keyword">var</span> b = a.length; <span class="comment">//同unshift   </span></span><br><span class="line"><span class="keyword">var</span> b = a.splice(a.length<span class="number">-1</span>,<span class="number">1</span>); <span class="comment">//同pop   </span></span><br><span class="line">a.splice(a.length,<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>); <span class="keyword">var</span> b = a.length; <span class="comment">//同push  </span></span><br><span class="line"><span class="comment">// reverse:将数组反序 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.reverse(); <span class="comment">//a:[5,4,3,2,1] b:[5,4,3,2,1]  </span></span><br><span class="line"><span class="comment">// sort(orderfunction):按指定的参数对数组进行排序 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.sort(); <span class="comment">//a:[1,2,3,4,5] b:[1,2,3,4,5]  </span></span><br><span class="line"><span class="comment">// slice(start,end):返回从原数组中指定开始下标到结束下标之间的项组成的新数组 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.slice(<span class="number">2</span>,<span class="number">5</span>); <span class="comment">//a:[1,2,3,4,5] b:[3,4,5]  </span></span><br><span class="line"><span class="comment">// join(separator):将数组的元素组起一个字符串，以separator为分隔符，省略的话则用默认用逗号为分隔符 </span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];   </span><br><span class="line"><span class="keyword">var</span> b = a.join(<span class="string">&quot;|&quot;</span>); <span class="comment">//a:[1,2,3,4,5] b:&quot;1|2|3|4|5&quot;  </span></span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>本节作业：<br>本节要求掌握js中数组的使用，在作业中完成通过数组动态管理node对象<br>作业代码实现如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> allnpc=<span class="keyword">new</span> <span class="built_in">Array</span>();<span class="comment">//定义数组</span></span><br><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite:<span class="literal">null</span>,</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//////////////////////////////</span></span><br><span class="line">        <span class="comment">// 1. super init first</span></span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> item01=<span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;添加元素&quot;</span>,<span class="built_in">this</span>.callback,<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> item02=<span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;删除元素&quot;</span>,<span class="built_in">this</span>.callback,<span class="built_in">this</span>);</span><br><span class="line">        item01.setPositionY(<span class="number">200</span>);</span><br><span class="line">        item02.setPositionY(<span class="number">160</span>);</span><br><span class="line">        item01.setTag(<span class="number">11</span>);</span><br><span class="line">        item02.setTag(<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">var</span> menu=<span class="keyword">new</span> cc.Menu(item01,item02);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="comment">//         本章介绍了数组的使用</span></span><br><span class="line">        <span class="comment">// 通过数组可以动态管理一组对象</span></span><br><span class="line">        <span class="comment">// 作业要求</span></span><br><span class="line">        <span class="comment">//   将这5个按钮对应于添加一个Node后将node显示</span></span><br><span class="line">        <span class="comment">//      这是第N个节点</span></span><br><span class="line">        <span class="comment">// 当删除某个Node后，将这个Node从屏幕移除     </span></span><br><span class="line">        <span class="keyword">var</span> count = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;数组共0个Node&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        count.setPosition(menu.getPositionX(),menu.getPositionY()+<span class="number">20</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(count);</span><br><span class="line">        count.setTag(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    callback:<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">var</span> newobj=<span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/logo.png&quot;</span>);</span><br><span class="line">        newobj.setPosition(<span class="built_in">Math</span>.random()*cc.winSize.width,<span class="built_in">Math</span>.random()*cc.winSize.height);</span><br><span class="line">        newobj.tag=allnpc.length+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">switch</span>(obj.getTag())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                allnpc.push(newobj);</span><br><span class="line">                <span class="built_in">this</span>.addChild(newobj);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="keyword">var</span> oldobj = allnpc.pop();</span><br><span class="line">                <span class="built_in">this</span>.removeChild(oldobj);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.getChildByTag(<span class="number">3</span>).setString(<span class="string">&quot;数组共&quot;</span>+allnpc.length+<span class="string">&quot;个Node&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> HelloWorldLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><a href="http://www.cocoscvp.com/usercode/2016_05_20/694a9a04efbc2d25a7a879cf2ac399a0e7ec46a2/">http://www.cocoscvp.com/usercode/2016_05_20/694a9a04efbc2d25a7a879cf2ac399a0e7ec46a2/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;本节讲解cocos2d-js中数组的使用，其实数组不是cocos特有的，这是js中的一种数据结构，与Java，C中的数组稍有不同，js中的数组能存储任意类型的元素，并且在声明时无需指定长度，与Java中的List的用法更相似。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-JS实现的贪吃蛇</title>
    <link href="http://www.hjcenry.com/2016/05/16/Cocos2d-JS%E5%AE%9E%E7%8E%B0%E7%9A%84%E8%B4%AA%E5%90%83%E8%9B%87/"/>
    <id>http://www.hjcenry.com/2016/05/16/Cocos2d-JS%E5%AE%9E%E7%8E%B0%E7%9A%84%E8%B4%AA%E5%90%83%E8%9B%87/</id>
    <published>2016-05-16T07:38:00.000Z</published>
    <updated>2020-09-29T03:25:11.719Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>相信贪吃蛇大家都玩儿过，我对贪吃蛇的印象就是在电子词典上，一只像素蛇在屏幕游走，饥渴难耐，看着豆子就要去吃，吃到豆子就会长一节，当蛇的身体越来越长的时候，它才发现这个世界变了，每走一步，都是寸步难行。<a id="more"></a>当它的蛇头触碰到任意的物体，无论是屏幕边界还是自己的身体，游戏都将结束。这款游戏应该是比较经典的一个童年记忆。刚接触游戏开发的人可能比较喜欢以这款游戏入手，因为贪吃蛇包含了很多游戏开发中的原理，并且难度也不大，而我刚好在学习Cocos CVP的课程，学习在一个中间阶段，我也来拿这个练练手，以下就把我做贪吃蛇的过程分享出来。</p><h3 id="游戏分析"><a href="#游戏分析" class="headerlink" title="游戏分析"></a>游戏分析</h3><h4 id="身体关节"><a href="#身体关节" class="headerlink" title="身体关节"></a>身体关节</h4><p>贪吃蛇的实现可能有多种方法，但今天，我想用面向对象的思想来对游戏进行设计，到今天，任何的程序开发都离不开面向对象的思想，通过面向对象的思想我们能把很多抽象的问题具象化，方便我们解决很多问题。而在贪吃蛇中，面向对象的思想依然实用。<br>在贪吃蛇中，我们可以把一条游走的蛇的每个关节当做是一个对象，而蛇本身是由多个关节组成的整体，当每个关节在移动时，我们就能看到整个蛇的移动，每个关节的位置以及移动方向都跟它的上一个关节息息相关，那么我们就可以把关节与它的上一个关节关联起来，实现如下结构：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/snake1.png" alt="蛇关节关系图"></p><h4 id="移动方向"><a href="#移动方向" class="headerlink" title="移动方向"></a>移动方向</h4><p>如上文所说，按照上面的关节关系来实现，那么蛇的移动方向就是与父节点的移动方向相关联，每一个关节应该有一个当前移动方向和下次移动方向，每一步的移动，都是跟着当前移动方向走的，而父关节的当前移动的方向即为子关节的下次移动方向，这样，只需要调整蛇头关节的下次移动方向，整条蛇就能顺着各自的父关节方向移动，蛇的移动方向图如下：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/snakemove.png" alt="蛇的移动方向图"></p><h3 id="开发设计"><a href="#开发设计" class="headerlink" title="开发设计"></a>开发设计</h3><h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><p>按照前面的设计，我们可以大致可以划分出游戏场景类和关节类，进入游戏场景类，再将一些全局的变量单独存在一个类中，项目结构可划分如下图：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/snake%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="项目结构图"></p><h4 id="全局变量类"><a href="#全局变量类" class="headerlink" title="全局变量类"></a>全局变量类</h4><p>游戏中的全局变量，提炼为一个全局变量类，其中参数可以根据需求灵活变动配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Constants = &#123;</span><br><span class="line">    frequency: <span class="number">0.2</span>,<span class="comment">// 刷新频率</span></span><br><span class="line">    speed: <span class="number">31</span>,<span class="comment">// 每帧移动距离,身体节点大小+1像素间隔</span></span><br><span class="line">    errDistance: <span class="number">10</span>,<span class="comment">// 偏差举例</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="关节类"><a href="#关节类" class="headerlink" title="关节类"></a>关节类</h4><p>按照以上设计的结构，每一个关节对象都应该包含蛇的当前方向、下次方向和蛇的父节点三个属性，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> SnakeBody = cc.Sprite.extend(&#123;</span><br><span class="line">    frontBody: <span class="literal">null</span>,<span class="comment">//上一个身体关节,没有则为头部</span></span><br><span class="line">    nextDirection: <span class="number">0</span>,<span class="comment">// 1-上,2-下,3-左,4-右</span></span><br><span class="line">    direction: <span class="number">0</span>,<span class="comment">// 1-上,2-下,3-左,4-右</span></span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">frontBody, direction</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.frontBody = frontBody;</span><br><span class="line">        <span class="built_in">this</span>.direction = direction;</span><br><span class="line">        <span class="built_in">this</span>.nextDirection = direction;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面说的，关节的位置跟它的福关节的位置是息息相关的，那么初始化的时候，我们就需要根据父关节的移动方向来进行次关节的位置设置，这部分代码，我们可以放在onEnter方法中，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>._super();</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>.frontBody == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="comment">// 蛇头部关节,设置头部纹理</span></span><br><span class="line">      <span class="keyword">switch</span> (<span class="built_in">this</span>.direction) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">              <span class="built_in">this</span>.setTexture(res.head_up);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">              <span class="built_in">this</span>.setTexture(res.head_down);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">              <span class="built_in">this</span>.setTexture(res.head_left);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">              <span class="built_in">this</span>.setTexture(res.head_right);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 蛇身体关节</span></span><br><span class="line">      <span class="comment">// 设置纹理</span></span><br><span class="line">      <span class="built_in">this</span>.setTexture(res.body);</span><br><span class="line">      <span class="comment">// 设置关节位置</span></span><br><span class="line">      <span class="keyword">var</span> frontX = <span class="built_in">this</span>.frontBody.getPositionX();</span><br><span class="line">      <span class="keyword">var</span> frontY = <span class="built_in">this</span>.frontBody.getPositionY();</span><br><span class="line">      <span class="keyword">var</span> frontWidth = <span class="built_in">this</span>.frontBody.width;</span><br><span class="line">      <span class="keyword">var</span> frontHeight = <span class="built_in">this</span>.frontBody.height;</span><br><span class="line">      <span class="keyword">var</span> width = <span class="built_in">this</span>.width;</span><br><span class="line">      <span class="keyword">var</span> height = <span class="built_in">this</span>.height;</span><br><span class="line">      <span class="keyword">switch</span> (<span class="built_in">this</span>.frontBody.direction) &#123;</span><br><span class="line">          <span class="comment">// 根据父关节的当前移动方向,决定此关节的位置</span></span><br><span class="line">          <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// 上</span></span><br><span class="line">              <span class="built_in">this</span>.setPosition(frontX, frontY - frontHeight / <span class="number">2</span> - height / <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// 下</span></span><br><span class="line">              <span class="built_in">this</span>.setPosition(frontX, frontY + frontHeight / <span class="number">2</span> + height / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// 左</span></span><br><span class="line">              <span class="built_in">this</span>.setPosition(frontX + frontWidth / <span class="number">2</span> + width / <span class="number">2</span> + <span class="number">1</span>, frontY);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// 右</span></span><br><span class="line">              <span class="built_in">this</span>.setPosition(frontX - frontWidth / <span class="number">2</span> - width / <span class="number">2</span> - <span class="number">1</span>, frontY);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了这三个属性，每一个节点还应该有最重要的游戏逻辑——move方法，每一个关节分别调用move方法，从游戏场景中就能看到整条蛇按照预定方向进行移动，而整条蛇的运动方向就是跟着头部关节的方向走，头部关节的方向则通过点击屏幕区域控制。<br>在move方法中，我们需要做以下事情：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.按照关节的下次移动方向移动本身长度的像素的距离</span><br><span class="line">2.如果是头部关节，需要改变关节纹理</span><br></pre></td></tr></table></figure><p>同时，如果是头部关节，我们还需要判断以下三个临界条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.头部关节是否触碰到屏幕边界</span><br><span class="line">2.头部关节是否吃到屏幕中的豆子</span><br><span class="line">3.头部关节是否触碰到自身关节</span><br></pre></td></tr></table></figure><p>其中1、3条件达成，则判定游戏结束，2条件达成，则能增加游戏分数，并且游戏继续。<br>move方法代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关节移动方法</span></span><br><span class="line">move: <span class="function"><span class="keyword">function</span> (<span class="params">layer</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> star = layer.star;</span><br><span class="line">    <span class="keyword">var</span> direct;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.frontBody == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 头部关节按照自身的下次方向行走</span></span><br><span class="line">        direct = <span class="built_in">this</span>.nextDirection;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 身体关节按照父关节的当前方向行走,并将福关节的当前方向设置为自身的下次方向</span></span><br><span class="line">        <span class="built_in">this</span>.nextDirection = direct = <span class="built_in">this</span>.frontBody.direction;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> (direct) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// 上</span></span><br><span class="line">            <span class="built_in">this</span>.setPosition(<span class="built_in">this</span>.getPositionX(), <span class="built_in">this</span>.getPositionY() + Constants.speed);</span><br><span class="line">            <span class="comment">// this.runAction(cc.moveBy(Constants.frequency, cc.p(0, Constants.speed), 0))</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// 下</span></span><br><span class="line">            <span class="built_in">this</span>.setPosition(<span class="built_in">this</span>.getPositionX(), <span class="built_in">this</span>.getPositionY() - Constants.speed);</span><br><span class="line">            <span class="comment">// this.runAction(cc.moveBy(Constants.frequency, cc.p(0, -Constants.speed), 0))</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// 左</span></span><br><span class="line">            <span class="built_in">this</span>.setPosition(<span class="built_in">this</span>.getPositionX() - Constants.speed, <span class="built_in">this</span>.getPositionY());</span><br><span class="line">            <span class="comment">// this.runAction(cc.moveBy(Constants.frequency, cc.p(-Constants.speed, 0), 0))</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// 右</span></span><br><span class="line">            <span class="built_in">this</span>.setPosition(<span class="built_in">this</span>.getPositionX() + Constants.speed, <span class="built_in">this</span>.getPositionY());</span><br><span class="line">            <span class="comment">// this.runAction(cc.moveBy(Constants.frequency, cc.p(Constants.speed, 0), 0))</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.frontBody == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="built_in">this</span>.nextDirection) &#123;</span><br><span class="line">            <span class="comment">// 头部关节需要设置头部不同方向的纹理</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// 上</span></span><br><span class="line">                <span class="built_in">this</span>.setTexture(res.head_up);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// 下</span></span><br><span class="line">                <span class="built_in">this</span>.setTexture(res.head_down);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// 左</span></span><br><span class="line">                <span class="built_in">this</span>.setTexture(res.head_left);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// 右</span></span><br><span class="line">                <span class="built_in">this</span>.setTexture(res.head_right);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 头部关节判断是否触碰到边界</span></span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">this</span>.getPositionX() &gt; size.width - <span class="built_in">this</span>.width / <span class="number">2</span>)</span><br><span class="line">            || (<span class="built_in">this</span>.getPositionX() &lt; <span class="built_in">this</span>.width / <span class="number">2</span>)</span><br><span class="line">            || (<span class="built_in">this</span>.getPositionY() &gt; size.height - <span class="built_in">this</span>.height / <span class="number">2</span>)</span><br><span class="line">            || (<span class="built_in">this</span>.getPositionY() &lt; <span class="built_in">this</span>.height / <span class="number">2</span>)) &#123;</span><br><span class="line">            <span class="comment">// 判断触碰边界</span></span><br><span class="line">            cc.log(<span class="string">&quot;game over&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否触碰到自己身体关节</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> index <span class="keyword">in</span> layer.bodys) &#123;</span><br><span class="line">            <span class="keyword">if</span> (layer.bodys[index] != <span class="built_in">this</span> &amp;&amp; cc.rectIntersectsRect(<span class="built_in">this</span>.getBoundingBox(), layer.bodys[index].getBoundingBox())) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否吃到星星</span></span><br><span class="line">        <span class="keyword">if</span> (star != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cc.rectIntersectsRect(<span class="built_in">this</span>.getBoundingBox(), star.getBoundingBox())) &#123;</span><br><span class="line">                star.runAction(</span><br><span class="line">                    cc.sequence(cc.spawn(</span><br><span class="line">                        cc.scaleTo(<span class="number">0.2</span>, <span class="number">3</span>),</span><br><span class="line">                        cc.fadeOut(<span class="number">0.2</span>)</span><br><span class="line">                    ), cc.callFunc(<span class="function"><span class="keyword">function</span> (<span class="params">star</span>) </span>&#123;</span><br><span class="line">                        star.removeFromParent();</span><br><span class="line">                    &#125;, star))</span><br><span class="line">                );</span><br><span class="line">                <span class="comment">// 清除星星</span></span><br><span class="line">                layer.star = <span class="literal">null</span>;</span><br><span class="line">                <span class="comment">// 添加身体</span></span><br><span class="line">                layer.canNewBody = <span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 改变分数</span></span><br><span class="line">                layer.score.setString(<span class="string">&quot;&quot;</span> + (<span class="built_in">Number</span>(layer.score.getString()) + <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">3</span> + <span class="number">1</span>)));</span><br><span class="line">                layer.score.runAction(cc.sequence(cc.scaleTo(<span class="number">0.1</span>, <span class="number">2</span>), cc.scaleTo(<span class="number">0.1</span>, <span class="number">0.5</span>), cc.scaleTo(<span class="number">0.1</span>, <span class="number">1</span>)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="游戏场景类"><a href="#游戏场景类" class="headerlink" title="游戏场景类"></a>游戏场景类</h4><p>在游戏场景中我们需要以下几个变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 贪吃蛇数组：用于存储贪吃蛇所有的关节节点</span><br><span class="line">2. 贪吃蛇尾部：每添加一个关节节点 ，都将此变量指向这个新加的节点，以便下次继续再尾部节点添加</span><br><span class="line">3. 吃的星星：屏幕中随机产生的星星，用于判断头部关节是否与它产生碰撞</span><br><span class="line">4. 是否添加节点：如果在定时任务中判断到吃到星星，那么可以次变量为1，代表可以添加一个节点</span><br><span class="line">5. 分数：存储游戏中累加的分数</span><br></pre></td></tr></table></figure><p>在cc.Layer的构造函数中对以上变量进行初始化，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> GameLayer = cc.Layer.extend(&#123;</span><br><span class="line">  bodys: [],<span class="comment">// snake body</span></span><br><span class="line">  tail: <span class="literal">null</span>,<span class="comment">// snake tail</span></span><br><span class="line">  star: <span class="literal">null</span>,<span class="comment">// star</span></span><br><span class="line">  canNewBody: <span class="number">0</span>,<span class="comment">// 0-无,1-有</span></span><br><span class="line">  score: <span class="literal">null</span>,<span class="comment">// 分数Label</span></span><br><span class="line">  ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 初始化全局参数</span></span><br><span class="line">      <span class="built_in">this</span>._super();</span><br><span class="line">      <span class="built_in">this</span>.bodys = [];</span><br><span class="line">      <span class="built_in">this</span>.canNewBody = <span class="number">0</span>;</span><br><span class="line">      <span class="built_in">this</span>.star = <span class="literal">null</span>;</span><br><span class="line">      <span class="built_in">this</span>.tail = <span class="literal">null</span>;</span><br><span class="line">      <span class="built_in">this</span>.score = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后，我们首先需要在场景中绘制出一条蛇，初始化定义为1个头部关节，5个身体关节，由于我们对关节类做了很好的封装，所以初始化一条蛇的代码很简单，我们在onEnter方法中进行初始化，如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化一条蛇</span></span><br><span class="line"><span class="comment">// 初始化头部</span></span><br><span class="line"><span class="keyword">var</span> head = <span class="keyword">new</span> SnakeBody(<span class="literal">null</span>, <span class="number">4</span>);</span><br><span class="line">head.setPosition(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line"><span class="built_in">this</span>.addChild(head);</span><br><span class="line"><span class="built_in">this</span>.bodys.push(head);</span><br><span class="line">head.setTag(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">this</span>.tail = head;</span><br><span class="line"><span class="comment">// 循环添加5个身体</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> node = <span class="keyword">new</span> SnakeBody(<span class="built_in">this</span>.tail, <span class="built_in">this</span>.tail.direction);</span><br><span class="line">    <span class="built_in">this</span>.addChild(node);</span><br><span class="line">    <span class="built_in">this</span>.bodys.push(node);</span><br><span class="line">    <span class="built_in">this</span>.tail = node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化完了之后蛇是不会动的，如何让它动起来呢，我们就要用到在关节类中封装的move方法了，我们每隔一个时间，对所有的关节类执行一次move方法，就能实现蛇的移动，首先在onEnter中添加定时任务：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 蛇移动的定时任务</span></span><br><span class="line"><span class="built_in">this</span>.schedule(<span class="built_in">this</span>.snakeMove, Constants.frequency);</span><br></pre></td></tr></table></figure><p>在这个snakeMove定时调用的方法中，我们要写出所有关节移动的逻辑，在这个方法中，我们需要完成以下几件事：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 遍历蛇的所有关节，每个关节执行一遍move方法，并在move完了之后，将下次移动方法变为本次移动方向</span><br><span class="line">2. 如果需要新增关节，在遍历完成之后，新增一个关节类，并将其父节点指向之前的蛇尾节点，并把蛇尾指向新加的这个关节</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 蛇关节移动方法</span></span><br><span class="line">snakeMove: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> index <span class="keyword">in</span> <span class="built_in">this</span>.bodys) &#123;</span><br><span class="line">        <span class="comment">// 循环执行移动方法,并返回移动结果,false即视为游戏结束</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.bodys[index].move(<span class="built_in">this</span>)) &#123;</span><br><span class="line">            <span class="comment">// 执行移动方法,移动失败,游戏结束</span></span><br><span class="line">            <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.snakeMove);</span><br><span class="line">            <span class="built_in">this</span>.unschedule(<span class="built_in">this</span>.updateStar);</span><br><span class="line">            <span class="keyword">var</span> overScene = <span class="keyword">new</span> OverScene(<span class="built_in">Number</span>(<span class="built_in">this</span>.score.getString()), <span class="literal">false</span>);</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, overScene));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> index <span class="keyword">in</span> <span class="built_in">this</span>.bodys) &#123;</span><br><span class="line">        <span class="comment">// 本轮所有关节移动结束,所有节点的当前方向赋值为下一次的方向</span></span><br><span class="line">        <span class="built_in">this</span>.bodys[index].direction = <span class="built_in">this</span>.bodys[index].nextDirection;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.canNewBody == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果新增关节为1,增加关节</span></span><br><span class="line">        <span class="keyword">var</span> node = <span class="keyword">new</span> SnakeBody(<span class="built_in">this</span>.tail, <span class="built_in">this</span>.tail.direction);</span><br><span class="line">        <span class="built_in">this</span>.addChild(node);</span><br><span class="line">        <span class="built_in">this</span>.bodys.push(node);</span><br><span class="line">        <span class="built_in">this</span>.tail = node;</span><br><span class="line">        <span class="built_in">this</span>.canNewBody = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前为止这条蛇是只会按照我们初始化的方向一直走到碰壁，然后游戏结束的，如何改变蛇的运动轨迹呢？前面说到了，蛇头部节点的下次移动方向的改变，即可对整个蛇的移动轨迹进行改变，这里我们可以通过点击屏幕实现蛇头的下次移动方向的改变。<br>首先在onEnter方法中添加触摸事件监听：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加屏幕触摸事件</span></span><br><span class="line">cc.eventManager.addListener(&#123;</span><br><span class="line">    event: cc.EventListener.TOUCH_ONE_BY_ONE,</span><br><span class="line">    swallowTouches: <span class="literal">true</span>,</span><br><span class="line">    onTouchBegan: <span class="built_in">this</span>.touchbegan,</span><br><span class="line">    onTouchMoved: <span class="built_in">this</span>.touchmoved,</span><br><span class="line">    onTouchEnded: <span class="built_in">this</span>.touchended</span><br><span class="line">&#125;, <span class="built_in">this</span>);</span><br></pre></td></tr></table></figure><p>然后在onTouchBegan方法中实现点击事件，我们可以允许点击有一个10像素的误差：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击转向</span></span><br><span class="line">touchbegan: <span class="function"><span class="keyword">function</span> (<span class="params">touch, event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = touch.getLocation().x;</span><br><span class="line">    <span class="keyword">var</span> y = touch.getLocation().y;</span><br><span class="line">    <span class="keyword">var</span> head = event.getCurrentTarget().getChildByTag(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> headX = head.getPositionX();</span><br><span class="line">    <span class="keyword">var</span> headY = head.getPositionY();</span><br><span class="line">    <span class="keyword">switch</span> (head.direction) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// 上</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// 下</span></span><br><span class="line">            <span class="keyword">if</span> (x &lt;= headX - Constants.errDistance) &#123;<span class="comment">// 转左</span></span><br><span class="line">                head.nextDirection = <span class="number">3</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= headX + Constants.errDistance) &#123;<span class="comment">// 转右</span></span><br><span class="line">                head.nextDirection = <span class="number">4</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// 左</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// 右</span></span><br><span class="line">            <span class="keyword">if</span> (y &lt;= headY - Constants.errDistance) &#123;<span class="comment">// 转下</span></span><br><span class="line">                head.nextDirection = <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y &gt;= headY + Constants.errDistance) &#123;<span class="comment">// 转上</span></span><br><span class="line">                head.nextDirection = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后我们只差最后一步，就是蛇要吃的星星，我们可以在屏幕中任意位置随机产生一颗星星（又或者叫豆子，这都无所谓），只要这个星星满足以下条件，那么它就可以被绘制出来，否则我们需要重新随机这个星星的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 星星在游戏场景的屏幕范围内</span><br><span class="line">2. 星星不能与蛇的身体部分重叠</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新星星</span></span><br><span class="line">updateStar: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.star == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.star = <span class="keyword">new</span> cc.Sprite(res.bean);</span><br><span class="line">        <span class="keyword">var</span> randomX = <span class="built_in">Math</span>.random() * (cc.winSize.width - <span class="built_in">this</span>.star.width) + <span class="built_in">this</span>.star.width;</span><br><span class="line">        <span class="keyword">var</span> randomY = <span class="built_in">Math</span>.random() * (cc.winSize.height - <span class="built_in">this</span>.star.width) + <span class="built_in">this</span>.star.height;</span><br><span class="line">        <span class="built_in">this</span>.star.setPosition(randomX, randomY);</span><br><span class="line">        <span class="built_in">this</span>.addChild(<span class="built_in">this</span>.star);</span><br><span class="line">        <span class="comment">// 产生的星星只要在屏幕外,或与蛇的身体部分重叠,则本次任务不产生</span></span><br><span class="line">        <span class="keyword">if</span> ((randomX &gt; cc.winSize.width - <span class="built_in">this</span>.star.width / <span class="number">2</span>)</span><br><span class="line">            || (randomX &lt; <span class="built_in">this</span>.star.width / <span class="number">2</span>)</span><br><span class="line">            || (randomY &gt; cc.winSize.height - <span class="built_in">this</span>.star.height / <span class="number">2</span>)</span><br><span class="line">            || (randomY &lt; <span class="built_in">this</span>.star.height / <span class="number">2</span>)) &#123;</span><br><span class="line">            cc.log(<span class="string">&quot;update star:out of screen&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.removeChild(<span class="built_in">this</span>.star);</span><br><span class="line">            <span class="built_in">this</span>.star = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> index <span class="keyword">in</span> <span class="built_in">this</span>.bodys) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cc.rectIntersectsRect(<span class="built_in">this</span>.bodys[index].getBoundingBox(), <span class="built_in">this</span>.star.getBoundingBox())) &#123;</span><br><span class="line">                cc.log(<span class="string">&quot;update star:intersect with self&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.removeChild(<span class="built_in">this</span>.star);</span><br><span class="line">                <span class="built_in">this</span>.star = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，游戏的主要逻辑就大功告成了！贪吃蛇不仅能在屏幕中游走，还能吃星星，并且碰到自身或边缘都会GameOver！</p><h4 id="开始-结束场景类"><a href="#开始-结束场景类" class="headerlink" title="开始/结束场景类"></a>开始/结束场景类</h4><p>说到GameOver，那么就必须要有一个Over的场景类了，毕竟有了开始场景，游戏场景和结束场景，才算得上一个完成的游戏流程嘛，结束场景类的实现很简单，只需要把游戏场景中获得的分数传递进来，然后在Label中展示即可，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> OverLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite: <span class="literal">null</span>,</span><br><span class="line">    score: <span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">score</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line">        <span class="keyword">var</span> over = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;Game Over,你的分数是:&quot;</span> + <span class="built_in">this</span>.score, <span class="string">&quot;Arial&quot;</span>, <span class="number">38</span>);</span><br><span class="line">        over.setPosition(size.width / <span class="number">2</span>, size.height / <span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(over);</span><br><span class="line">        over.runAction(cc.sequence(cc.scaleTo(<span class="number">0.2</span>, <span class="number">2</span>), cc.scaleTo(<span class="number">0.2</span>, <span class="number">0.5</span>), cc.scaleTo(<span class="number">0.2</span>, <span class="number">1</span>)));</span><br><span class="line">        <span class="keyword">var</span> start = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;再来一次&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> HelloWorldScene()));</span><br><span class="line">        &#125;, <span class="built_in">this</span>);</span><br><span class="line">        start.setPosition(over.getPositionX(), over.getPositionY() - over.height / <span class="number">2</span> - <span class="number">50</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(start);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> OverScene = cc.Scene.extend(&#123;</span><br><span class="line">    score: <span class="number">0</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params">score</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> OverLayer(<span class="built_in">this</span>.score);</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>与结束场景一样，开始场景也只需一个Label一个Menu即可，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite: <span class="literal">null</span>,</span><br><span class="line">    ctor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line">        <span class="keyword">var</span> helloLabel = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;贪吃蛇&quot;</span>, <span class="string">&quot;Arial&quot;</span>, <span class="number">38</span>);</span><br><span class="line">        helloLabel.x = size.width / <span class="number">2</span>;</span><br><span class="line">        helloLabel.y = size.height / <span class="number">2</span> + <span class="number">200</span>;</span><br><span class="line">        <span class="built_in">this</span>.addChild(helloLabel, <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> start = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;开始游戏&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> cc.TransitionFade(<span class="number">1</span>, <span class="keyword">new</span> GameScene()));</span><br><span class="line">        &#125;, <span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(start);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> HelloWorldLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样，我们就能形成一个完成游戏流程了，游戏加载进入游戏开始场景，点击开始游戏进行如主游戏场景，游戏结束后进入结束场景，结束场景点击“再来一次”又可以回到开始场景。</p><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p>最后的运行效果如下<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/snake.gif" alt="贪吃蛇效果图"><br>通过CVP平台的项目托管可看到实际运行效果，地址如下：<br><a href="http://www.cocoscvp.com/usercode/2e17b3cd9586a574140e0bb765bad21673fc7686/">http://www.cocoscvp.com/usercode/2e17b3cd9586a574140e0bb765bad21673fc7686/</a></p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>所有源代码均上传到github，欢迎交流学习，地址：<br><a href="https://github.com/hjcenry/snake">https://github.com/hjcenry/snake</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;相信贪吃蛇大家都玩儿过，我对贪吃蛇的印象就是在电子词典上，一只像素蛇在屏幕游走，饥渴难耐，看着豆子就要去吃，吃到豆子就会长一节，当蛇的身体越来越长的时候，它才发现这个世界变了，每走一步，都是寸步难行。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="贪吃蛇" scheme="http://www.hjcenry.com/tags/%E8%B4%AA%E5%90%83%E8%9B%87/"/>
    
  </entry>
  
  <entry>
    <title>CVP认证学习笔记--(何小成)骨骼动画的制作</title>
    <link href="http://www.hjcenry.com/2016/05/10/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
    <id>http://www.hjcenry.com/2016/05/10/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E7%9A%84%E5%88%B6%E4%BD%9C/</id>
    <published>2016-05-10T14:44:00.000Z</published>
    <updated>2020-09-29T03:25:11.717Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要复习下骨骼动画的制作过程，<a href="http://hjcenry.github.io/2016/05/06/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)023--%E5%8A%A0%E8%BD%BD%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/">上一篇文章</a>简单介绍了cocos中对于骨骼动画的使用，本文主要从骨骼动画制作的角度来讲解。<a id="more"></a></p><h3 id="导入资源"><a href="#导入资源" class="headerlink" title="导入资源"></a>导入资源</h3><p>制作之前准备好所需要的图片资源，然后倒入到cocos studio中，如下图：<br><img src="http://cdn.cocimg.com/bbs/attachment/Fid_72/72_319828_1a202fb1ffd1025.png" alt="导入资源"></p><h3 id="添加皮肤"><a href="#添加皮肤" class="headerlink" title="添加皮肤"></a>添加皮肤</h3><p>资源中的皮肤一个一个拖放到场景中，使小图片大致能拼出来一个完整的图片，如下图：<br><img src="http://cdn.cocimg.com/bbs/attachment/Fid_72/72_319828_55529c9535d5bb4.png" alt="添加皮肤"></p><h3 id="添加骨骼"><a href="#添加骨骼" class="headerlink" title="添加骨骼"></a>添加骨骼</h3><p>根据人物的骨骼特征，为皮肤添加骨骼，如下图：<br><img src="http://cdn.cocimg.com/bbs/attachment/Fid_72/72_319828_3ad23acff07741b.png" alt="添加骨骼"></p><h3 id="绑定父关系"><a href="#绑定父关系" class="headerlink" title="绑定父关系"></a>绑定父关系</h3><p>把具有相互关系的骨骼绑定起来，使骨骼之间能够作为整体进行动画，如头部应该绑定身体为父关系，而手腕应该绑定手臂为父关系，如下图：<br><img src="http://cdn.cocimg.com/bbs/attachment/Fid_72/72_319828_a02834c9d8347ca.png" alt="绑定父关系"></p><h3 id="制作动画"><a href="#制作动画" class="headerlink" title="制作动画"></a>制作动画</h3><p>骨骼绑定之后，就可以编辑动画，动画编辑即选择选择动画模式，然后选择相应的图层，在下面时间轴上的关键帧上进行改变，中间的补间动画cocos studio会自动创建，如下图：<br><img src="http://cdn.cocimg.com/bbs/attachment/Fid_72/72_319828_40c0db20e072450.png" alt="制作动画"></p><h3 id="导出资源"><a href="#导出资源" class="headerlink" title="导出资源"></a>导出资源</h3><p>确定制作完成，并经过了精细的调整之后，就可以导出动画了，导出的操作很简单，即选择文件，然后选择导出项目，如下图：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/daochu.png" alt="导出资源"><br>导出之后可以看到相应的文件夹下有png，plist和json三个文件，即上一篇文章中说到的cocos中需要使用到的骨骼动画资源，至此，骨骼动画制作完成！ 整个过程感觉是一个挺细心的活，作为一个程序来说，做了一个骨骼动画之后，我真心佩服美术，那些游戏中无论活灵活现的主人公，还是酷炫吊炸天特效，都是美术们这样一帧一帧调出来的，真的是我心目中的艺术家，衷心的点个赞！</p><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p>制作完之后，我加在了上一节课的作业的开始界面和帮助界面中，如下图：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/1111.gif" alt="效果图"><br>作业地址：<a href="http://www.cocoscvp.com/usercode/b09ecc9894fe6ab8a1ba17f5d5348b9a215038a6/">http://www.cocoscvp.com/usercode/b09ecc9894fe6ab8a1ba17f5d5348b9a215038a6/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文主要复习下骨骼动画的制作过程，&lt;a href=&quot;http://hjcenry.github.io/2016/05/06/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)023--%E5%8A%A0%E8%BD%BD%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/&quot;&gt;上一篇文章&lt;/a&gt;简单介绍了cocos中对于骨骼动画的使用，本文主要从骨骼动画制作的角度来讲解。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
  </entry>
  
  <entry>
    <title>CVP认证学习笔记--(何小成)025--音乐和音效</title>
    <link href="http://www.hjcenry.com/2016/05/07/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)025--%E9%9F%B3%E4%B9%90%E5%92%8C%E9%9F%B3%E6%95%88/"/>
    <id>http://www.hjcenry.com/2016/05/07/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)025--%E9%9F%B3%E4%B9%90%E5%92%8C%E9%9F%B3%E6%95%88/</id>
    <published>2016-05-07T07:51:00.000Z</published>
    <updated>2020-09-29T03:25:11.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>本节课内容是cocos中音乐和音效的使用，游戏中经常会有游戏音乐和游戏音效，并且好的音乐音效也是一款游戏的一个卖点，在cocos中，对音乐和音效做了良好的封装，使用起来只需一两句代码就能实现，本节课介绍了cocos中音乐音效的开始暂停。<a id="more"></a></p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>cocos中的音乐音效处理被封装在了audioEngine中，通过使用audioEngine就可以调用相应的音乐音效API，API文档地址是：<a href="http://www.cocos.com/doc/jsdoc/symbols/cc.audioEngine.html">http://www.cocos.com/doc/jsdoc/symbols/cc.audioEngine.html</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 结束音乐和音效</span></span><br><span class="line">cc.audioEngine.end()</span><br><span class="line"><span class="comment">// 音效音量最大是1.0，最小是0.0</span></span><br><span class="line">cc.audioEngine.getEffectsVolume()</span><br><span class="line"><span class="comment">// 音乐的最大音量是1.0，最小音量是0.0  </span></span><br><span class="line">cc.audioEngine.getMusicVolume()</span><br><span class="line"><span class="comment">// 判断音乐是否在播放</span></span><br><span class="line">cc.audioEngine.isMusicPlaying()</span><br><span class="line"><span class="comment">// 暂停播放所有音效</span></span><br><span class="line">cc.audioEngine.pauseAllEffects()</span><br><span class="line"><span class="comment">// 暂停播放音效   </span></span><br><span class="line">cc.audioEngine.pauseEffect()</span><br><span class="line"><span class="comment">// 暂停播放音乐  </span></span><br><span class="line">cc.audioEngine.pauseMusic()</span><br><span class="line"><span class="comment">// 播放音效  </span></span><br><span class="line">cc.audioEngine.playEffect(url, loop)</span><br><span class="line"><span class="comment">// 播放音乐  </span></span><br><span class="line">cc.audioEngine.playMusic(url, loop)</span><br><span class="line"><span class="comment">// 重新播放所有音效 </span></span><br><span class="line">cc.audioEngine.resumeAllEffects()</span><br><span class="line"><span class="comment">// 重新播放音效  </span></span><br><span class="line">cc.audioEngine.resumeEffect()</span><br><span class="line"><span class="comment">// 重新播放音乐   </span></span><br><span class="line">cc.audioEngine.resumeMusic()</span><br><span class="line"><span class="comment">// 回放播放的音乐  </span></span><br><span class="line">cc.audioEngine.rewindMusic()</span><br><span class="line"><span class="comment">// 设置音效的音量    </span></span><br><span class="line">cc.audioEngine.setEffectsVolume(volume)</span><br><span class="line"><span class="comment">// 设置音乐的音量</span></span><br><span class="line">cc.audioEngine.setMusicVolume(volume)</span><br><span class="line"><span class="comment">// 停止播放所有音效  </span></span><br><span class="line">cc.audioEngine.stopAllEffects()</span><br><span class="line"><span class="comment">// 停止播放音效</span></span><br><span class="line">cc.audioEngine.stopEffect()</span><br><span class="line"><span class="comment">// 停止播放音乐 </span></span><br><span class="line">cc.audioEngine.stopMusic(releaseData)</span><br><span class="line"><span class="comment">// 从内部缓冲区释放预加载的音效   </span></span><br><span class="line">cc.audioEngine.unloadEffect(url)</span><br><span class="line"><span class="comment">// 标示背景音乐是否可以播放   </span></span><br><span class="line">cc.audioEngine.willPlayMusic()</span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>本节作业：<br>本节课作业要求实现点击屏幕播放音效，我进行了扩展，综合前面所学，做了一个打飞机的小demo，由于不是一个完整demo，所有有很多bug也没去处理，其中也实现了游戏中的音乐音效播放。<br>作业代码实现如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> soundID=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite:<span class="literal">null</span>,</span><br><span class="line">    music:<span class="number">1</span>,<span class="comment">// 0停止，1播放</span></span><br><span class="line">    state:<span class="number">0</span>,<span class="comment">//0静止，1攻击</span></span><br><span class="line">    npcs:[],<span class="comment">// 敌机数组</span></span><br><span class="line">    bullets:[],<span class="comment">// 子弹数组</span></span><br><span class="line">    game:<span class="number">0</span>,<span class="comment">// 0进行中,1lose</span></span><br><span class="line">    score:<span class="literal">null</span>,<span class="comment">// 分数控件</span></span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//////////////////////////////</span></span><br><span class="line">        <span class="comment">// 1. super init first</span></span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> itemstartbg=<span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;🚫&quot;</span>,<span class="built_in">this</span>.callback,<span class="built_in">this</span>);</span><br><span class="line">        itemstartbg.setTag(<span class="number">10</span>);</span><br><span class="line">        itemstartbg.setPositionY(cc.winSize.height-itemstartbg.height/<span class="number">2</span>);</span><br><span class="line">        itemstartbg.setPositionX(itemstartbg.width/<span class="number">2</span>+<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">var</span> menu=<span class="keyword">new</span> cc.Menu(itemstartbg);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> plane = <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/HelloWorld.png&quot;</span>);</span><br><span class="line">        plane.setPosition(cc.winSize.width/<span class="number">2</span>,<span class="number">80</span>);</span><br><span class="line">        plane.setScale(<span class="number">0.5</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(plane);</span><br><span class="line">        plane.setTag(<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.createBullet,<span class="number">0.2</span>);</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.createNpc,<span class="number">0.5</span>);</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.collision);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    callback:<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;<span class="comment">// 背景音乐按钮</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.music==<span class="number">0</span>)&#123;</span><br><span class="line">            cc.log(<span class="string">&quot;playMusic&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.music=<span class="number">1</span>;</span><br><span class="line">            cc.audioEngine.playMusic(<span class="string">&quot;res/bg.mp3&quot;</span>,<span class="literal">true</span>);<span class="comment">//循环播放</span></span><br><span class="line">            obj.setString(<span class="string">&quot;🚫&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cc.log(<span class="string">&quot;stopMusic&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.music=<span class="number">0</span>;</span><br><span class="line">            cc.audioEngine.stopMusic();<span class="comment">//停止音乐</span></span><br><span class="line">            obj.setString(<span class="string">&quot;🎵&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 游戏逻辑判断</span></span><br><span class="line">    collision:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.game==<span class="number">1</span>)&#123;</span><br><span class="line">            cc.audioEngine.stopMusic();</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> OverScene());</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> <span class="built_in">this</span>.npcs)&#123;</span><br><span class="line">            <span class="keyword">var</span> npc = <span class="built_in">this</span>.npcs[j];</span><br><span class="line">            <span class="comment">//  判断游戏是否结束</span></span><br><span class="line">            <span class="keyword">var</span> plane = <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(cc.rectIntersectsRect(npc.getBoundingBox(),plane.getBoundingBox()))&#123;</span><br><span class="line">                cc.log(<span class="string">&quot;over&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.game=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> <span class="built_in">this</span>.bullets)&#123;</span><br><span class="line">                <span class="keyword">var</span> bullet = <span class="built_in">this</span>.bullets[i];</span><br><span class="line">                <span class="comment">// 判断是否击中敌机，通过rectIntersectsRect进行矩形碰撞判断</span></span><br><span class="line">                <span class="keyword">if</span>(cc.rectIntersectsRect(bullet.getBoundingBox(),npc.getBoundingBox()))&#123;</span><br><span class="line">                    cc.log(<span class="string">&quot;crash&quot;</span>);</span><br><span class="line">                    bullet.removeFromParent();</span><br><span class="line">                    <span class="built_in">this</span>.npcs.splice(j,<span class="number">1</span>);</span><br><span class="line">                    <span class="built_in">this</span>.bullets.splice(i,<span class="number">1</span>);</span><br><span class="line">                    npc.runAction(</span><br><span class="line">                        cc.sequence(</span><br><span class="line">                            cc.scaleTo(<span class="number">0.2</span>,<span class="number">0.5</span>),</span><br><span class="line">                            cc.spawn(</span><br><span class="line">                                cc.rotateBy(<span class="number">0.5</span>,<span class="number">720</span>),</span><br><span class="line">                                cc.scaleTo(<span class="number">0.5</span>,<span class="number">0</span>)</span><br><span class="line">                            ),</span><br><span class="line">                            cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">npc</span>)</span>&#123;</span><br><span class="line">                                npc.removeFromParent();</span><br><span class="line">                            &#125;,npc)</span><br><span class="line">                        )</span><br><span class="line">                    );</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    createNpc:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> plane = <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/HelloWorld.png&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> x = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*cc.winSize.width);</span><br><span class="line">        plane.setPosition(x,cc.winSize.height+plane.height/<span class="number">2</span>);</span><br><span class="line">        plane.setScale(<span class="number">0.2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(plane);</span><br><span class="line">        <span class="keyword">var</span> time = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.pow(x-x,<span class="number">2</span>)+<span class="built_in">Math</span>.pow(<span class="number">0</span>-plane.height/<span class="number">2</span>-cc.winSize.height+plane.height/<span class="number">2</span>,<span class="number">2</span>)))/<span class="number">100</span>;</span><br><span class="line">        plane.runAction(</span><br><span class="line">            cc.sequence(</span><br><span class="line">                cc.moveTo(time,x,<span class="number">0</span>-plane.height/<span class="number">2</span>),</span><br><span class="line">                cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">plane</span>)</span>&#123;</span><br><span class="line">                    plane.removeFromParent();</span><br><span class="line">                &#125;,plane)</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        <span class="built_in">this</span>.npcs.push(plane);</span><br><span class="line">    &#125;,</span><br><span class="line">    createBullet:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.state==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> sp = <span class="keyword">new</span> cc.Sprite(<span class="string">&quot;res/logo.png&quot;</span>);</span><br><span class="line">            cc.audioEngine.playEffect(<span class="string">&quot;res/click.wav&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> x = <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>).getPositionX();</span><br><span class="line">            <span class="keyword">var</span> y = <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>).getPositionY()+<span class="built_in">this</span>.getChildByTag(<span class="number">1</span>).height/<span class="number">2</span>;</span><br><span class="line">            sp.setPosition(x,y);</span><br><span class="line">            <span class="built_in">this</span>.addChild(sp);</span><br><span class="line">            sp.setScale(<span class="number">0.3</span>);</span><br><span class="line">            <span class="keyword">var</span> time = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.pow(x-x,<span class="number">2</span>)+<span class="built_in">Math</span>.pow(cc.winSize.height+sp.height/<span class="number">2</span>-y,<span class="number">2</span>)))/<span class="number">100</span>;</span><br><span class="line">            sp.runAction(</span><br><span class="line">                cc.spawn(</span><br><span class="line">                    cc.rotateBy(time,<span class="number">720</span>).repeatForever(),</span><br><span class="line">                    cc.sequence(</span><br><span class="line">                        cc.moveTo(time,x,cc.winSize.height+sp.height/<span class="number">2</span>),</span><br><span class="line">                        cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">sp</span>)</span>&#123;</span><br><span class="line">                            sp.removeFromParent();</span><br><span class="line">                        &#125;,sp)</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">            <span class="built_in">this</span>.bullets.push(sp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        cc.eventManager.addListener(&#123;</span><br><span class="line">            event:cc.EventListener.TOUCH_ONE_BY_ONE,</span><br><span class="line">            swallowTouches:<span class="literal">true</span>,</span><br><span class="line">            onTouchBegan:<span class="built_in">this</span>.touchbegan,</span><br><span class="line">            onTouchMoved:<span class="built_in">this</span>.touchMoved,</span><br><span class="line">            onTouchEnded:<span class="built_in">this</span>.touchEnded</span><br><span class="line">        &#125;,<span class="built_in">this</span>);</span><br><span class="line">        cc.audioEngine.playMusic(<span class="string">&quot;res/bg.mp3&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchbegan:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        event.getCurrentTarget().state=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> x = touch.getLocationX();</span><br><span class="line">        <span class="keyword">var</span> y = touch.getLocationY();</span><br><span class="line">        <span class="keyword">var</span> plane = event.getCurrentTarget().getChildByTag(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> time = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.pow(x-plane.getPositionX(),<span class="number">2</span>)+<span class="built_in">Math</span>.pow(y-plane.getPositionY(),<span class="number">2</span>)))/<span class="number">1000</span>;</span><br><span class="line">        plane.stopAllActions(); </span><br><span class="line">        plane.runAction(cc.moveTo(time,cc.p(x,y)));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchMoved:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = touch.getLocationX();</span><br><span class="line">        <span class="keyword">var</span> y = touch.getLocationY();</span><br><span class="line">        <span class="keyword">var</span> plane = event.getCurrentTarget().getChildByTag(<span class="number">1</span>);</span><br><span class="line">        plane.stopAllActions(); </span><br><span class="line">        plane.setPosition(x,y);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchEnded:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        event.getCurrentTarget().state=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> OverScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> overTxt = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;Game Over&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="number">100</span>);</span><br><span class="line">        overTxt.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(overTxt);</span><br><span class="line">        overTxt.runAction(</span><br><span class="line">            cc.sequence(cc.scaleTo(<span class="number">0.2</span>,<span class="number">1.2</span>),cc.scaleTo(<span class="number">0.2</span>,<span class="number">0.9</span>),cc.scaleTo(<span class="number">0.2</span>,<span class="number">1</span>))    </span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">var</span> backMenu = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;再来一次&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            cc.director.runScene(<span class="keyword">new</span> HelloWorldScene());</span><br><span class="line">        &#125;,<span class="built_in">this</span>);</span><br><span class="line">        backMenu.setPosition(overTxt.getPositionX(),overTxt.getPositionY()<span class="number">-50</span>-backMenu.height/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(backMenu);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> HelloWorldLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><a href="http://www.cocoscvp.com/usercode/2016_05_03/066a65bf1bf65dcd589d18a33ad67990822843c1/">http://www.cocoscvp.com/usercode/2016_05_03/066a65bf1bf65dcd589d18a33ad67990822843c1/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;本节课内容是cocos中音乐和音效的使用，游戏中经常会有游戏音乐和游戏音效，并且好的音乐音效也是一款游戏的一个卖点，在cocos中，对音乐和音效做了良好的封装，使用起来只需一两句代码就能实现，本节课介绍了cocos中音乐音效的开始暂停。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
  </entry>
  
  <entry>
    <title>CVP认证学习笔记--(何小成)024--粒子动画</title>
    <link href="http://www.hjcenry.com/2016/05/07/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)024--%E7%B2%92%E5%AD%90%E5%8A%A8%E7%94%BB/"/>
    <id>http://www.hjcenry.com/2016/05/07/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)024--%E7%B2%92%E5%AD%90%E5%8A%A8%E7%94%BB/</id>
    <published>2016-05-06T16:58:00.000Z</published>
    <updated>2020-09-29T03:25:11.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>本节课介绍如何使用在cocos中使用粒子动画，其中可以使用cocos中包含的11种系统定义好的粒子动画，也可以使用粒子编辑器自定义粒子动画，然后在cocos代码中使用自己定义的粒子动画。<a id="more"></a>系统的11种默认粒子动画我分别截了图，不过粒子动画由于是动画，我截图是静态图，可能效果还是不大明显，大家还是用实际代码来看效果比较好</p><h4 id="爆炸粒子效果"><a href="#爆炸粒子效果" class="headerlink" title="爆炸粒子效果"></a>爆炸粒子效果</h4><p>ParticleExplosion。属于半径模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-12@2x.png" alt="爆炸粒子效果"></p><h4 id="火焰粒子效果"><a href="#火焰粒子效果" class="headerlink" title="火焰粒子效果"></a>火焰粒子效果</h4><p>ParticleFire。属于重力径模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-2@2x.png" alt="火焰粒子效果"></p><h4 id="烟花粒子效果"><a href="#烟花粒子效果" class="headerlink" title="烟花粒子效果"></a>烟花粒子效果</h4><p>ParticleFireworks。属于重力模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-3@2x.png" alt="烟花粒子效果"></p><h4 id="花粒子效果"><a href="#花粒子效果" class="headerlink" title="花粒子效果"></a>花粒子效果</h4><p>ParticleFlower。属于重力模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-4@2x.png" alt="花粒子效果"></p><h4 id="星系粒子效果"><a href="#星系粒子效果" class="headerlink" title="星系粒子效果"></a>星系粒子效果</h4><p>ParticleGalaxy。属于半径模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-5@2x.png" alt="星系粒子效果"></p><h4 id="流星粒子效果"><a href="#流星粒子效果" class="headerlink" title="流星粒子效果"></a>流星粒子效果</h4><p>ParticleMeteor。属于重力模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-6@2x.png" alt="流星粒子效果"></p><h4 id="漩涡粒子效果"><a href="#漩涡粒子效果" class="headerlink" title="漩涡粒子效果"></a>漩涡粒子效果</h4><p>ParticleSpiral。属于半径模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-7@2x.png" alt="漩涡粒子效果"></p><h4 id="雪粒子效果"><a href="#雪粒子效果" class="headerlink" title="雪粒子效果"></a>雪粒子效果</h4><p>ParticleSnow。属于重力模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-8@2x.png" alt="雪粒子效果"></p><h4 id="烟粒子效果"><a href="#烟粒子效果" class="headerlink" title="烟粒子效果"></a>烟粒子效果</h4><p>ParticleSmoke。属于重力模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-9@2x.png" alt="烟粒子效果"></p><h4 id="太阳粒子效果"><a href="#太阳粒子效果" class="headerlink" title="太阳粒子效果"></a>太阳粒子效果</h4><p>ParticleSun。属于重力模式。<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-10@2x.png" alt="太阳粒子效果"></p><h4 id="雨粒子效果"><a href="#雨粒子效果" class="headerlink" title="雨粒子效果"></a>雨粒子效果</h4><p>ParticleRain。属于重力模式<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-11@2x.png" alt="雨粒子效果"></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="制作粒子动画"><a href="#制作粒子动画" class="headerlink" title="制作粒子动画"></a>制作粒子动画</h4><p>如果需要系统的粒子动画不能满足需求，可以使用粒子编辑器自己编辑一个粒子动画，我在mac系统使用的是ParticleDesigner，打开之后，有多种模板可以进行选择，选择完模板之后，再对各种细节进行调整，知道调整出满意的粒子动画，如下图：<br><img src="http://7xnnwn.com1.z0.glb.clouddn.com/QQ20160507-1@2x.png" alt="ParticleDesigner"><br>其中包括了调整面板以及预览面板，当调整结果满意之后，点击导出即可在相应的文件夹下导出程序中所需要的plist文件和png图片。</p><h4 id="创建粒子"><a href="#创建粒子" class="headerlink" title="创建粒子"></a>创建粒子</h4><p>无论是使用系统提供的动画还是自定义的动画，首先需要创建相应的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用自定义粒子动画</span></span><br><span class="line"><span class="keyword">var</span> myp = <span class="keyword">new</span> cc.ParticleSystem(<span class="string">&quot;res/lizi.plist&quot;</span>);</span><br><span class="line"><span class="comment">// 使用系统提供的粒子动画</span></span><br><span class="line"><span class="keyword">var</span> fire = <span class="keyword">new</span> cc.ParticleFire();</span><br></pre></td></tr></table></figure><h4 id="设置纹理"><a href="#设置纹理" class="headerlink" title="设置纹理"></a>设置纹理</h4><p>系统粒子动画需要为动画设置纹理，自定义粒子动画一般会将粒子动画使用的纹理写在plist中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fire.texture = cc.textureCache.addImage(<span class="string">&quot;res/lizi.plist.png&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="添加动画到图层"><a href="#添加动画到图层" class="headerlink" title="添加动画到图层"></a>添加动画到图层</h4><p>最后将粒子动画添加到图层，就能看见粒子动画在屏幕中播放</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.addChild(fire);</span><br><span class="line">fire.setPosition(<span class="number">200</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>本节作业：<br>主要了解所有的系统粒子动画以及掌握自定义粒子动画并加载到程序中。我在作业中实现了通过菜单选择查看不同的粒子动画，并且通过点击屏幕或在屏幕上滑动，粒子会跟着坐标移动。<br>作业代码实现如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite:<span class="literal">null</span>,</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//////////////////////////////</span></span><br><span class="line">        <span class="comment">// 1. super init first</span></span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> backMenu = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;返回&quot;</span>,<span class="built_in">this</span>.backCall,<span class="built_in">this</span>);</span><br><span class="line">        backMenu.setPosition(backMenu.width/<span class="number">2</span>,cc.winSize.height-backMenu.height/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(backMenu);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//添加系统内置粒子效果</span></span><br><span class="line">        <span class="keyword">var</span> lizi;</span><br><span class="line">        <span class="keyword">switch</span>(index)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleFire();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleFireworks();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleFlower();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleGalaxy();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleMeteor();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleSpiral();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleSnow();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleSmoke();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleSun();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleRain();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                lizi = <span class="keyword">new</span> cc.ParticleExplosion();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lizi.texture=cc.textureCache.addImage(<span class="string">&quot;res/ballfire.plist.png&quot;</span>);</span><br><span class="line">        lizi.setPosition(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(lizi);</span><br><span class="line">        lizi.setTag(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    backCall:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cc.director.runScene(<span class="keyword">new</span> MenuLayer());</span><br><span class="line">    &#125;,</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        cc.eventManager.addListener(&#123;</span><br><span class="line">            event:cc.EventListener.TOUCH_ONE_BY_ONE ,</span><br><span class="line">            swallowTouches:<span class="literal">true</span>,</span><br><span class="line">            onTouchBegan:<span class="built_in">this</span>.touchbegan,</span><br><span class="line">            onTouchMoved:<span class="built_in">this</span>.touchmoved,</span><br><span class="line">            onTouchEnded:<span class="built_in">this</span>.touchended</span><br><span class="line">        &#125;,<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchbegan:<span class="function"><span class="keyword">function</span> (<span class="params">touch,event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = touch.getLocationX();</span><br><span class="line">        <span class="keyword">var</span> y = touch.getLocationY();</span><br><span class="line">        event.getCurrentTarget().getChildByTag(<span class="number">1</span>).setPosition(x,y);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchmoved:<span class="function"><span class="keyword">function</span> (<span class="params">touch,event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> x = touch.getLocationX();</span><br><span class="line">        <span class="keyword">var</span> y = touch.getLocationY();</span><br><span class="line">        event.getCurrentTarget().getChildByTag(<span class="number">1</span>).setPosition(x,y);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchended:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MenuLayer = cc.Layer.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line">        <span class="comment">// cocos中的各种系统粒子</span></span><br><span class="line">        <span class="keyword">var</span> file = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;火焰粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        file.setPosition(size.width/<span class="number">2</span>,size.height-file.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        file.setTag(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> yanhua = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;烟花粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        yanhua.setPosition(size.width/<span class="number">2</span>,file.getPositionY()-yanhua.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        yanhua.setTag(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> flower = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;花粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        flower.setPosition(size.width/<span class="number">2</span>,yanhua.getPositionY()-flower.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        flower.setTag(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">var</span> star = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;星系粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        star.setPosition(size.width/<span class="number">2</span>,flower.getPositionY()-star.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        star.setTag(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">var</span> flowerStar = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;流星粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        flowerStar.setPosition(size.width/<span class="number">2</span>,star.getPositionY()-flowerStar.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        flowerStar.setTag(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> rotation = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;漩涡粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        rotation.setPosition(size.width/<span class="number">2</span>,flowerStar.getPositionY()-rotation.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        rotation.setTag(<span class="number">6</span>);</span><br><span class="line">        <span class="keyword">var</span> snow = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;雪粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        snow.setPosition(size.width/<span class="number">2</span>,rotation.getPositionY()-snow.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        snow.setTag(<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">var</span> smoke = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;烟粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        smoke.setPosition(size.width/<span class="number">2</span>,snow.getPositionY()-smoke.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        smoke.setTag(<span class="number">8</span>);</span><br><span class="line">        <span class="keyword">var</span> sun = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;太阳粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        sun.setPosition(size.width/<span class="number">2</span>,smoke.getPositionY()-sun.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        sun.setTag(<span class="number">9</span>);</span><br><span class="line">        <span class="keyword">var</span> rain = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;雨粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        rain.setPosition(size.width/<span class="number">2</span>,sun.getPositionY()-rain.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        rain.setTag(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">var</span> explosion = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;爆炸粒子&quot;</span>,<span class="built_in">this</span>.enterLayer,<span class="built_in">this</span>);</span><br><span class="line">        explosion.setPosition(size.width/<span class="number">2</span>,rain.getPositionY()-explosion.height/<span class="number">2</span><span class="number">-20</span>);</span><br><span class="line">        explosion.setTag(<span class="number">11</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(file,yanhua,flower,star,flowerStar,rotation,snow,smoke,sun,rain,menu,explosion);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">    &#125;,</span><br><span class="line">    enterLayer:<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> HelloWorldLayer(obj.tag);</span><br><span class="line">        cc.director.runScene(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> MenuLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><a href="http://www.cocoscvp.com/usercode/2016_05_03/6766355ed49af56b6c56f001bfac96ae65823c8e/">http://www.cocoscvp.com/usercode/2016_05_03/6766355ed49af56b6c56f001bfac96ae65823c8e/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;本节课介绍如何使用在cocos中使用粒子动画，其中可以使用cocos中包含的11种系统定义好的粒子动画，也可以使用粒子编辑器自定义粒子动画，然后在cocos代码中使用自己定义的粒子动画。</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
  </entry>
  
  <entry>
    <title>CVP认证学习笔记--(何小成)023--加载骨骼动画</title>
    <link href="http://www.hjcenry.com/2016/05/06/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)023--%E5%8A%A0%E8%BD%BD%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    <id>http://www.hjcenry.com/2016/05/06/CVP%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--(%E4%BD%95%E5%B0%8F%E6%88%90)023--%E5%8A%A0%E8%BD%BD%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/</id>
    <published>2016-05-05T16:49:00.000Z</published>
    <updated>2020-09-29T03:25:11.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>本节课介绍如何使用Animation Editor创建骨骼动画，通过骨骼动画，可以让人物形象更加的生动，学习使用Animation Editor编辑骨骼动画，并在游戏场景中加载骨骼动画<a id="more"></a></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>首先需要用到的还是上节课下载好的动画编辑器Animation Editor。</p><h4 id="制作帧动画"><a href="#制作帧动画" class="headerlink" title="制作帧动画"></a>制作帧动画</h4><p>制作骨骼动画的过程相对于制作帧动画来说要麻烦很多，需要在Animation Editor中对每一个骨骼都进行细微的调整，调整完了同帧动画一样，导出资源，，就会有png、plist和json三个文件。</p><h4 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h4><p>同帧动画一样，先将json文件导入到armatureDataManager中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加文件</span></span><br><span class="line">ccs.armatureDataManager.addArmatureFileInfo(res.ani_json);</span><br></pre></td></tr></table></figure><h4 id="创建动画层"><a href="#创建动画层" class="headerlink" title="创建动画层"></a>创建动画层</h4><p>通过Armature创建动画层，创建船长的动画</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ani=<span class="keyword">new</span> ccs.Armature(<span class="string">&quot;chuanzhang&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="播放站立动画"><a href="#播放站立动画" class="headerlink" title="播放站立动画"></a>播放站立动画</h4><p>添加后的船长站立不动</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ani.getAnimation().play(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line"><span class="built_in">this</span>.addChild(ani);</span><br><span class="line">ani.setPosition(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">ani.setTag(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h4 id="动画事件监听"><a href="#动画事件监听" class="headerlink" title="动画事件监听"></a>动画事件监听</h4><p>动画播放之后的回调函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置动画的事件侦听</span></span><br><span class="line">ani.getAnimation().setMovementEventCallFunc(<span class="built_in">this</span>.anievent);</span><br><span class="line"><span class="comment">// 动作结束时执行相关回调</span></span><br><span class="line">anievent:<span class="function"><span class="keyword">function</span> (<span class="params">armature, movementType, movementID</span>) </span>&#123;   </span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">    <span class="comment">// movementType有如下几种类型：</span></span><br><span class="line">    <span class="comment">// 1.boneFrameEvent</span></span><br><span class="line">    <span class="comment">// 2.complete</span></span><br><span class="line">    <span class="comment">// 3.loopComplete</span></span><br><span class="line">    <span class="comment">// 4.movementChange</span></span><br><span class="line">    <span class="comment">// 5.movementFameEvent</span></span><br><span class="line">    <span class="comment">// 6.start</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>本节作业：<br>// 作业要求，实现一个点击英雄<br>// 点击屏幕让船长播放攻击的动画1-3次随机<br>// 然后继续走路<br>与上节课作业差不多，我实现了点击屏幕船长会走到这个位置，点击攻击会进行攻击，同时，场景会有一个敌人npc，npc会随机游走，相遇时，会不停攻击自己，自己也可以攻击npc，双方血量会减少，谁先杀死对方，谁将获得胜利。<br>作业代码实现如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> HelloWorldLayer = cc.Layer.extend(&#123;</span><br><span class="line">    sprite:<span class="literal">null</span>,</span><br><span class="line">    gameState:<span class="number">1</span>,<span class="comment">// 1游戏中，0结束</span></span><br><span class="line">    direction:<span class="number">1</span>,<span class="comment">// 0左，1右</span></span><br><span class="line">    state:<span class="number">0</span>,</span><br><span class="line">    npcDirection:<span class="number">1</span>,</span><br><span class="line">    npcState:<span class="number">0</span>,<span class="comment">//0移动，1攻击</span></span><br><span class="line">    selfHp:<span class="number">100</span>,</span><br><span class="line">    npcHp:<span class="number">100</span>,</span><br><span class="line">    selfHpTxt:<span class="literal">null</span>,</span><br><span class="line">    npcHpTxt:<span class="literal">null</span>,</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//////////////////////////////</span></span><br><span class="line">        <span class="comment">// 1. super init first</span></span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 攻击按钮</span></span><br><span class="line">        <span class="keyword">var</span> attackMenu = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;打&quot;</span>,<span class="built_in">this</span>.attackCall,<span class="built_in">this</span>);</span><br><span class="line">        attackMenu.setPosition(cc.winSize.width<span class="number">-150</span>,<span class="number">100</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(attackMenu);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 血量</span></span><br><span class="line">        <span class="built_in">this</span>.selfHpTxt = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;我方血量:100&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="number">25</span>);</span><br><span class="line">        <span class="built_in">this</span>.npcHpTxt = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;敌方血量:100&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="number">25</span>);</span><br><span class="line">        <span class="built_in">this</span>.selfHpTxt.setPosition(cc.winSize.width<span class="number">-150</span>,cc.winSize.height<span class="number">-50</span>);</span><br><span class="line">        <span class="built_in">this</span>.npcHpTxt.setPosition(<span class="number">150</span>,cc.winSize.height<span class="number">-50</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(<span class="built_in">this</span>.selfHpTxt);</span><br><span class="line">        <span class="built_in">this</span>.addChild(<span class="built_in">this</span>.npcHpTxt);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加载动画</span></span><br><span class="line">        ccs.armatureDataManager.addArmatureFileInfo(res.ani_json);</span><br><span class="line">        <span class="comment">//创建动画层</span></span><br><span class="line">        <span class="keyword">var</span> ani=<span class="keyword">new</span> ccs.Armature(<span class="string">&quot;chuanzhang&quot;</span>);</span><br><span class="line">        <span class="comment">//播放站立动画</span></span><br><span class="line">        ani.getAnimation().play(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(ani);</span><br><span class="line">        ani.setPosition(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        ani.setTag(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//设置动画的事件侦听</span></span><br><span class="line">        ani.getAnimation().setMovementEventCallFunc(<span class="built_in">this</span>.anievent);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 敌人npc</span></span><br><span class="line">        <span class="comment">//加载动画</span></span><br><span class="line">        ccs.armatureDataManager.addArmatureFileInfo(res.ani_json);</span><br><span class="line">        <span class="comment">//创建动画层</span></span><br><span class="line">        <span class="keyword">var</span> npc=<span class="keyword">new</span> ccs.Armature(<span class="string">&quot;chuanzhang&quot;</span>);</span><br><span class="line">        <span class="comment">//播放站立动画</span></span><br><span class="line">        npc.getAnimation().play(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(npc);</span><br><span class="line">        npc.setPosition(<span class="number">400</span>,<span class="number">200</span>);</span><br><span class="line">        npc.setTag(<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//设置动画的事件侦听</span></span><br><span class="line">        npc.getAnimation().setMovementEventCallFunc(<span class="built_in">this</span>.npcevent);</span><br><span class="line">        <span class="built_in">this</span>.npcMove();</span><br><span class="line">        <span class="built_in">this</span>.schedule(<span class="built_in">this</span>.update);</span><br><span class="line">        <span class="built_in">this</span>.npcState = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 作业要求，实现一个点击英雄</span></span><br><span class="line">        <span class="comment">// 点击屏幕让船长播放攻击的动画1-3次随机</span></span><br><span class="line">        <span class="comment">// 然后继续走路</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 返回按钮</span></span><br><span class="line">    back:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cc.director.runScene(<span class="keyword">new</span> startLayer());</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 计划任务，写敌人npc的ai</span></span><br><span class="line">    update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> bn=<span class="built_in">this</span>.getChildByTag(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> npc=<span class="built_in">this</span>.getChildByTag(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.gameState==<span class="number">0</span>&amp;&amp;<span class="built_in">this</span>.getChildByTag(<span class="number">111</span>)==<span class="literal">null</span>)&#123;<span class="comment">// 游戏结束，判断胜利还是失败</span></span><br><span class="line">            <span class="keyword">var</span> text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(npc==<span class="literal">null</span>)&#123;<span class="comment">// 赢了</span></span><br><span class="line">                text = <span class="string">&quot;You Win&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bn==<span class="literal">null</span>)&#123;<span class="comment">// 输了</span></span><br><span class="line">                text = <span class="string">&quot;You Lose&quot;</span>;            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.removeAllChildren();</span><br><span class="line">            <span class="keyword">var</span> over = <span class="keyword">new</span> cc.LabelTTF(text,<span class="string">&quot;&quot;</span>,<span class="number">50</span>);</span><br><span class="line">            over.setPosition(cc.winSize.width/<span class="number">2</span>,cc.winSize.height/<span class="number">2</span>);</span><br><span class="line">            <span class="built_in">this</span>.addChild(over);</span><br><span class="line">            over.setTag(<span class="number">111</span>);</span><br><span class="line">            over.runAction(cc.sequence(cc.scaleTo(<span class="number">0.2</span>,<span class="number">2</span>),cc.scaleTo(<span class="number">0.2</span>,<span class="number">0.5</span>),cc.scaleTo(<span class="number">0.2</span>,<span class="number">1</span>)));</span><br><span class="line">            <span class="comment">// 按钮</span></span><br><span class="line">            <span class="keyword">var</span> back = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;返回&quot;</span>,<span class="built_in">this</span>.back,<span class="built_in">this</span>);</span><br><span class="line">            back.setPosition(cc.winSize.width/<span class="number">2</span>,over.height+<span class="number">50</span>);</span><br><span class="line">            <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(back);</span><br><span class="line">            menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.gameState==<span class="number">1</span>)&#123;<span class="comment">// 游戏运行中</span></span><br><span class="line">            <span class="keyword">if</span>(</span><br><span class="line">                (<span class="built_in">Math</span>.abs(npc.getPositionX()-bn.getPositionX()))&lt;=bn.width/<span class="number">2</span></span><br><span class="line">                &amp;&amp;(<span class="built_in">Math</span>.abs(npc.getPositionY()-bn.getPositionY())&lt;=bn.height/<span class="number">4</span>)</span><br><span class="line">            )&#123;<span class="comment">// 主角出现在npc的攻击范围内</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.npcState==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="built_in">this</span>.npcState = <span class="number">1</span>;</span><br><span class="line">                    npc.stopAllActions();</span><br><span class="line">                    npc.getAnimation().play(<span class="string">&quot;attack&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.npcState==<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="built_in">this</span>.npcState = <span class="number">0</span>;</span><br><span class="line">                    npc.getAnimation().play(<span class="string">&quot;walk&quot;</span>);</span><br><span class="line">                    <span class="built_in">this</span>.npcMove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 敌人移动动画</span></span><br><span class="line">    npcMove:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> npcDirection = <span class="built_in">this</span>.npcDirection;</span><br><span class="line">        <span class="keyword">var</span> npc=<span class="built_in">this</span>.getChildByTag(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> randomX = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*(cc.winSize.width-npc.width)+npc.width/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> randomY = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*(cc.winSize.height-npc.height)+npc.height/<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 走路时间</span></span><br><span class="line">        <span class="keyword">var</span> time = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.pow(randomX-npc.getPositionX(),<span class="number">2</span>)+<span class="built_in">Math</span>.pow(randomY-npc.getPositionY(),<span class="number">2</span>)))/<span class="number">100</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(randomX&lt;npc.getPositionX()&amp;&amp;npcDirection==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 左转</span></span><br><span class="line">            npc.runAction(cc.scaleTo(<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>));</span><br><span class="line">            <span class="built_in">this</span>.npcDirection = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(randomX&gt;npc.getPositionX()&amp;&amp;npcDirection==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">// 右转</span></span><br><span class="line">            npc.runAction(cc.scaleTo(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">            <span class="built_in">this</span>.npcDirection = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        npc.getAnimation().play(<span class="string">&quot;walk&quot;</span>);</span><br><span class="line">        npc.runAction(cc.sequence(cc.moveTo(time,cc.p(randomX,randomY)),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">npc</span>)</span>&#123;</span><br><span class="line">            npc.parent.npcMove();</span><br><span class="line">        &#125;,npc)));</span><br><span class="line">    &#125;,</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        cc.eventManager.addListener(&#123;</span><br><span class="line">            event:cc.EventListener.TOUCH_ONE_BY_ONE,</span><br><span class="line">            swallowTouches:<span class="literal">true</span>,</span><br><span class="line">            onTouchBegan:<span class="built_in">this</span>.touchbegan,</span><br><span class="line">            onTouchMoved:<span class="built_in">this</span>.touchmoved,</span><br><span class="line">            onTouchEnded:<span class="built_in">this</span>.touchended</span><br><span class="line">        &#125;,<span class="built_in">this</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    touchbegan:<span class="function"><span class="keyword">function</span>(<span class="params">touch,event</span>)</span>&#123;</span><br><span class="line">        event.getCurrentTarget().state = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(event.getCurrentTarget().gameState==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> x = touch.getLocation().x;</span><br><span class="line">        <span class="keyword">var</span> y = touch.getLocation().y;</span><br><span class="line">        <span class="keyword">var</span> direction = event.getCurrentTarget().direction;</span><br><span class="line">        <span class="keyword">var</span> bn = event.getCurrentTarget().getChildByTag(<span class="number">1</span>);</span><br><span class="line">        bn.stopAllActions();</span><br><span class="line">        <span class="comment">// 走路时间</span></span><br><span class="line">        <span class="keyword">var</span> time = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.pow(x-bn.getPositionX(),<span class="number">2</span>)+<span class="built_in">Math</span>.pow(y-bn.getPositionY(),<span class="number">2</span>)))/<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;bn.getPositionX()&amp;&amp;direction==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 左转</span></span><br><span class="line">            bn.runAction(cc.scaleTo(<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>));</span><br><span class="line">            event.getCurrentTarget().direction = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;bn.getPositionX()&amp;&amp;direction==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">// 右转</span></span><br><span class="line">            bn.runAction(cc.scaleTo(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">            event.getCurrentTarget().direction = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bn.getAnimation().play(<span class="string">&quot;walk&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> walkTo = <span class="keyword">new</span> cc.sequence(cc.moveTo(time,cc.p(x,y)),cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">bn</span>)</span>&#123;</span><br><span class="line">            bn.getAnimation().play(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line">        &#125;,bn));</span><br><span class="line">        bn.runAction(walkTo);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchmoved:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    touchended:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 攻击按钮回调</span></span><br><span class="line">    attackCall:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.state==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.state=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>).stopAllActions();</span><br><span class="line">            <span class="comment">// 攻击动画</span></span><br><span class="line">            <span class="built_in">this</span>.getChildByTag(<span class="number">1</span>).getAnimation().play(<span class="string">&quot;attack&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 攻击npc血量</span></span><br><span class="line">    anievent:<span class="function"><span class="keyword">function</span>(<span class="params">armature,movementtype,movementID</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(movementtype==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(movementID==<span class="string">&quot;attack&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                armature.parent.stopAllActions();</span><br><span class="line">                <span class="keyword">if</span>(</span><br><span class="line">                    <span class="built_in">Math</span>.abs(armature.parent.getChildByTag(<span class="number">2</span>).getPositionX()-armature.parent.getChildByTag(<span class="number">1</span>).getPositionX())&lt;=armature.parent.getChildByTag(<span class="number">1</span>).width/<span class="number">2</span></span><br><span class="line">                    &amp;&amp;<span class="built_in">Math</span>.abs(armature.parent.getChildByTag(<span class="number">2</span>).getPositionY()-armature.parent.getChildByTag(<span class="number">1</span>).getPositionY())&lt;=armature.parent.getChildByTag(<span class="number">1</span>).height/<span class="number">4</span></span><br><span class="line">                )&#123;</span><br><span class="line">                    armature.parent.state=<span class="number">1</span>;</span><br><span class="line">                    armature.parent.npcHp-=<span class="number">4</span>+<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">2</span>);</span><br><span class="line">                    armature.parent.npcHpTxt.runAction(</span><br><span class="line">                        cc.sequence(</span><br><span class="line">                            cc.scaleTo(<span class="number">0.2</span>,<span class="number">1.2</span>),</span><br><span class="line">                            cc.scaleTo(<span class="number">0.1</span>,<span class="number">0.9</span>),</span><br><span class="line">                            cc.scaleTo(<span class="number">0.1</span>,<span class="number">1</span>),</span><br><span class="line">                            cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">armature</span>)</span>&#123;</span><br><span class="line">                                armature.parent.npcHpTxt.setString(<span class="string">&quot;敌方血量:&quot;</span>+armature.parent.npcHp);</span><br><span class="line">                            &#125;,armature)));</span><br><span class="line">                    <span class="keyword">if</span>(armature.parent.npcHp&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                        armature.parent.getChildByTag(<span class="number">2</span>).removeFromParent();</span><br><span class="line">                        armature.parent.gameState=<span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                armature.parent.state = <span class="number">0</span>;</span><br><span class="line">                armature.getAnimation().play(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// npc攻击我方血量</span></span><br><span class="line">    npcevent:<span class="function"><span class="keyword">function</span>(<span class="params">armature,movementtype,movementID</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(movementtype==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(movementID==<span class="string">&quot;attack&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                armature.parent.selfHp-=<span class="number">2</span>+<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">2</span>);</span><br><span class="line">                armature.parent.selfHpTxt.runAction(</span><br><span class="line">                    cc.sequence(</span><br><span class="line">                        cc.scaleTo(<span class="number">0.2</span>,<span class="number">1.2</span>),</span><br><span class="line">                        cc.scaleTo(<span class="number">0.1</span>,<span class="number">0.9</span>),</span><br><span class="line">                        cc.scaleTo(<span class="number">0.1</span>,<span class="number">1</span>),</span><br><span class="line">                        cc.callFunc(<span class="function"><span class="keyword">function</span>(<span class="params">armature</span>)</span>&#123;</span><br><span class="line">                            armature.parent.selfHpTxt.setString(<span class="string">&quot;我方血量:&quot;</span>+armature.parent.selfHp);</span><br><span class="line">                        &#125;,armature)));</span><br><span class="line">                <span class="keyword">if</span>(armature.parent.selfHp&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    armature.parent.getChildByTag(<span class="number">1</span>).removeFromParent();</span><br><span class="line">                    armature.getAnimation().play(<span class="string">&quot;hold&quot;</span>);</span><br><span class="line">                    armature.parent.gameState=<span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> startLayer = cc.Layer.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line">        <span class="comment">// 标题</span></span><br><span class="line">        <span class="keyword">var</span> title = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;真假船长大战&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="number">100</span>);</span><br><span class="line">        title.setPosition(size.width/<span class="number">2</span>,size.height<span class="number">-100</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(title);</span><br><span class="line">        <span class="comment">// 按钮</span></span><br><span class="line">        <span class="keyword">var</span> startMenu = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;开始游戏&quot;</span>,<span class="built_in">this</span>.start,<span class="built_in">this</span>);</span><br><span class="line">        startMenu.setPosition(size.width/<span class="number">2</span>,size.height/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> helpMenu = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;帮助&quot;</span>,<span class="built_in">this</span>.help,<span class="built_in">this</span>);</span><br><span class="line">        helpMenu.setPosition(size.width/<span class="number">2</span>,startMenu.height+<span class="number">50</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(startMenu,helpMenu);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    start:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cc.director.runScene(<span class="keyword">new</span> HelloWorldLayer());</span><br><span class="line">    &#125;,</span><br><span class="line">    help:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cc.director.runScene(<span class="keyword">new</span> helpLayer());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> helpLayer = cc.Layer.extend(&#123;</span><br><span class="line">    ctor:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> size = cc.winSize;</span><br><span class="line">        <span class="comment">// 标题</span></span><br><span class="line">        <span class="keyword">var</span> title = <span class="keyword">new</span> cc.LabelTTF(<span class="string">&quot;游戏中有一个假船长四处游走，\r\n当你们靠的很近时，它会攻击你，你也可以攻击它，\r\n谁先打倒对方谁将获得胜利！&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        title.setPosition(size.width/<span class="number">2</span>,size.height<span class="number">-100</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(title);</span><br><span class="line">        <span class="comment">// 按钮</span></span><br><span class="line">        <span class="keyword">var</span> back = <span class="keyword">new</span> cc.MenuItemFont(<span class="string">&quot;返回&quot;</span>,<span class="built_in">this</span>.help,<span class="built_in">this</span>);</span><br><span class="line">        back.setPosition(size.width/<span class="number">2</span>,size.height/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> menu = <span class="keyword">new</span> cc.Menu(back);</span><br><span class="line">        menu.setPosition(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">this</span>.addChild(menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    help:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cc.director.runScene(<span class="keyword">new</span> startLayer());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> HelloWorldScene = cc.Scene.extend(&#123;</span><br><span class="line">    onEnter:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._super();</span><br><span class="line">        <span class="keyword">var</span> layer = <span class="keyword">new</span> startLayer();</span><br><span class="line">        <span class="built_in">this</span>.addChild(layer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><a href="http://www.cocoscvp.com/usercode/2016_05_03/59d170f1dd8aec6a65cf900f6759098d960ab296/">http://www.cocoscvp.com/usercode/2016_05_03/59d170f1dd8aec6a65cf900f6759098d960ab296/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;本节课介绍如何使用Animation Editor创建骨骼动画，通过骨骼动画，可以让人物形象更加的生动，学习使用Animation Editor编辑骨骼动画，并在游戏场景中加载骨骼动画</summary>
    
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/categories/cocos2d-js/"/>
    
    
    <category term="cocos2d-js" scheme="http://www.hjcenry.com/tags/cocos2d-js/"/>
    
    <category term="cvp" scheme="http://www.hjcenry.com/tags/cvp/"/>
    
  </entry>
  
</feed>
